

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Mar 13 16:38:36 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     _ADCON1	set	4033
    18  0000                     _PORTA	set	3968
    19  0000                     _PORTB	set	3969
    20  0000                     _PORTC	set	3970
    21  0000                     _TRISA	set	3986
    22  0000                     _TRISB	set	3987
    23  0000                     _TRISC	set	3988
    24                           
    25 ;;
    26 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    27 ;;
    28 ;; *************** function _main *****************
    29 ;; Defined at:
    30 ;;		line 33 in file "main.c"
    31 ;; Parameters:    Size  Location     Type
    32 ;;		None
    33 ;; Auto vars:     Size  Location     Type
    34 ;;  i               2   24[COMRAM] int 
    35 ;;  i               2   22[COMRAM] int 
    36 ;;  num             2   20[COMRAM] int 
    37 ;; Return value:  Size  Location     Type
    38 ;;		None               void
    39 ;; Registers used:
    40 ;;		wreg, status,2, status,0, cstack
    41 ;; Tracked objects:
    42 ;;		On entry : 0/0
    43 ;;		On exit  : 0/0
    44 ;;		Unchanged: 0/0
    45 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    46 ;;      Params:         0       0       0       0       0       0       0
    47 ;;      Locals:         6       0       0       0       0       0       0
    48 ;;      Temps:          2       0       0       0       0       0       0
    49 ;;      Totals:         8       0       0       0       0       0       0
    50 ;;Total ram usage:        8 bytes
    51 ;; Hardware stack levels required when called:    2
    52 ;; This function calls:
    53 ;;		_clear_display
    54 ;;		_print_correct
    55 ;;		_print_error
    56 ;;		_rand
    57 ;; This function is called by:
    58 ;;		Startup code after reset
    59 ;; This function uses a non-reentrant model
    60 ;;
    61                           
    62                           	psect	text0
    63  007F26                     __ptext0:
    64                           	opt stack 0
    65  007F26                     _main:
    66                           	opt stack 29
    67                           
    68                           ;main.c: 36: ADCON1 = 0x0f;
    69                           
    70                           ;incstack = 0
    71  007F26  0E0F               	movlw	15
    72  007F28  6EC1               	movwf	4033,c	;volatile
    73                           
    74                           ;main.c: 37: TRISB = 0xff;
    75  007F2A  6893               	setf	3987,c	;volatile
    76                           
    77                           ;main.c: 39: TRISA &= ~(0x0f);
    78  007F2C  0EF0               	movlw	240
    79  007F2E  1692               	andwf	3986,f,c	;volatile
    80                           
    81                           ;main.c: 40: TRISC = 0;
    82  007F30  0E00               	movlw	0
    83  007F32  6E94               	movwf	3988,c	;volatile
    84  007F34                     l663:
    85                           
    86                           ;main.c: 44: {
    87                           ;main.c: 45: num = rand()%4;
    88  007F34  EC5E  F03F         	call	_rand	;wreg free
    89  007F38  0E03               	movlw	3
    90  007F3A  140D               	andwf	?_rand,w,c
    91  007F3C  6E15               	movwf	main@num,c
    92  007F3E  6A16               	clrf	main@num+1,c
    93                           
    94                           ;main.c: 47: PORTA = 0;
    95  007F40  0E00               	movlw	0
    96  007F42  6E80               	movwf	3968,c	;volatile
    97                           
    98                           ;main.c: 48: PORTA |= 1 << num;
    99  007F44  C015  F013         	movff	main@num,??_main
   100  007F48  0E01               	movlw	1
   101  007F4A  6E14               	movwf	(??_main+1)& (0+255),c
   102  007F4C  2A13               	incf	??_main,f,c
   103  007F4E  D002               	goto	u44
   104  007F50                     u45:
   105  007F50  90D8               	bcf	status,0,c
   106  007F52  3614               	rlcf	??_main+1,f,c
   107  007F54                     u44:
   108  007F54  2E13               	decfsz	??_main,f,c
   109  007F56  D7FC               	goto	u45
   110  007F58  5014               	movf	??_main+1,w,c
   111  007F5A  1280               	iorwf	3968,f,c	;volatile
   112                           
   113                           ;main.c: 50: if((PORTB&0xf) == (PORTA&0xf))
   114  007F5C  CF80 F013          	movff	3968,??_main	;volatile
   115  007F60  0E0F               	movlw	15
   116  007F62  1613               	andwf	??_main,f,c
   117  007F64  5081               	movf	3969,w,c	;volatile
   118  007F66  0B0F               	andlw	15
   119  007F68  1813               	xorwf	??_main,w,c
   120  007F6A  A4D8               	btfss	status,2,c
   121  007F6C  D018               	goto	l683
   122                           
   123                           ;main.c: 51: {
   124                           ;main.c: 52: print_correct();
   125  007F6E  EC1C  F03F         	call	_print_correct	;wreg free
   126                           
   127                           ;main.c: 53: for(int i=0;i<4;i++) _delay((unsigned long)((100)*(4000000/4000.0)));
   128  007F72  0E00               	movlw	0
   129  007F74  6E18               	movwf	main@i+1,c
   130  007F76  0E00               	movlw	0
   131  007F78  6E17               	movwf	main@i,c
   132  007F7A  5018               	movf	main@i+1,w,c
   133  007F7C  0A80               	xorlw	128
   134  007F7E  0F80               	addlw	-128
   135  007F80  0E04               	movlw	4
   136  007F82  B4D8               	btfsc	status,2,c
   137  007F84  5C17               	subwf	main@i,w,c
   138  007F86  B0D8               	btfsc	status,0,c
   139  007F88  D031               	goto	l699
   140  007F8A  0E82               	movlw	130
   141  007F8C  6E13               	movwf	??_main& (0+255),c
   142  007F8E  0EDE               	movlw	222
   143  007F90                     u127:
   144  007F90  2EE8               	decfsz	wreg,f,c
   145  007F92  D7FE               	goto	u127
   146  007F94  2E13               	decfsz	??_main& (0+255),f,c
   147  007F96  D7FC               	goto	u127
   148  007F98  4A17               	infsnz	main@i,f,c
   149  007F9A  2A18               	incf	main@i+1,f,c
   150  007F9C  D7EE               	goto	L1
   151  007F9E                     l683:
   152                           
   153                           ;main.c: 56: else if((PORTB&0xf) != (PORTA&0xf) && (PORTB&0x0f)!=0 )
   154  007F9E  CF80 F013          	movff	3968,??_main	;volatile
   155  007FA2  0E0F               	movlw	15
   156  007FA4  1613               	andwf	??_main,f,c
   157  007FA6  5081               	movf	3969,w,c	;volatile
   158  007FA8  0B0F               	andlw	15
   159  007FAA  1813               	xorwf	??_main,w,c
   160  007FAC  B4D8               	btfsc	status,2,c
   161  007FAE  D01E               	goto	l699
   162  007FB0  CF81 F013          	movff	3969,??_main	;volatile
   163  007FB4  0E0F               	movlw	15
   164  007FB6  1613               	andwf	??_main,f,c
   165  007FB8  B4D8               	btfsc	status,2,c
   166  007FBA  D018               	goto	l699
   167                           
   168                           ;main.c: 57: {
   169                           ;main.c: 58: print_error();
   170  007FBC  EC1F  F03F         	call	_print_error	;wreg free
   171                           
   172                           ;main.c: 59: for(int i=0;i<4;i++)_delay((unsigned long)((100)*(4000000/4000.0)));
   173  007FC0  0E00               	movlw	0
   174  007FC2  6E1A               	movwf	main@i_46+1,c
   175  007FC4  0E00               	movlw	0
   176  007FC6  6E19               	movwf	main@i_46,c
   177  007FC8  501A               	movf	main@i_46+1,w,c
   178  007FCA  0A80               	xorlw	128
   179  007FCC  0F80               	addlw	-128
   180  007FCE  0E04               	movlw	4
   181  007FD0  B4D8               	btfsc	status,2,c
   182  007FD2  5C19               	subwf	main@i_46,w,c
   183  007FD4  B0D8               	btfsc	status,0,c
   184  007FD6  D00A               	goto	l699
   185  007FD8  0E82               	movlw	130
   186  007FDA  6E13               	movwf	??_main& (0+255),c
   187  007FDC  0EDE               	movlw	222
   188  007FDE                     u137:
   189  007FDE  2EE8               	decfsz	wreg,f,c
   190  007FE0  D7FE               	goto	u137
   191  007FE2  2E13               	decfsz	??_main& (0+255),f,c
   192  007FE4  D7FC               	goto	u137
   193  007FE6  4A19               	infsnz	main@i_46,f,c
   194  007FE8  2A1A               	incf	main@i_46+1,f,c
   195  007FEA  D7EE               	goto	L2
   196  007FEC                     l699:
   197                           
   198                           ;main.c: 60: }
   199                           ;main.c: 62: _delay((unsigned long)((100)*(4000000/4000.0)));
   200  007FEC  0E82               	movlw	130
   201  007FEE  6E13               	movwf	??_main& (0+255),c
   202  007FF0  0EDE               	movlw	222
   203  007FF2                     u147:
   204  007FF2  2EE8               	decfsz	wreg,f,c
   205  007FF4  D7FE               	goto	u147
   206  007FF6  2E13               	decfsz	??_main& (0+255),f,c
   207  007FF8  D7FC               	goto	u147
   208                           
   209                           ;main.c: 63: clear_display();
   210  007FFA  EC19  F03F         	call	_clear_display	;wreg free
   211  007FFE  D79A               	goto	l663
   212  008000                     __end_of_main:
   213                           	opt stack 0
   214                           wreg	equ	0xFE8
   215                           status	equ	0xFD8
   216                           
   217                           	psect	cinit
   218  007E44                     __pcinit:
   219                           	opt stack 0
   220  007E44                     start_initialization:
   221                           	opt stack 0
   222  007E44                     __initialization:
   223                           	opt stack 0
   224                           
   225                           ; Clear objects allocated to COMRAM (5 bytes)
   226  007E44  6A1F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   227  007E46  6A1E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   228  007E48  6A1D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   229  007E4A  6A1C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   230  007E4C  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   231  007E4E                     end_of_initialization:
   232                           	opt stack 0
   233  007E4E                     __end_of__initialization:
   234                           	opt stack 0
   235  007E4E  0100               	movlb	0
   236  007E50  EF93  F03F         	goto	_main	;jump to C main() function
   237                           wreg	equ	0xFE8
   238                           status	equ	0xFD8
   239                           
   240                           	psect	bssCOMRAM
   241  00001B                     __pbssCOMRAM:
   242                           	opt stack 0
   243  00001B                     _randx:
   244                           	opt stack 0
   245  00001B                     	ds	4
   246  00001F                     _randf:
   247                           	opt stack 0
   248  00001F                     	ds	1
   249                           wreg	equ	0xFE8
   250                           status	equ	0xFD8
   251                           
   252                           	psect	cstackCOMRAM
   253  000001                     __pcstackCOMRAM:
   254                           	opt stack 0
   255  000001                     ?___lmul:
   256                           	opt stack 0
   257  000001                     srand@x:
   258                           	opt stack 0
   259  000001                     ___lmul@multiplier:
   260                           	opt stack 0
   261                           
   262                           ; 4 bytes @ 0x0
   263  000001                     	ds	2
   264  000003                     
   265                           ; 0 bytes @ 0x2
   266  000003                     	ds	2
   267  000005                     ___lmul@multiplicand:
   268                           	opt stack 0
   269                           
   270                           ; 4 bytes @ 0x4
   271  000005                     	ds	4
   272  000009                     ___lmul@product:
   273                           	opt stack 0
   274                           
   275                           ; 4 bytes @ 0x8
   276  000009                     	ds	4
   277  00000D                     ?_rand:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0xC
   281  00000D                     	ds	2
   282  00000F                     ??_rand:
   283                           
   284                           ; 0 bytes @ 0xE
   285  00000F                     	ds	4
   286  000013                     ??_main:
   287                           
   288                           ; 0 bytes @ 0x12
   289  000013                     	ds	2
   290  000015                     main@num:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x14
   294  000015                     	ds	2
   295  000017                     main@i:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x16
   299  000017                     	ds	2
   300  000019                     main@i_46:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x18
   304  000019                     	ds	2
   305                           wreg	equ	0xFE8
   306                           status	equ	0xFD8
   307                           
   308 ;; *************** function _rand *****************
   309 ;; Defined at:
   310 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\rand.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  2   12[COMRAM] int 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   324 ;;      Params:         2       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0
   326 ;;      Temps:          4       0       0       0       0       0       0
   327 ;;      Totals:         6       0       0       0       0       0       0
   328 ;;Total ram usage:        6 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; Hardware stack levels required when called:    1
   331 ;; This function calls:
   332 ;;		___lmul
   333 ;;		_srand
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text1
   340  007EBC                     __ptext1:
   341                           	opt stack 0
   342  007EBC                     _rand:
   343                           	opt stack 29
   344                           
   345                           ;incstack = 0
   346  007EBC  661F               	tstfsz	_randf,c
   347  007EBE  D006               	goto	l651
   348  007EC0  0E00               	movlw	0
   349  007EC2  6E02               	movwf	srand@x+1,c
   350  007EC4  0E01               	movlw	1
   351  007EC6  6E01               	movwf	srand@x,c
   352  007EC8  EC2A  F03F         	call	_srand	;wreg free
   353  007ECC                     l651:
   354  007ECC  C01B  F001         	movff	_randx,___lmul@multiplier
   355  007ED0  C01C  F002         	movff	_randx+1,___lmul@multiplier+1
   356  007ED4  C01D  F003         	movff	_randx+2,___lmul@multiplier+2
   357  007ED8  C01E  F004         	movff	_randx+3,___lmul@multiplier+3
   358  007EDC  0E6D               	movlw	109
   359  007EDE  6E05               	movwf	___lmul@multiplicand,c
   360  007EE0  0E4E               	movlw	78
   361  007EE2  6E06               	movwf	___lmul@multiplicand+1,c
   362  007EE4  0EC6               	movlw	198
   363  007EE6  6E07               	movwf	___lmul@multiplicand+2,c
   364  007EE8  0E41               	movlw	65
   365  007EEA  6E08               	movwf	___lmul@multiplicand+3,c
   366  007EEC  EC33  F03F         	call	___lmul	;wreg free
   367  007EF0  C001  F00F         	movff	?___lmul,??_rand
   368  007EF4  C002  F010         	movff	?___lmul+1,??_rand+1
   369  007EF8  C003  F011         	movff	?___lmul+2,??_rand+2
   370  007EFC  C004  F012         	movff	?___lmul+3,??_rand+3
   371  007F00  0E39               	movlw	57
   372  007F02  240F               	addwf	??_rand,w,c
   373  007F04  6E1B               	movwf	_randx,c
   374  007F06  0E30               	movlw	48
   375  007F08  2010               	addwfc	??_rand+1,w,c
   376  007F0A  6E1C               	movwf	_randx+1,c
   377  007F0C  0E00               	movlw	0
   378  007F0E  2011               	addwfc	??_rand+2,w,c
   379  007F10  6E1D               	movwf	_randx+2,c
   380  007F12  0E00               	movlw	0
   381  007F14  2012               	addwfc	??_rand+3,w,c
   382  007F16  6E1E               	movwf	_randx+3,c
   383  007F18  0EFF               	movlw	255
   384  007F1A  141D               	andwf	(_randx+2)& (0+255),w,c
   385  007F1C  6E0D               	movwf	?_rand,c
   386  007F1E  0E7F               	movlw	127
   387  007F20  141E               	andwf	(_randx+3)& (0+255),w,c
   388  007F22  6E0E               	movwf	?_rand+1,c
   389  007F24  0012               	return	
   390  007F26                     __end_of_rand:
   391                           	opt stack 0
   392                           wreg	equ	0xFE8
   393                           status	equ	0xFD8
   394                           
   395 ;; *************** function _srand *****************
   396 ;; Defined at:
   397 ;;		line 7 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\rand.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;  x               2    0[COMRAM] unsigned int 
   400 ;; Auto vars:     Size  Location     Type
   401 ;;		None
   402 ;; Return value:  Size  Location     Type
   403 ;;		None               void
   404 ;; Registers used:
   405 ;;		wreg, status,2
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   411 ;;      Params:         2       0       0       0       0       0       0
   412 ;;      Locals:         0       0       0       0       0       0       0
   413 ;;      Temps:          0       0       0       0       0       0       0
   414 ;;      Totals:         2       0       0       0       0       0       0
   415 ;;Total ram usage:        2 bytes
   416 ;; Hardware stack levels used:    1
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		_rand
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	text2
   425  007E54                     __ptext2:
   426                           	opt stack 0
   427  007E54                     _srand:
   428                           	opt stack 29
   429                           
   430                           ;incstack = 0
   431  007E54  C001  F01B         	movff	srand@x,_randx
   432  007E58  C002  F01C         	movff	srand@x+1,_randx+1
   433  007E5C  6A1D               	clrf	_randx+2,c
   434  007E5E  6A1E               	clrf	_randx+3,c
   435  007E60  0E01               	movlw	1
   436  007E62  6E1F               	movwf	_randf,c
   437  007E64  0012               	return	
   438  007E66                     __end_of_srand:
   439                           	opt stack 0
   440                           wreg	equ	0xFE8
   441                           status	equ	0xFD8
   442                           
   443 ;; *************** function ___lmul *****************
   444 ;; Defined at:
   445 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;  multiplier      4    0[COMRAM] unsigned long 
   448 ;;  multiplicand    4    4[COMRAM] unsigned long 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  product         4    8[COMRAM] unsigned long 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  4    0[COMRAM] unsigned long 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   460 ;;      Params:         8       0       0       0       0       0       0
   461 ;;      Locals:         4       0       0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0       0       0
   463 ;;      Totals:        12       0       0       0       0       0       0
   464 ;;Total ram usage:       12 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_rand
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text3
   474  007E66                     __ptext3:
   475                           	opt stack 0
   476  007E66                     ___lmul:
   477                           	opt stack 29
   478                           
   479                           ;incstack = 0
   480  007E66  0E00               	movlw	0
   481  007E68  6E09               	movwf	___lmul@product,c
   482  007E6A  0E00               	movlw	0
   483  007E6C  6E0A               	movwf	___lmul@product+1,c
   484  007E6E  0E00               	movlw	0
   485  007E70  6E0B               	movwf	___lmul@product+2,c
   486  007E72  0E00               	movlw	0
   487  007E74  6E0C               	movwf	___lmul@product+3,c
   488  007E76                     l629:
   489  007E76  A001               	btfss	___lmul@multiplier,0,c
   490  007E78  D008               	goto	l633
   491  007E7A  5005               	movf	___lmul@multiplicand,w,c
   492  007E7C  2609               	addwf	___lmul@product,f,c
   493  007E7E  5006               	movf	___lmul@multiplicand+1,w,c
   494  007E80  220A               	addwfc	___lmul@product+1,f,c
   495  007E82  5007               	movf	___lmul@multiplicand+2,w,c
   496  007E84  220B               	addwfc	___lmul@product+2,f,c
   497  007E86  5008               	movf	___lmul@multiplicand+3,w,c
   498  007E88  220C               	addwfc	___lmul@product+3,f,c
   499  007E8A                     l633:
   500  007E8A  90D8               	bcf	status,0,c
   501  007E8C  3605               	rlcf	___lmul@multiplicand,f,c
   502  007E8E  3606               	rlcf	___lmul@multiplicand+1,f,c
   503  007E90  3607               	rlcf	___lmul@multiplicand+2,f,c
   504  007E92  3608               	rlcf	___lmul@multiplicand+3,f,c
   505  007E94  90D8               	bcf	status,0,c
   506  007E96  3204               	rrcf	___lmul@multiplier+3,f,c
   507  007E98  3203               	rrcf	___lmul@multiplier+2,f,c
   508  007E9A  3202               	rrcf	___lmul@multiplier+1,f,c
   509  007E9C  3201               	rrcf	___lmul@multiplier,f,c
   510  007E9E  5004               	movf	___lmul@multiplier+3,w,c
   511  007EA0  1001               	iorwf	___lmul@multiplier,w,c
   512  007EA2  1002               	iorwf	___lmul@multiplier+1,w,c
   513  007EA4  1003               	iorwf	___lmul@multiplier+2,w,c
   514  007EA6  A4D8               	btfss	status,2,c
   515  007EA8  D7E6               	goto	l629
   516  007EAA  C009  F001         	movff	___lmul@product,?___lmul
   517  007EAE  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   518  007EB2  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   519  007EB6  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   520  007EBA  0012               	return	
   521  007EBC                     __end_of___lmul:
   522                           	opt stack 0
   523                           wreg	equ	0xFE8
   524                           status	equ	0xFD8
   525                           
   526 ;; *************** function _print_error *****************
   527 ;; Defined at:
   528 ;;		line 24 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;		None               void
   535 ;; Registers used:
   536 ;;		wreg, status,2
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   542 ;;      Params:         0       0       0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text4
   556  007E3E                     __ptext4:
   557                           	opt stack 0
   558  007E3E                     _print_error:
   559                           	opt stack 30
   560                           
   561                           ;main.c: 26: PORTC = 0b01110110;
   562                           
   563                           ;incstack = 0
   564  007E3E  0E76               	movlw	118
   565  007E40  6E82               	movwf	3970,c	;volatile
   566  007E42  0012               	return	
   567  007E44                     __end_of_print_error:
   568                           	opt stack 0
   569                           wreg	equ	0xFE8
   570                           status	equ	0xFD8
   571                           
   572 ;; *************** function _print_correct *****************
   573 ;; Defined at:
   574 ;;		line 20 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;		None               void
   581 ;; Registers used:
   582 ;;		wreg, status,2
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   588 ;;      Params:         0       0       0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text5
   602  007E38                     __ptext5:
   603                           	opt stack 0
   604  007E38                     _print_correct:
   605                           	opt stack 30
   606                           
   607                           ;main.c: 22: PORTC = 0b00111111;
   608                           
   609                           ;incstack = 0
   610  007E38  0E3F               	movlw	63
   611  007E3A  6E82               	movwf	3970,c	;volatile
   612  007E3C  0012               	return	
   613  007E3E                     __end_of_print_correct:
   614                           	opt stack 0
   615                           wreg	equ	0xFE8
   616                           status	equ	0xFD8
   617                           
   618 ;; *************** function _clear_display *****************
   619 ;; Defined at:
   620 ;;		line 28 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;		None               void
   627 ;; Registers used:
   628 ;;		wreg, status,2
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text6
   648  007E32                     __ptext6:
   649                           	opt stack 0
   650  007E32                     _clear_display:
   651                           	opt stack 30
   652                           
   653                           ;main.c: 30: PORTC = 0;
   654                           
   655                           ;incstack = 0
   656  007E32  0E00               	movlw	0
   657  007E34  6E82               	movwf	3970,c	;volatile
   658  007E36  0012               	return	
   659  007E38                     __end_of_clear_display:
   660                           	opt stack 0
   661  0000                     wreg	equ	0xFE8
   662                           status	equ	0xFD8
   663                           wreg	equ	0xFE8
   664                           status	equ	0xFD8
   665                           
   666                           	psect	rparam
   667  0000                     wreg	equ	0xFE8
   668                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      31
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_rand
    _rand->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     304
                                             18 COMRAM     8     8      0
                      _clear_display
                      _print_correct
                        _print_error
                               _rand
 ---------------------------------------------------------------------------------
 (1) _rand                                                 6     4      2     229
                                             12 COMRAM     6     4      2
                             ___lmul
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      49
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     180
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _print_error                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _print_correct                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_display                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear_display
   _print_correct
   _print_error
   _rand
     ___lmul
     _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      1F       1       24.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1F      15        0.0%
DATA                 0      0      1F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Mar 13 16:38:36 2015

                     u44 7F54                       u45 7F50                      l633 7E8A  
                    l651 7ECC                      l629 7E76                      l663 7F34  
                    l683 7F9E                      l699 7FEC                      u127 7F90  
                    u137 7FDE                      u147 7FF2                      wreg 000FE8  
                   _main 7F26                     _rand 7EBC                     start 0000  
                  ?_main 0001                    ?_rand 000D                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94      ___lmul@multiplicand 0005  
                  _randf 001F                    _randx 001B                    _srand 7E54  
                  main@i 0017                    status 000FD8          ??_print_correct 0001  
        __initialization 7E44             __end_of_main 8000             __end_of_rand 7F26  
                 ??_main 0013                   ??_rand 000F            __activetblptr 000000  
                 _ADCON1 000FC1                   ?_srand 0001    __end_of_clear_display 7E38  
                 ___lmul 7E66                   srand@x 0001             ?_print_error 0001  
             __accesstop 0080  __end_of__initialization 7E4E           __pcstackCOMRAM 0001  
          __end_of_srand 7E66                  ??_srand 0003                  ?___lmul 0001  
         ___lmul@product 0009                  __Hparam 0000                  __Lparam 0000  
        __size_of___lmul 0056                  __pcinit 7E44                  __ramtop 0600  
                __ptext0 7F26                  __ptext1 7EBC                  __ptext2 7E54  
                __ptext3 7E66                  __ptext4 7E3E                  __ptext5 7E38  
                __ptext6 7E32                  main@num 0015     end_of_initialization 7E4E  
   __size_of_print_error 0006    __end_of_print_correct 7E3E           __end_of___lmul 7EBC  
 __size_of_clear_display 0006      start_initialization 7E44                 ??___lmul 0009  
            __pbssCOMRAM 001B            _clear_display 7E32           __size_of_srand 0012  
         ?_clear_display 0001        ___lmul@multiplier 0001            ??_print_error 0001  
               __Hrparam 0000                 __Lrparam 0000   __size_of_print_correct 0006  
        ??_clear_display 0001            __size_of_main 00DA            __size_of_rand 006A  
    __end_of_print_error 7E44                 main@i_46 0019            _print_correct 7E38  
            _print_error 7E3E           ?_print_correct 0001  
