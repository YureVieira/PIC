Version 3.2 HI-TECH Software Intermediate Code
"1520 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f628a.h
[v _TXIF `Vb ~T0 @X0 0 e@100 ]
"729
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"946
[s S39 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S39 . TRISB0 TRISB1 TRISB2 TRISB3 TRISB4 TRISB5 TRISB6 TRISB7 ]
"945
[u S38 `S39 1 ]
[n S38 . . ]
"957
[v _TRISBbits `VS38 ~T0 @X0 0 e@134 ]
"1117
[s S47 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S47 . TX9D TRMT BRGH . SYNC TXEN TX9 CSRC ]
"1116
[u S46 `S47 1 ]
[n S46 . . ]
"1128
[v _TXSTAbits `VS46 ~T0 @X0 0 e@152 ]
"665
[s S28 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S28 . RX9D OERR FERR ADEN CREN SREN RX9 SPEN ]
"675
[s S29 :3 `uc 1 :1 `uc 1 ]
[n S29 . . ADDEN ]
"664
[u S27 `S28 1 `S29 1 ]
[n S27 . . . ]
"680
[v _RCSTAbits `VS27 ~T0 @X0 0 e@24 ]
"1167
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"1416
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"735
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"219
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"940
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
[v F663 `(v ~T0 @X0 1 tf1`ul ]
"154 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic.h
[v __delay `JF663 ~T0 @X0 0 e ]
[p i __delay ]
[p mainexit ]
"206 C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
[; ;stdio.h: 8: typedef int ptrdiff_t;
[; ;stdio.h: 9: typedef unsigned size_t;
[; ;stdio.h: 10: typedef unsigned short wchar_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 198: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f628a.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f628a.h
[; ;pic16f628a.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f628a.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f628a.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f628a.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f628a.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f628a.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f628a.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f628a.h: 70: typedef union {
[; ;pic16f628a.h: 71: struct {
[; ;pic16f628a.h: 72: unsigned C :1;
[; ;pic16f628a.h: 73: unsigned DC :1;
[; ;pic16f628a.h: 74: unsigned Z :1;
[; ;pic16f628a.h: 75: unsigned nPD :1;
[; ;pic16f628a.h: 76: unsigned nTO :1;
[; ;pic16f628a.h: 77: unsigned RP :2;
[; ;pic16f628a.h: 78: unsigned IRP :1;
[; ;pic16f628a.h: 79: };
[; ;pic16f628a.h: 80: struct {
[; ;pic16f628a.h: 81: unsigned :5;
[; ;pic16f628a.h: 82: unsigned RP0 :1;
[; ;pic16f628a.h: 83: unsigned RP1 :1;
[; ;pic16f628a.h: 84: };
[; ;pic16f628a.h: 85: struct {
[; ;pic16f628a.h: 86: unsigned CARRY :1;
[; ;pic16f628a.h: 87: };
[; ;pic16f628a.h: 88: struct {
[; ;pic16f628a.h: 89: unsigned :2;
[; ;pic16f628a.h: 90: unsigned ZERO :1;
[; ;pic16f628a.h: 91: };
[; ;pic16f628a.h: 92: } STATUSbits_t;
[; ;pic16f628a.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f628a.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f628a.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f628a.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f628a.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f628a.h: 163: typedef union {
[; ;pic16f628a.h: 164: struct {
[; ;pic16f628a.h: 165: unsigned RA0 :1;
[; ;pic16f628a.h: 166: unsigned RA1 :1;
[; ;pic16f628a.h: 167: unsigned RA2 :1;
[; ;pic16f628a.h: 168: unsigned RA3 :1;
[; ;pic16f628a.h: 169: unsigned RA4 :1;
[; ;pic16f628a.h: 170: unsigned RA5 :1;
[; ;pic16f628a.h: 171: unsigned RA6 :1;
[; ;pic16f628a.h: 172: unsigned RA7 :1;
[; ;pic16f628a.h: 173: };
[; ;pic16f628a.h: 174: } PORTAbits_t;
[; ;pic16f628a.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f628a.h: 219: extern volatile unsigned char PORTB @ 0x006;
"221
[; ;pic16f628a.h: 221: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f628a.h: 224: typedef union {
[; ;pic16f628a.h: 225: struct {
[; ;pic16f628a.h: 226: unsigned RB0 :1;
[; ;pic16f628a.h: 227: unsigned RB1 :1;
[; ;pic16f628a.h: 228: unsigned RB2 :1;
[; ;pic16f628a.h: 229: unsigned RB3 :1;
[; ;pic16f628a.h: 230: unsigned RB4 :1;
[; ;pic16f628a.h: 231: unsigned RB5 :1;
[; ;pic16f628a.h: 232: unsigned RB6 :1;
[; ;pic16f628a.h: 233: unsigned RB7 :1;
[; ;pic16f628a.h: 234: };
[; ;pic16f628a.h: 235: } PORTBbits_t;
[; ;pic16f628a.h: 236: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f628a.h: 280: extern volatile unsigned char PCLATH @ 0x00A;
"282
[; ;pic16f628a.h: 282: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f628a.h: 285: typedef union {
[; ;pic16f628a.h: 286: struct {
[; ;pic16f628a.h: 287: unsigned PCLATH :5;
[; ;pic16f628a.h: 288: };
[; ;pic16f628a.h: 289: } PCLATHbits_t;
[; ;pic16f628a.h: 290: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f628a.h: 299: extern volatile unsigned char INTCON @ 0x00B;
"301
[; ;pic16f628a.h: 301: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f628a.h: 304: typedef union {
[; ;pic16f628a.h: 305: struct {
[; ;pic16f628a.h: 306: unsigned RBIF :1;
[; ;pic16f628a.h: 307: unsigned INTF :1;
[; ;pic16f628a.h: 308: unsigned T0IF :1;
[; ;pic16f628a.h: 309: unsigned RBIE :1;
[; ;pic16f628a.h: 310: unsigned INTE :1;
[; ;pic16f628a.h: 311: unsigned T0IE :1;
[; ;pic16f628a.h: 312: unsigned PEIE :1;
[; ;pic16f628a.h: 313: unsigned GIE :1;
[; ;pic16f628a.h: 314: };
[; ;pic16f628a.h: 315: struct {
[; ;pic16f628a.h: 316: unsigned :2;
[; ;pic16f628a.h: 317: unsigned TMR0IF :1;
[; ;pic16f628a.h: 318: unsigned :2;
[; ;pic16f628a.h: 319: unsigned TMR0IE :1;
[; ;pic16f628a.h: 320: };
[; ;pic16f628a.h: 321: } INTCONbits_t;
[; ;pic16f628a.h: 322: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f628a.h: 376: extern volatile unsigned char PIR1 @ 0x00C;
"378
[; ;pic16f628a.h: 378: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f628a.h: 381: typedef union {
[; ;pic16f628a.h: 382: struct {
[; ;pic16f628a.h: 383: unsigned TMR1IF :1;
[; ;pic16f628a.h: 384: unsigned TMR2IF :1;
[; ;pic16f628a.h: 385: unsigned CCP1IF :1;
[; ;pic16f628a.h: 386: unsigned :1;
[; ;pic16f628a.h: 387: unsigned TXIF :1;
[; ;pic16f628a.h: 388: unsigned RCIF :1;
[; ;pic16f628a.h: 389: unsigned CMIF :1;
[; ;pic16f628a.h: 390: unsigned EEIF :1;
[; ;pic16f628a.h: 391: };
[; ;pic16f628a.h: 392: } PIR1bits_t;
[; ;pic16f628a.h: 393: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f628a.h: 432: extern volatile unsigned short TMR1 @ 0x00E;
"434
[; ;pic16f628a.h: 434: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f628a.h: 438: extern volatile unsigned char TMR1L @ 0x00E;
"440
[; ;pic16f628a.h: 440: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f628a.h: 444: extern volatile unsigned char TMR1H @ 0x00F;
"446
[; ;pic16f628a.h: 446: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f628a.h: 450: extern volatile unsigned char T1CON @ 0x010;
"452
[; ;pic16f628a.h: 452: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f628a.h: 455: typedef union {
[; ;pic16f628a.h: 456: struct {
[; ;pic16f628a.h: 457: unsigned TMR1ON :1;
[; ;pic16f628a.h: 458: unsigned TMR1CS :1;
[; ;pic16f628a.h: 459: unsigned nT1SYNC :1;
[; ;pic16f628a.h: 460: unsigned T1OSCEN :1;
[; ;pic16f628a.h: 461: unsigned T1CKPS :2;
[; ;pic16f628a.h: 462: };
[; ;pic16f628a.h: 463: struct {
[; ;pic16f628a.h: 464: unsigned :4;
[; ;pic16f628a.h: 465: unsigned T1CKPS0 :1;
[; ;pic16f628a.h: 466: unsigned T1CKPS1 :1;
[; ;pic16f628a.h: 467: };
[; ;pic16f628a.h: 468: } T1CONbits_t;
[; ;pic16f628a.h: 469: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f628a.h: 508: extern volatile unsigned char TMR2 @ 0x011;
"510
[; ;pic16f628a.h: 510: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f628a.h: 514: extern volatile unsigned char T2CON @ 0x012;
"516
[; ;pic16f628a.h: 516: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f628a.h: 519: typedef union {
[; ;pic16f628a.h: 520: struct {
[; ;pic16f628a.h: 521: unsigned T2CKPS :2;
[; ;pic16f628a.h: 522: unsigned TMR2ON :1;
[; ;pic16f628a.h: 523: unsigned TOUTPS :4;
[; ;pic16f628a.h: 524: };
[; ;pic16f628a.h: 525: struct {
[; ;pic16f628a.h: 526: unsigned T2CKPS0 :1;
[; ;pic16f628a.h: 527: unsigned T2CKPS1 :1;
[; ;pic16f628a.h: 528: unsigned :1;
[; ;pic16f628a.h: 529: unsigned TOUTPS0 :1;
[; ;pic16f628a.h: 530: unsigned TOUTPS1 :1;
[; ;pic16f628a.h: 531: unsigned TOUTPS2 :1;
[; ;pic16f628a.h: 532: unsigned TOUTPS3 :1;
[; ;pic16f628a.h: 533: };
[; ;pic16f628a.h: 534: } T2CONbits_t;
[; ;pic16f628a.h: 535: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f628a.h: 584: extern volatile unsigned short CCPR1 @ 0x015;
"586
[; ;pic16f628a.h: 586: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f628a.h: 590: extern volatile unsigned char CCPR1L @ 0x015;
"592
[; ;pic16f628a.h: 592: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f628a.h: 596: extern volatile unsigned char CCPR1H @ 0x016;
"598
[; ;pic16f628a.h: 598: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f628a.h: 602: extern volatile unsigned char CCP1CON @ 0x017;
"604
[; ;pic16f628a.h: 604: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f628a.h: 607: typedef union {
[; ;pic16f628a.h: 608: struct {
[; ;pic16f628a.h: 609: unsigned CCP1M :4;
[; ;pic16f628a.h: 610: unsigned CCP1Y :1;
[; ;pic16f628a.h: 611: unsigned CCP1X :1;
[; ;pic16f628a.h: 612: };
[; ;pic16f628a.h: 613: struct {
[; ;pic16f628a.h: 614: unsigned CCP1M0 :1;
[; ;pic16f628a.h: 615: unsigned CCP1M1 :1;
[; ;pic16f628a.h: 616: unsigned CCP1M2 :1;
[; ;pic16f628a.h: 617: unsigned CCP1M3 :1;
[; ;pic16f628a.h: 618: };
[; ;pic16f628a.h: 619: } CCP1CONbits_t;
[; ;pic16f628a.h: 620: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f628a.h: 659: extern volatile unsigned char RCSTA @ 0x018;
"661
[; ;pic16f628a.h: 661: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f628a.h: 664: typedef union {
[; ;pic16f628a.h: 665: struct {
[; ;pic16f628a.h: 666: unsigned RX9D :1;
[; ;pic16f628a.h: 667: unsigned OERR :1;
[; ;pic16f628a.h: 668: unsigned FERR :1;
[; ;pic16f628a.h: 669: unsigned ADEN :1;
[; ;pic16f628a.h: 670: unsigned CREN :1;
[; ;pic16f628a.h: 671: unsigned SREN :1;
[; ;pic16f628a.h: 672: unsigned RX9 :1;
[; ;pic16f628a.h: 673: unsigned SPEN :1;
[; ;pic16f628a.h: 674: };
[; ;pic16f628a.h: 675: struct {
[; ;pic16f628a.h: 676: unsigned :3;
[; ;pic16f628a.h: 677: unsigned ADDEN :1;
[; ;pic16f628a.h: 678: };
[; ;pic16f628a.h: 679: } RCSTAbits_t;
[; ;pic16f628a.h: 680: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f628a.h: 729: extern volatile unsigned char TXREG @ 0x019;
"731
[; ;pic16f628a.h: 731: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f628a.h: 735: extern volatile unsigned char RCREG @ 0x01A;
"737
[; ;pic16f628a.h: 737: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f628a.h: 741: extern volatile unsigned char CMCON @ 0x01F;
"743
[; ;pic16f628a.h: 743: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f628a.h: 746: typedef union {
[; ;pic16f628a.h: 747: struct {
[; ;pic16f628a.h: 748: unsigned CM :3;
[; ;pic16f628a.h: 749: unsigned CIS :1;
[; ;pic16f628a.h: 750: unsigned C1INV :1;
[; ;pic16f628a.h: 751: unsigned C2INV :1;
[; ;pic16f628a.h: 752: unsigned C1OUT :1;
[; ;pic16f628a.h: 753: unsigned C2OUT :1;
[; ;pic16f628a.h: 754: };
[; ;pic16f628a.h: 755: struct {
[; ;pic16f628a.h: 756: unsigned CM0 :1;
[; ;pic16f628a.h: 757: unsigned CM1 :1;
[; ;pic16f628a.h: 758: unsigned CM2 :1;
[; ;pic16f628a.h: 759: };
[; ;pic16f628a.h: 760: } CMCONbits_t;
[; ;pic16f628a.h: 761: extern volatile CMCONbits_t CMCONbits @ 0x01F;
[; ;pic16f628a.h: 810: extern volatile unsigned char OPTION_REG @ 0x081;
"812
[; ;pic16f628a.h: 812: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f628a.h: 815: typedef union {
[; ;pic16f628a.h: 816: struct {
[; ;pic16f628a.h: 817: unsigned PS :3;
[; ;pic16f628a.h: 818: unsigned PSA :1;
[; ;pic16f628a.h: 819: unsigned T0SE :1;
[; ;pic16f628a.h: 820: unsigned T0CS :1;
[; ;pic16f628a.h: 821: unsigned INTEDG :1;
[; ;pic16f628a.h: 822: unsigned nRBPU :1;
[; ;pic16f628a.h: 823: };
[; ;pic16f628a.h: 824: struct {
[; ;pic16f628a.h: 825: unsigned PS0 :1;
[; ;pic16f628a.h: 826: unsigned PS1 :1;
[; ;pic16f628a.h: 827: unsigned PS2 :1;
[; ;pic16f628a.h: 828: };
[; ;pic16f628a.h: 829: } OPTION_REGbits_t;
[; ;pic16f628a.h: 830: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f628a.h: 879: extern volatile unsigned char TRISA @ 0x085;
"881
[; ;pic16f628a.h: 881: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f628a.h: 884: typedef union {
[; ;pic16f628a.h: 885: struct {
[; ;pic16f628a.h: 886: unsigned TRISA0 :1;
[; ;pic16f628a.h: 887: unsigned TRISA1 :1;
[; ;pic16f628a.h: 888: unsigned TRISA2 :1;
[; ;pic16f628a.h: 889: unsigned TRISA3 :1;
[; ;pic16f628a.h: 890: unsigned TRISA4 :1;
[; ;pic16f628a.h: 891: unsigned TRISA5 :1;
[; ;pic16f628a.h: 892: unsigned TRISA6 :1;
[; ;pic16f628a.h: 893: unsigned TRISA7 :1;
[; ;pic16f628a.h: 894: };
[; ;pic16f628a.h: 895: } TRISAbits_t;
[; ;pic16f628a.h: 896: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f628a.h: 940: extern volatile unsigned char TRISB @ 0x086;
"942
[; ;pic16f628a.h: 942: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f628a.h: 945: typedef union {
[; ;pic16f628a.h: 946: struct {
[; ;pic16f628a.h: 947: unsigned TRISB0 :1;
[; ;pic16f628a.h: 948: unsigned TRISB1 :1;
[; ;pic16f628a.h: 949: unsigned TRISB2 :1;
[; ;pic16f628a.h: 950: unsigned TRISB3 :1;
[; ;pic16f628a.h: 951: unsigned TRISB4 :1;
[; ;pic16f628a.h: 952: unsigned TRISB5 :1;
[; ;pic16f628a.h: 953: unsigned TRISB6 :1;
[; ;pic16f628a.h: 954: unsigned TRISB7 :1;
[; ;pic16f628a.h: 955: };
[; ;pic16f628a.h: 956: } TRISBbits_t;
[; ;pic16f628a.h: 957: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f628a.h: 1001: extern volatile unsigned char PIE1 @ 0x08C;
"1003
[; ;pic16f628a.h: 1003: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f628a.h: 1006: typedef union {
[; ;pic16f628a.h: 1007: struct {
[; ;pic16f628a.h: 1008: unsigned TMR1IE :1;
[; ;pic16f628a.h: 1009: unsigned TMR2IE :1;
[; ;pic16f628a.h: 1010: unsigned CCP1IE :1;
[; ;pic16f628a.h: 1011: unsigned :1;
[; ;pic16f628a.h: 1012: unsigned TXIE :1;
[; ;pic16f628a.h: 1013: unsigned RCIE :1;
[; ;pic16f628a.h: 1014: unsigned CMIE :1;
[; ;pic16f628a.h: 1015: unsigned EEIE :1;
[; ;pic16f628a.h: 1016: };
[; ;pic16f628a.h: 1017: } PIE1bits_t;
[; ;pic16f628a.h: 1018: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f628a.h: 1057: extern volatile unsigned char PCON @ 0x08E;
"1059
[; ;pic16f628a.h: 1059: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f628a.h: 1062: typedef union {
[; ;pic16f628a.h: 1063: struct {
[; ;pic16f628a.h: 1064: unsigned nBOR :1;
[; ;pic16f628a.h: 1065: unsigned nPOR :1;
[; ;pic16f628a.h: 1066: unsigned :1;
[; ;pic16f628a.h: 1067: unsigned OSCF :1;
[; ;pic16f628a.h: 1068: };
[; ;pic16f628a.h: 1069: struct {
[; ;pic16f628a.h: 1070: unsigned nBO :1;
[; ;pic16f628a.h: 1071: };
[; ;pic16f628a.h: 1072: struct {
[; ;pic16f628a.h: 1073: unsigned nBOD :1;
[; ;pic16f628a.h: 1074: };
[; ;pic16f628a.h: 1075: } PCONbits_t;
[; ;pic16f628a.h: 1076: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f628a.h: 1105: extern volatile unsigned char PR2 @ 0x092;
"1107
[; ;pic16f628a.h: 1107: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f628a.h: 1111: extern volatile unsigned char TXSTA @ 0x098;
"1113
[; ;pic16f628a.h: 1113: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f628a.h: 1116: typedef union {
[; ;pic16f628a.h: 1117: struct {
[; ;pic16f628a.h: 1118: unsigned TX9D :1;
[; ;pic16f628a.h: 1119: unsigned TRMT :1;
[; ;pic16f628a.h: 1120: unsigned BRGH :1;
[; ;pic16f628a.h: 1121: unsigned :1;
[; ;pic16f628a.h: 1122: unsigned SYNC :1;
[; ;pic16f628a.h: 1123: unsigned TXEN :1;
[; ;pic16f628a.h: 1124: unsigned TX9 :1;
[; ;pic16f628a.h: 1125: unsigned CSRC :1;
[; ;pic16f628a.h: 1126: };
[; ;pic16f628a.h: 1127: } TXSTAbits_t;
[; ;pic16f628a.h: 1128: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f628a.h: 1167: extern volatile unsigned char SPBRG @ 0x099;
"1169
[; ;pic16f628a.h: 1169: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f628a.h: 1173: extern volatile unsigned char EEDATA @ 0x09A;
"1175
[; ;pic16f628a.h: 1175: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f628a.h: 1179: extern volatile unsigned char EEADR @ 0x09B;
"1181
[; ;pic16f628a.h: 1181: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f628a.h: 1185: extern volatile unsigned char EECON1 @ 0x09C;
"1187
[; ;pic16f628a.h: 1187: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f628a.h: 1190: typedef union {
[; ;pic16f628a.h: 1191: struct {
[; ;pic16f628a.h: 1192: unsigned RD :1;
[; ;pic16f628a.h: 1193: unsigned WR :1;
[; ;pic16f628a.h: 1194: unsigned WREN :1;
[; ;pic16f628a.h: 1195: unsigned WRERR :1;
[; ;pic16f628a.h: 1196: };
[; ;pic16f628a.h: 1197: } EECON1bits_t;
[; ;pic16f628a.h: 1198: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f628a.h: 1222: extern volatile unsigned char EECON2 @ 0x09D;
"1224
[; ;pic16f628a.h: 1224: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f628a.h: 1228: extern volatile unsigned char VRCON @ 0x09F;
"1230
[; ;pic16f628a.h: 1230: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f628a.h: 1233: typedef union {
[; ;pic16f628a.h: 1234: struct {
[; ;pic16f628a.h: 1235: unsigned VR :4;
[; ;pic16f628a.h: 1236: unsigned :1;
[; ;pic16f628a.h: 1237: unsigned VRR :1;
[; ;pic16f628a.h: 1238: unsigned VROE :1;
[; ;pic16f628a.h: 1239: unsigned VREN :1;
[; ;pic16f628a.h: 1240: };
[; ;pic16f628a.h: 1241: struct {
[; ;pic16f628a.h: 1242: unsigned VR0 :1;
[; ;pic16f628a.h: 1243: unsigned VR1 :1;
[; ;pic16f628a.h: 1244: unsigned VR2 :1;
[; ;pic16f628a.h: 1245: unsigned VR3 :1;
[; ;pic16f628a.h: 1246: };
[; ;pic16f628a.h: 1247: } VRCONbits_t;
[; ;pic16f628a.h: 1248: extern volatile VRCONbits_t VRCONbits @ 0x09F;
[; ;pic16f628a.h: 1298: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1300: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1302: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f628a.h: 1304: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f628a.h: 1306: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f628a.h: 1308: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f628a.h: 1310: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f628a.h: 1312: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f628a.h: 1314: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f628a.h: 1316: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f628a.h: 1318: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f628a.h: 1320: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f628a.h: 1322: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f628a.h: 1324: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f628a.h: 1326: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f628a.h: 1328: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f628a.h: 1330: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f628a.h: 1332: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f628a.h: 1334: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f628a.h: 1336: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f628a.h: 1338: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f628a.h: 1340: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f628a.h: 1342: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f628a.h: 1344: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f628a.h: 1346: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f628a.h: 1348: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f628a.h: 1350: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f628a.h: 1352: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f628a.h: 1354: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f628a.h: 1356: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f628a.h: 1358: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f628a.h: 1360: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f628a.h: 1362: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f628a.h: 1364: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f628a.h: 1366: extern volatile __bit OSCF @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f628a.h: 1368: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f628a.h: 1370: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f628a.h: 1372: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f628a.h: 1374: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f628a.h: 1376: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f628a.h: 1378: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f628a.h: 1380: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f628a.h: 1382: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f628a.h: 1384: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f628a.h: 1386: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f628a.h: 1388: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f628a.h: 1390: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f628a.h: 1392: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f628a.h: 1394: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f628a.h: 1396: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f628a.h: 1398: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f628a.h: 1400: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f628a.h: 1402: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f628a.h: 1404: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f628a.h: 1406: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f628a.h: 1408: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f628a.h: 1410: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f628a.h: 1412: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f628a.h: 1414: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f628a.h: 1416: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f628a.h: 1418: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f628a.h: 1420: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f628a.h: 1422: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f628a.h: 1424: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f628a.h: 1426: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f628a.h: 1428: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f628a.h: 1430: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f628a.h: 1432: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f628a.h: 1434: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f628a.h: 1436: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1438: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1440: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f628a.h: 1442: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f628a.h: 1444: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f628a.h: 1446: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f628a.h: 1448: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f628a.h: 1450: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f628a.h: 1452: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1454: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1456: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f628a.h: 1458: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f628a.h: 1460: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f628a.h: 1462: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f628a.h: 1464: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f628a.h: 1466: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f628a.h: 1468: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f628a.h: 1470: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f628a.h: 1472: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f628a.h: 1474: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f628a.h: 1476: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f628a.h: 1478: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f628a.h: 1480: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f628a.h: 1482: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f628a.h: 1484: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f628a.h: 1486: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f628a.h: 1488: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f628a.h: 1490: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f628a.h: 1492: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f628a.h: 1494: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f628a.h: 1496: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f628a.h: 1498: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f628a.h: 1500: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f628a.h: 1502: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f628a.h: 1504: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f628a.h: 1506: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f628a.h: 1508: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f628a.h: 1510: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f628a.h: 1512: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f628a.h: 1514: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f628a.h: 1516: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f628a.h: 1518: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f628a.h: 1520: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f628a.h: 1522: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f628a.h: 1524: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f628a.h: 1526: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f628a.h: 1528: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f628a.h: 1530: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f628a.h: 1532: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f628a.h: 1534: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f628a.h: 1536: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f628a.h: 1538: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f628a.h: 1540: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f628a.h: 1542: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f628a.h: 1544: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1546: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1548: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1550: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f628a.h: 1552: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f628a.h: 1554: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f628a.h: 1556: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f628a.h: 1558: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 144: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
"7 main.c
[v _buffer `uc ~T0 @X0 -> 16 `i e ]
[; ;main.c: 7: char buffer[16];
"8
[v _count `i ~T0 @X0 1 e ]
[i _count
-> 0 `i
]
[; ;main.c: 8: int count=0;
"9
[v _putch `(v ~T0 @X0 1 ef1`uc ]
"10
{
[; ;main.c: 9: void putch(char data)
[; ;main.c: 10: {
[e :U _putch ]
"9
[v _data `uc ~T0 @X0 1 r1 ]
"10
[f ]
[; ;main.c: 11: if(data == 10)
"11
[e $ ! == -> _data `i -> 10 `i 54  ]
[; ;main.c: 12: {
"12
{
[; ;main.c: 13: while(!TXIF)
"13
[e $U 55  ]
[e :U 56 ]
[; ;main.c: 14: continue;
"14
[e $U 55  ]
[e :U 55 ]
"13
[e $ ! _TXIF 56  ]
[e :U 57 ]
[; ;main.c: 15: TXREG = 10;
"15
[e = _TXREG -> -> 10 `i `uc ]
[; ;main.c: 16: while(!TXIF)
"16
[e $U 58  ]
[e :U 59 ]
[; ;main.c: 17: continue;
"17
[e $U 58  ]
[e :U 58 ]
"16
[e $ ! _TXIF 59  ]
[e :U 60 ]
[; ;main.c: 18: TXREG = 13;
"18
[e = _TXREG -> -> 13 `i `uc ]
[; ;main.c: 19: return;
"19
[e $UE 53  ]
"20
}
[e :U 54 ]
[; ;main.c: 20: }
[; ;main.c: 21: while(!TXIF)
"21
[e $U 61  ]
[e :U 62 ]
[; ;main.c: 22: continue;
"22
[e $U 61  ]
[e :U 61 ]
"21
[e $ ! _TXIF 62  ]
[e :U 63 ]
[; ;main.c: 23: TXREG = data;
"23
[e = _TXREG _data ]
[; ;main.c: 24: }
"24
[e :UE 53 ]
}
"25
[v _UART_init `(v ~T0 @X0 1 ef ]
"26
{
[; ;main.c: 25: void UART_init()
[; ;main.c: 26: {
[e :U _UART_init ]
[f ]
[; ;main.c: 28: TRISBbits.TRISB1 = 1;
"28
[e = . . _TRISBbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 29: TRISBbits.TRISB2 = 1;
"29
[e = . . _TRISBbits 0 2 -> -> 1 `i `uc ]
[; ;main.c: 31: TXSTAbits.CSRC = 1;
"31
[e = . . _TXSTAbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 32: TXSTAbits.TXEN = 1;
"32
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 33: TXSTAbits.SYNC = 0;
"33
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 36: RCSTAbits.SPEN = 1;
"36
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 37: RCSTAbits.CREN = 1;
"37
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
[; ;main.c: 41: TXSTAbits.BRGH = 0;
"41
[e = . . _TXSTAbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 42: SPBRG = 25;
"42
[e = _SPBRG -> -> 25 `i `uc ]
[; ;main.c: 43: }
"43
[e :UE 64 ]
}
"44
[v _UART_available `(i ~T0 @X0 1 ef ]
"45
{
[; ;main.c: 44: int UART_available()
[; ;main.c: 45: {
[e :U _UART_available ]
[f ]
[; ;main.c: 46: return count;
"46
[e ) _count ]
[e $UE 65  ]
[; ;main.c: 47: }
"47
[e :UE 65 ]
}
"48
[v _UART_read_byte `(uc ~T0 @X0 1 ef ]
"49
{
[; ;main.c: 48: char UART_read_byte()
[; ;main.c: 49: {
[e :U _UART_read_byte ]
[f ]
"50
[v _data `uc ~T0 @X0 1 a ]
[; ;main.c: 50: char data = buffer[0];
[e = _data *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[; ;main.c: 51: count--;
"51
[e -- _count -> 1 `i ]
[; ;main.c: 54: for(int i=0;i<count;i++)
"54
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 70  ]
"55
[e :U 67 ]
[; ;main.c: 55: {
{
[; ;main.c: 56: buffer[i]=buffer[i+1];
"56
[e = *U + &U _buffer * -> -> _i `ui `ux -> -> # *U &U _buffer `ui `ux *U + &U _buffer * -> -> + _i -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"57
}
"54
[e ++ _i -> 1 `i ]
[e :U 70 ]
[e $ < _i _count 67  ]
[e :U 68 ]
"57
}
[; ;main.c: 57: }
[; ;main.c: 58: return data;
"58
[e ) _data ]
[e $UE 66  ]
[; ;main.c: 59: }
"59
[e :UE 66 ]
}
[v F673 `(v ~T0 @X0 1 tf ]
"61
[v __ISR `IF673 ~T0 @X0 1 e ]
"62
{
[; ;main.c: 61: void interrupt _ISR()
[; ;main.c: 62: {
[e :U __ISR ]
[f ]
[; ;main.c: 63: if(RCIF)
"63
[e $ ! _RCIF 72  ]
[; ;main.c: 64: {
"64
{
[; ;main.c: 65: buffer[count] = RCREG;
"65
[e = *U + &U _buffer * -> -> _count `ui `ux -> -> # *U &U _buffer `ui `ux _RCREG ]
[; ;main.c: 66: count++;
"66
[e ++ _count -> 1 `i ]
"68
}
[e :U 72 ]
[; ;main.c: 68: }
[; ;main.c: 69: }
"69
[e :UE 71 ]
}
[v F676 `(v ~T0 @X0 1 tf1`uc ]
"79
[v _set_SCK `TF676 ~T0 @X0 1 e ]
"80
{
[; ;main.c: 79: inline void set_SCK(unsigned char a)
[; ;main.c: 80: {
[e :U _set_SCK ]
"79
[v _a `uc ~T0 @X0 1 r1 ]
"80
[f ]
[; ;main.c: 81: a==1 ? PORTB|=1<<7 : PORTB&=~(1<<7);
"81
[e ? == -> _a `i -> 1 `i : -> =| _PORTB -> << -> 1 `i -> 7 `i `uc `i -> =& _PORTB -> ~ << -> 1 `i -> 7 `i `uc `i ]
[; ;main.c: 82: }
"82
[e :UE 73 ]
}
[v F679 `(v ~T0 @X0 1 tf1`uc ]
"87
[v _set_MOSI `TF679 ~T0 @X0 1 e ]
"88
{
[; ;main.c: 87: inline void set_MOSI(unsigned char a)
[; ;main.c: 88: {
[e :U _set_MOSI ]
"87
[v _a `uc ~T0 @X0 1 r1 ]
"88
[f ]
[; ;main.c: 89: a==1 ? PORTB|=1<<6 : PORTB&=~(1<<7);
"89
[e ? == -> _a `i -> 1 `i : -> =| _PORTB -> << -> 1 `i -> 6 `i `uc `i -> =& _PORTB -> ~ << -> 1 `i -> 7 `i `uc `i ]
[; ;main.c: 90: }
"90
[e :UE 74 ]
}
[v F681 `(uc ~T0 @X0 1 tf ]
"91
[v _get_MISO `TF681 ~T0 @X0 1 e ]
"92
{
[; ;main.c: 91: inline unsigned char get_MISO()
[; ;main.c: 92: {
[e :U _get_MISO ]
[f ]
[; ;main.c: 93: if(PORTB & (1<<5)) return 1;
"93
[e $ ! != & -> _PORTB `i << -> 1 `i -> 5 `i -> 0 `i 76  ]
[e ) -> -> 1 `i `uc ]
[e $UE 75  ]
[e $U 77  ]
"94
[e :U 76 ]
[; ;main.c: 94: else return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 75  ]
[e :U 77 ]
[; ;main.c: 95: }
"95
[e :UE 75 ]
}
"97
[v _SPI_init `(v ~T0 @X0 1 ef ]
"98
{
[; ;main.c: 97: void SPI_init()
[; ;main.c: 98: {
[e :U _SPI_init ]
[f ]
[; ;main.c: 99: TRISB &= ~(1<<7 | 1<<6);
"99
[e =& _TRISB -> ~ | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i `uc ]
[; ;main.c: 100: TRISB |= (1<<5);
"100
[e =| _TRISB -> << -> 1 `i -> 5 `i `uc ]
[; ;main.c: 101: PORTB |= (1<<7);
"101
[e =| _PORTB -> << -> 1 `i -> 7 `i `uc ]
[; ;main.c: 102: }
"102
[e :UE 78 ]
}
"123
[v _SPI_transfer `(uc ~T0 @X0 1 ef1`uc ]
"124
{
[; ;main.c: 123: unsigned char SPI_transfer(unsigned char data)
[; ;main.c: 124: {
[e :U _SPI_transfer ]
"123
[v _data `uc ~T0 @X0 1 r1 ]
"124
[f ]
"125
[v _ret `uc ~T0 @X0 1 a ]
[; ;main.c: 125: unsigned char ret;
[; ;main.c: 126: for(int i=0;i<8;i++)
"126
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 80  ]
[e $U 81  ]
"127
[e :U 80 ]
[; ;main.c: 127: {
{
[; ;main.c: 129: if(PORTB & (1<<5))ret|=1;
"129
[e $ ! != & -> _PORTB `i << -> 1 `i -> 5 `i -> 0 `i 83  ]
[e =| _ret -> -> 1 `i `uc ]
[e :U 83 ]
[; ;main.c: 130: PORTB &= ~(1<<7);
"130
[e =& _PORTB -> ~ << -> 1 `i -> 7 `i `uc ]
[; ;main.c: 132: if(data & 0x80)PORTB |= (1<<6);
"132
[e $ ! != & -> _data `i -> 128 `i -> 0 `i 84  ]
[e =| _PORTB -> << -> 1 `i -> 6 `i `uc ]
[e $U 85  ]
"133
[e :U 84 ]
[; ;main.c: 133: else PORTB &= ~(1<<6);
[e =& _PORTB -> ~ << -> 1 `i -> 6 `i `uc ]
[e :U 85 ]
[; ;main.c: 134: _delay((unsigned long)((25)*(4000000/4000000.0)));
"134
[e ( __delay (1 -> * -> -> 25 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[; ;main.c: 135: PORTB |= (1<<7);
"135
[e =| _PORTB -> << -> 1 `i -> 7 `i `uc ]
[; ;main.c: 137: ret<<=1;
"137
[e =<< _ret -> 1 `i ]
[; ;main.c: 138: data<<=1;
"138
[e =<< _data -> 1 `i ]
[; ;main.c: 139: _delay((unsigned long)((5)*(4000000/4000000.0)));
"139
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
"140
}
"126
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 80  ]
[e :U 81 ]
"140
}
[; ;main.c: 140: }
[; ;main.c: 141: return ret;
"141
[e ) _ret ]
[e $UE 79  ]
[; ;main.c: 142: }
"142
[e :UE 79 ]
}
"241
[v _MFRC522_Wr `(v ~T0 @X0 1 sf2`uc`uc ]
"242
{
[; ;main.c: 241: static void MFRC522_Wr( char addr, char value )
[; ;main.c: 242: {
[e :U _MFRC522_Wr ]
"241
[v _addr `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
"242
[f ]
[; ;main.c: 243: PORTB&=~(1<<4);
"243
[e =& _PORTB -> ~ << -> 1 `i -> 4 `i `uc ]
[; ;main.c: 244: SPI_transfer( ( addr << 1 ) & 0x7E );
"244
[e ( _SPI_transfer (1 -> & << -> _addr `i -> 1 `i -> 126 `i `uc ]
[; ;main.c: 245: SPI_transfer( value );
"245
[e ( _SPI_transfer (1 _value ]
[; ;main.c: 246: PORTB|=(1<<4);
"246
[e =| _PORTB -> << -> 1 `i -> 4 `i `uc ]
[; ;main.c: 247: }
"247
[e :UE 86 ]
}
"248
[v _MFRC522_Rd `(uc ~T0 @X0 1 sf1`uc ]
"249
{
[; ;main.c: 248: static char MFRC522_Rd( char addr )
[; ;main.c: 249: {
[e :U _MFRC522_Rd ]
"248
[v _addr `uc ~T0 @X0 1 r1 ]
"249
[f ]
"250
[v _value `uc ~T0 @X0 1 a ]
[; ;main.c: 250: char value;
[; ;main.c: 251: PORTB&=~(1<<4);
"251
[e =& _PORTB -> ~ << -> 1 `i -> 4 `i `uc ]
[; ;main.c: 252: SPI_transfer( (( addr << 1 ) & 0x7E) | 0x80 );
"252
[e ( _SPI_transfer (1 -> | & << -> _addr `i -> 1 `i -> 126 `i -> 128 `i `uc ]
[; ;main.c: 253: value = SPI_transfer( 0x00 );
"253
[e = _value ( _SPI_transfer (1 -> -> 0 `i `uc ]
[; ;main.c: 254: PORTB|=(1<<4);
"254
[e =| _PORTB -> << -> 1 `i -> 4 `i `uc ]
[; ;main.c: 255: return value;
"255
[e ) _value ]
[e $UE 87  ]
[; ;main.c: 256: }
"256
[e :UE 87 ]
}
"257
[v _MFRC522_Clear_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"258
{
[; ;main.c: 257: static void MFRC522_Clear_Bit( char addr, char mask )
[; ;main.c: 258: {
[e :U _MFRC522_Clear_Bit ]
"257
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"258
[f ]
[; ;main.c: 259: MFRC522_Wr( addr, MFRC522_Rd( addr ) & (~mask) );
"259
[e ( _MFRC522_Wr (2 , _addr -> & -> ( _MFRC522_Rd (1 _addr `i ~ -> _mask `i `uc ]
[; ;main.c: 260: }
"260
[e :UE 88 ]
}
"261
[v _MFRC522_Set_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"262
{
[; ;main.c: 261: static void MFRC522_Set_Bit( char addr, char mask )
[; ;main.c: 262: {
[e :U _MFRC522_Set_Bit ]
"261
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"262
[f ]
[; ;main.c: 263: MFRC522_Wr( addr, MFRC522_Rd( addr ) | mask );
"263
[e ( _MFRC522_Wr (2 , _addr -> | -> ( _MFRC522_Rd (1 _addr `i -> _mask `i `uc ]
[; ;main.c: 264: }
"264
[e :UE 89 ]
}
"265
[v _MFRC522_Reset `(v ~T0 @X0 1 ef ]
"266
{
[; ;main.c: 265: void MFRC522_Reset()
[; ;main.c: 266: {
[e :U _MFRC522_Reset ]
[f ]
[; ;main.c: 267: MFRC522_Wr( 0x01, 0x0F );
"267
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
[; ;main.c: 268: }
"268
[e :UE 90 ]
}
"269
[v _MFRC522_AntennaOn `(v ~T0 @X0 1 ef ]
"270
{
[; ;main.c: 269: void MFRC522_AntennaOn()
[; ;main.c: 270: {
[e :U _MFRC522_AntennaOn ]
[f ]
[; ;main.c: 271: MFRC522_Set_Bit( 0x14, 0x03 );
"271
[e ( _MFRC522_Set_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 272: }
"272
[e :UE 91 ]
}
"273
[v _MFRC522_AntennaOff `(v ~T0 @X0 1 ef ]
"274
{
[; ;main.c: 273: void MFRC522_AntennaOff()
[; ;main.c: 274: {
[e :U _MFRC522_AntennaOff ]
[f ]
[; ;main.c: 275: MFRC522_Clear_Bit( 0x14, 0x03 );
"275
[e ( _MFRC522_Clear_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 276: }
"276
[e :UE 92 ]
}
"277
[v _MFRC522_Init `(v ~T0 @X0 1 ef ]
"278
{
[; ;main.c: 277: void MFRC522_Init()
[; ;main.c: 278: {
[e :U _MFRC522_Init ]
[f ]
[; ;main.c: 279: TRISB &=~(1<<4 | 1<<3);
"279
[e =& _TRISB -> ~ | << -> 1 `i -> 4 `i << -> 1 `i -> 3 `i `uc ]
[; ;main.c: 280: PORTB|=(1<<4);
"280
[e =| _PORTB -> << -> 1 `i -> 4 `i `uc ]
[; ;main.c: 281: PORTB|=(1<<3);
"281
[e =| _PORTB -> << -> 1 `i -> 3 `i `uc ]
[; ;main.c: 283: SPI_init();
"283
[e ( _SPI_init ..  ]
[; ;main.c: 284: MFRC522_Reset();
"284
[e ( _MFRC522_Reset ..  ]
[; ;main.c: 286: MFRC522_Wr( 0x2A, 0x8D );
"286
[e ( _MFRC522_Wr (2 , -> -> 42 `i `uc -> -> 141 `i `uc ]
[; ;main.c: 287: MFRC522_Wr( 0x2B, 0x3E );
"287
[e ( _MFRC522_Wr (2 , -> -> 43 `i `uc -> -> 62 `i `uc ]
[; ;main.c: 288: MFRC522_Wr( 0x2D, 30 );
"288
[e ( _MFRC522_Wr (2 , -> -> 45 `i `uc -> -> 30 `i `uc ]
[; ;main.c: 289: MFRC522_Wr( 0x2C, 0 );
"289
[e ( _MFRC522_Wr (2 , -> -> 44 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 291: MFRC522_Wr( 0x15, 0x40 );
"291
[e ( _MFRC522_Wr (2 , -> -> 21 `i `uc -> -> 64 `i `uc ]
[; ;main.c: 292: MFRC522_Wr( 0x11, 0x3D );
"292
[e ( _MFRC522_Wr (2 , -> -> 17 `i `uc -> -> 61 `i `uc ]
[; ;main.c: 297: MFRC522_AntennaOn();
"297
[e ( _MFRC522_AntennaOn ..  ]
[; ;main.c: 298: }
"298
[e :UE 93 ]
}
"299
[v _MFRC522_ToCard `(uc ~T0 @X0 1 ef5`uc`*uc`uc`*uc`*ui ]
"300
{
[; ;main.c: 299: char MFRC522_ToCard( char command, char *sendData, char sendLen, char *backData, unsigned *backLen )
[; ;main.c: 300: {
[e :U _MFRC522_ToCard ]
"299
[v _command `uc ~T0 @X0 1 r1 ]
[v _sendData `*uc ~T0 @X0 1 r2 ]
[v _sendLen `uc ~T0 @X0 1 r3 ]
[v _backData `*uc ~T0 @X0 1 r4 ]
[v _backLen `*ui ~T0 @X0 1 r5 ]
"300
[f ]
"301
[v __status `uc ~T0 @X0 1 a ]
[; ;main.c: 301: char _status = 2;
[e = __status -> -> 2 `i `uc ]
"302
[v _irqEn `uc ~T0 @X0 1 a ]
[; ;main.c: 302: char irqEn = 0x00;
[e = _irqEn -> -> 0 `i `uc ]
"303
[v _waitIRq `uc ~T0 @X0 1 a ]
[; ;main.c: 303: char waitIRq = 0x00;
[e = _waitIRq -> -> 0 `i `uc ]
"304
[v _lastBits `uc ~T0 @X0 1 a ]
"305
[v _n `uc ~T0 @X0 1 a ]
"306
[v _i `ui ~T0 @X0 1 a ]
[; ;main.c: 304: char lastBits;
[; ;main.c: 305: char n;
[; ;main.c: 306: unsigned i;
[; ;main.c: 308: switch (command)
"308
[e $U 96  ]
[; ;main.c: 309: {
"309
{
[; ;main.c: 310: case 0x0E:
"310
[e :U 97 ]
[; ;main.c: 311: {
"311
{
[; ;main.c: 312: irqEn = 0x12;
"312
[e = _irqEn -> -> 18 `i `uc ]
[; ;main.c: 313: waitIRq = 0x10;
"313
[e = _waitIRq -> -> 16 `i `uc ]
[; ;main.c: 314: break;
"314
[e $U 95  ]
"315
}
[; ;main.c: 315: }
[; ;main.c: 316: case 0x0C:
"316
[e :U 98 ]
[; ;main.c: 317: {
"317
{
[; ;main.c: 318: irqEn = 0x77;
"318
[e = _irqEn -> -> 119 `i `uc ]
[; ;main.c: 319: waitIRq = 0x30;
"319
[e = _waitIRq -> -> 48 `i `uc ]
[; ;main.c: 320: break;
"320
[e $U 95  ]
"321
}
[; ;main.c: 321: }
[; ;main.c: 322: default:
"322
[e :U 99 ]
[; ;main.c: 323: break;
"323
[e $U 95  ]
"324
}
[; ;main.c: 324: }
[e $U 95  ]
"308
[e :U 96 ]
[e [\ _command , $ -> -> 14 `i `uc 97
 , $ -> -> 12 `i `uc 98
 99 ]
"324
[e :U 95 ]
[; ;main.c: 325: MFRC522_Wr( 0x02, irqEn | 0x80 );
"325
[e ( _MFRC522_Wr (2 , -> -> 2 `i `uc -> | -> _irqEn `i -> 128 `i `uc ]
[; ;main.c: 326: MFRC522_Clear_Bit( 0x04, 0x80 );
"326
[e ( _MFRC522_Clear_Bit (2 , -> -> 4 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 327: MFRC522_Set_Bit( 0x0A, 0x80 );
"327
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 328: MFRC522_Wr( 0x01, 0x00 );
"328
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 333: for ( i=0; i < sendLen; i++ )
"333
{
[e = _i -> -> 0 `i `ui ]
[e $U 103  ]
"334
[e :U 100 ]
[; ;main.c: 334: {
{
[; ;main.c: 335: MFRC522_Wr( 0x09, sendData[i] );
"335
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc *U + _sendData * -> _i `ux -> -> # *U _sendData `ui `ux ]
"336
}
"333
[e ++ _i -> -> 1 `i `ui ]
[e :U 103 ]
[e $ < _i -> _sendLen `ui 100  ]
[e :U 101 ]
"336
}
[; ;main.c: 336: }
[; ;main.c: 338: MFRC522_Wr( 0x01, command );
"338
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc _command ]
[; ;main.c: 339: if (command == 0x0C )
"339
[e $ ! == -> _command `i -> 12 `i 104  ]
[; ;main.c: 340: {
"340
{
[; ;main.c: 341: MFRC522_Set_Bit( 0x0D, 0x80 );
"341
[e ( _MFRC522_Set_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
"342
}
[e :U 104 ]
[; ;main.c: 342: }
[; ;main.c: 345: i = 0xFFFF;
"345
[e = _i -> 65535 `ui ]
[; ;main.c: 346: do
"346
[e :U 107 ]
[; ;main.c: 347: {
"347
{
[; ;main.c: 350: n = MFRC522_Rd( 0x04 );
"350
[e = _n ( _MFRC522_Rd (1 -> -> 4 `i `uc ]
[; ;main.c: 351: i--;
"351
[e -- _i -> -> 1 `i `ui ]
"352
}
[; ;main.c: 352: }
[; ;main.c: 353: while ( i && !(n & 0x01) && !( n & waitIRq ) );
"353
[e $ && && != _i -> -> 0 `i `ui ! != & -> _n `i -> 1 `i -> 0 `i ! != & -> _n `i -> _waitIRq `i -> 0 `i 107  ]
[e :U 106 ]
[; ;main.c: 354: MFRC522_Clear_Bit( 0x0D, 0x80 );
"354
[e ( _MFRC522_Clear_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 355: if (i != 0)
"355
[e $ ! != _i -> -> 0 `i `ui 108  ]
[; ;main.c: 356: {
"356
{
[; ;main.c: 357: if( !( MFRC522_Rd( 0x06 ) & 0x1B ) )
"357
[e $ ! ! != & -> ( _MFRC522_Rd (1 -> -> 6 `i `uc `i -> 27 `i -> 0 `i 109  ]
[; ;main.c: 358: {
"358
{
[; ;main.c: 359: _status = 0;
"359
[e = __status -> -> 0 `i `uc ]
[; ;main.c: 360: if ( n & irqEn & 0x01 )
"360
[e $ ! != & & -> _n `i -> _irqEn `i -> 1 `i -> 0 `i 110  ]
[; ;main.c: 361: {
"361
{
[; ;main.c: 362: _status = 1;
"362
[e = __status -> -> 1 `i `uc ]
"363
}
[e :U 110 ]
[; ;main.c: 363: }
[; ;main.c: 364: if ( command == 0x0C )
"364
[e $ ! == -> _command `i -> 12 `i 111  ]
[; ;main.c: 365: {
"365
{
[; ;main.c: 366: n = MFRC522_Rd( 0x0A );
"366
[e = _n ( _MFRC522_Rd (1 -> -> 10 `i `uc ]
[; ;main.c: 367: lastBits = MFRC522_Rd( 0x0C ) & 0x07;
"367
[e = _lastBits -> & -> ( _MFRC522_Rd (1 -> -> 12 `i `uc `i -> 7 `i `uc ]
[; ;main.c: 368: if (lastBits)
"368
[e $ ! != -> _lastBits `i -> -> -> 0 `i `uc `i 112  ]
[; ;main.c: 369: {
"369
{
[; ;main.c: 370: *backLen = (n-1) * 8 + lastBits;
"370
[e = *U _backLen -> + * - -> _n `i -> 1 `i -> 8 `i -> _lastBits `i `ui ]
"371
}
[; ;main.c: 371: }
[e $U 113  ]
"372
[e :U 112 ]
[; ;main.c: 372: else
[; ;main.c: 373: {
"373
{
[; ;main.c: 374: *backLen = n * 8;
"374
[e = *U _backLen -> * -> _n `i -> 8 `i `ui ]
"375
}
[e :U 113 ]
[; ;main.c: 375: }
[; ;main.c: 376: if (n == 0)
"376
[e $ ! == -> _n `i -> 0 `i 114  ]
[; ;main.c: 377: {
"377
{
[; ;main.c: 378: n = 1;
"378
[e = _n -> -> 1 `i `uc ]
"379
}
[e :U 114 ]
[; ;main.c: 379: }
[; ;main.c: 380: if (n > 16)
"380
[e $ ! > -> _n `i -> 16 `i 115  ]
[; ;main.c: 381: {
"381
{
[; ;main.c: 382: n = 16;
"382
[e = _n -> -> 16 `i `uc ]
"383
}
[e :U 115 ]
[; ;main.c: 383: }
[; ;main.c: 385: for (i=0; i < n; i++)
"385
{
[e = _i -> -> 0 `i `ui ]
[e $U 119  ]
"386
[e :U 116 ]
[; ;main.c: 386: {
{
[; ;main.c: 387: backData[i] = MFRC522_Rd( 0x09 );
"387
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux ( _MFRC522_Rd (1 -> -> 9 `i `uc ]
"388
}
"385
[e ++ _i -> -> 1 `i `ui ]
[e :U 119 ]
[e $ < _i -> _n `ui 116  ]
[e :U 117 ]
"388
}
[; ;main.c: 388: }
[; ;main.c: 390: backData[i] = 0;
"390
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux -> -> 0 `i `uc ]
"391
}
[e :U 111 ]
"392
}
[; ;main.c: 391: }
[; ;main.c: 392: }
[e $U 120  ]
"393
[e :U 109 ]
[; ;main.c: 393: else
[; ;main.c: 394: {
"394
{
[; ;main.c: 395: _status = 2;
"395
[e = __status -> -> 2 `i `uc ]
"396
}
[e :U 120 ]
"397
}
[e :U 108 ]
[; ;main.c: 396: }
[; ;main.c: 397: }
[; ;main.c: 400: return _status;
"400
[e ) __status ]
[e $UE 94  ]
[; ;main.c: 401: }
"401
[e :UE 94 ]
}
"402
[v _MFRC522_Request `(uc ~T0 @X0 1 ef2`uc`*uc ]
"403
{
[; ;main.c: 402: char MFRC522_Request( char reqMode, char *TagType )
[; ;main.c: 403: {
[e :U _MFRC522_Request ]
"402
[v _reqMode `uc ~T0 @X0 1 r1 ]
[v _TagType `*uc ~T0 @X0 1 r2 ]
"403
[f ]
"404
[v __status `uc ~T0 @X0 1 a ]
"405
[v _backBits `ui ~T0 @X0 1 a ]
[; ;main.c: 404: char _status;
[; ;main.c: 405: unsigned backBits;
[; ;main.c: 406: MFRC522_Wr( 0x0D, 0x07 );
"406
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 7 `i `uc ]
[; ;main.c: 407: TagType[0] = reqMode;
"407
[e = *U + _TagType * -> -> 0 `i `x -> -> # *U _TagType `i `x _reqMode ]
[; ;main.c: 408: _status = MFRC522_ToCard( 0x0C, TagType, 1, TagType, &backBits );
"408
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _TagType -> -> 1 `i `uc _TagType &U _backBits ]
[; ;main.c: 409: if ( (_status != 0) || (backBits != 0x10) )
"409
[e $ ! || != -> __status `i -> 0 `i != _backBits -> -> 16 `i `ui 122  ]
[; ;main.c: 410: {
"410
{
[; ;main.c: 411: _status = 2;
"411
[e = __status -> -> 2 `i `uc ]
"412
}
[e :U 122 ]
[; ;main.c: 412: }
[; ;main.c: 413: return _status;
"413
[e ) __status ]
[e $UE 121  ]
[; ;main.c: 414: }
"414
[e :UE 121 ]
}
"415
[v _MFRC522_CRC `(v ~T0 @X0 1 ef3`*uc`uc`*uc ]
"416
{
[; ;main.c: 415: void MFRC522_CRC( char *dataIn, char length, char *dataOut )
[; ;main.c: 416: {
[e :U _MFRC522_CRC ]
"415
[v _dataIn `*uc ~T0 @X0 1 r1 ]
[v _length `uc ~T0 @X0 1 r2 ]
[v _dataOut `*uc ~T0 @X0 1 r3 ]
"416
[f ]
"417
[v _i `uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
[; ;main.c: 417: char i, n;
[; ;main.c: 418: MFRC522_Clear_Bit( 0x05, 0x04 );
"418
[e ( _MFRC522_Clear_Bit (2 , -> -> 5 `i `uc -> -> 4 `i `uc ]
[; ;main.c: 419: MFRC522_Set_Bit( 0x0A, 0x80 );
"419
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 422: for ( i = 0; i < length; i++ )
"422
{
[e = _i -> -> 0 `i `uc ]
[e $U 127  ]
"423
[e :U 124 ]
[; ;main.c: 423: {
{
[; ;main.c: 424: MFRC522_Wr( 0x09, *dataIn++ );
"424
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc *U ++ _dataIn * -> -> 1 `i `x -> -> # *U _dataIn `i `x ]
"425
}
"422
[e ++ _i -> -> 1 `i `uc ]
[e :U 127 ]
[e $ < -> _i `i -> _length `i 124  ]
[e :U 125 ]
"425
}
[; ;main.c: 425: }
[; ;main.c: 427: MFRC522_Wr( 0x01, 0x03 );
"427
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 429: i = 0xFF;
"429
[e = _i -> -> 255 `i `uc ]
[; ;main.c: 431: do
"431
[e :U 130 ]
[; ;main.c: 432: {
"432
{
[; ;main.c: 433: n = MFRC522_Rd( 0x05 );
"433
[e = _n ( _MFRC522_Rd (1 -> -> 5 `i `uc ]
[; ;main.c: 434: i--;
"434
[e -- _i -> -> 1 `i `uc ]
"435
}
[; ;main.c: 435: }
[; ;main.c: 436: while( i && !(n & 0x04) );
"436
[e $ && != -> _i `i -> -> -> 0 `i `uc `i ! != & -> _n `i -> 4 `i -> 0 `i 130  ]
[e :U 129 ]
[; ;main.c: 438: dataOut[0] = MFRC522_Rd( 0x22 );
"438
[e = *U + _dataOut * -> -> 0 `i `x -> -> # *U _dataOut `i `x ( _MFRC522_Rd (1 -> -> 34 `i `uc ]
[; ;main.c: 439: dataOut[1] = MFRC522_Rd( 0x21 );
"439
[e = *U + _dataOut * -> -> 1 `i `x -> -> # *U _dataOut `i `x ( _MFRC522_Rd (1 -> -> 33 `i `uc ]
[; ;main.c: 440: }
"440
[e :UE 123 ]
}
"441
[v _MFRC522_SelectTag `(uc ~T0 @X0 1 ef1`*uc ]
"442
{
[; ;main.c: 441: char MFRC522_SelectTag( char *serNum )
[; ;main.c: 442: {
[e :U _MFRC522_SelectTag ]
"441
[v _serNum `*uc ~T0 @X0 1 r1 ]
"442
[f ]
"443
[v _i `uc ~T0 @X0 1 a ]
"444
[v __status `uc ~T0 @X0 1 a ]
"445
[v _size `uc ~T0 @X0 1 a ]
"446
[v _recvBits `ui ~T0 @X0 1 a ]
[v _buffer `uc ~T0 @X0 -> 9 `i a ]
[; ;main.c: 443: char i;
[; ;main.c: 444: char _status;
[; ;main.c: 445: char size;
[; ;main.c: 446: unsigned recvBits;
[; ;main.c: 447: char buffer[9];
[; ;main.c: 451: buffer[0] = 0x93;
"451
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 147 `i `uc ]
[; ;main.c: 452: buffer[1] = 0x70;
"452
[e = *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 112 `i `uc ]
[; ;main.c: 454: for ( i=2; i < 7; i++ )
"454
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 7 `i 132  ]
[e $U 133  ]
"455
[e :U 132 ]
[; ;main.c: 455: {
{
[; ;main.c: 456: buffer[i] = *serNum++;
"456
[e = *U + &U _buffer * -> _i `ux -> -> # *U &U _buffer `ui `ux *U ++ _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x ]
"457
}
"454
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 132  ]
[e :U 133 ]
"457
}
[; ;main.c: 457: }
[; ;main.c: 459: MFRC522_CRC( buffer, 7, &buffer[7] );
"459
[e ( _MFRC522_CRC (3 , , &U _buffer -> -> 7 `i `uc &U *U + &U _buffer * -> -> -> 7 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[; ;main.c: 461: _status = MFRC522_ToCard( 0x0C, buffer, 9, buffer, &recvBits );
"461
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buffer -> -> 9 `i `uc &U _buffer &U _recvBits ]
[; ;main.c: 462: if ( (_status == 0) && (recvBits == 0x18) )
"462
[e $ ! && == -> __status `i -> 0 `i == _recvBits -> -> 24 `i `ui 135  ]
[; ;main.c: 463: {
"463
{
[; ;main.c: 464: size = buffer[0];
"464
[e = _size *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"465
}
[; ;main.c: 465: }
[e $U 136  ]
"466
[e :U 135 ]
[; ;main.c: 466: else
[; ;main.c: 467: {
"467
{
[; ;main.c: 468: size = 0;
"468
[e = _size -> -> 0 `i `uc ]
"469
}
[e :U 136 ]
[; ;main.c: 469: }
[; ;main.c: 470: return size;
"470
[e ) _size ]
[e $UE 131  ]
[; ;main.c: 471: }
"471
[e :UE 131 ]
}
"473
[v _MFRC522_Halt `(v ~T0 @X0 1 ef ]
"474
{
[; ;main.c: 473: void MFRC522_Halt()
[; ;main.c: 474: {
[e :U _MFRC522_Halt ]
[f ]
"475
[v _unLen `ui ~T0 @X0 1 a ]
"476
[v _buff `uc ~T0 @X0 -> 4 `i a ]
[; ;main.c: 475: unsigned unLen;
[; ;main.c: 476: char buff[4];
[; ;main.c: 478: buff[0] = 0x50;
"478
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 80 `i `uc ]
[; ;main.c: 479: buff[1] = 0;
"479
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 480: MFRC522_CRC( buff, 2, &buff[2] );
"480
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
[; ;main.c: 481: MFRC522_Clear_Bit( 0x08, 0x80 );
"481
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 482: MFRC522_ToCard( 0x0C, buff, 4, buff, &unLen );
"482
[e ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _unLen ]
[; ;main.c: 483: MFRC522_Clear_Bit( 0x08, 0x08 );
"483
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
[; ;main.c: 484: }
"484
[e :UE 137 ]
}
"485
[v _MFRC522_Auth `(uc ~T0 @X0 1 ef4`uc`uc`*uc`*uc ]
"486
{
[; ;main.c: 485: char MFRC522_Auth( char authMode, char BlockAddr, char *Sectorkey, char *serNum )
[; ;main.c: 486: {
[e :U _MFRC522_Auth ]
"485
[v _authMode `uc ~T0 @X0 1 r1 ]
[v _BlockAddr `uc ~T0 @X0 1 r2 ]
[v _Sectorkey `*uc ~T0 @X0 1 r3 ]
[v _serNum `*uc ~T0 @X0 1 r4 ]
"486
[f ]
"487
[v __status `uc ~T0 @X0 1 a ]
"488
[v _recvBits `ui ~T0 @X0 1 a ]
"489
[v _i `uc ~T0 @X0 1 a ]
"490
[v _buff `uc ~T0 @X0 -> 12 `i a ]
[; ;main.c: 487: char _status;
[; ;main.c: 488: unsigned recvBits;
[; ;main.c: 489: char i;
[; ;main.c: 490: char buff[12];
[; ;main.c: 493: buff[0] = authMode;
"493
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux _authMode ]
[; ;main.c: 494: buff[1] = BlockAddr;
"494
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _BlockAddr ]
[; ;main.c: 496: for ( i = 2; i < 8; i++ )
"496
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 8 `i 139  ]
[e $U 140  ]
"497
[e :U 139 ]
[; ;main.c: 497: {
{
[; ;main.c: 498: buff[i] = Sectorkey[i-2];
"498
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _Sectorkey * -> - -> _i `i -> 2 `i `x -> -> # *U _Sectorkey `i `x ]
"499
}
"496
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 139  ]
[e :U 140 ]
"499
}
[; ;main.c: 499: }
[; ;main.c: 501: for ( i = 8; i < 12; i++ )
"501
{
[e = _i -> -> 8 `i `uc ]
[e $ < -> _i `i -> 12 `i 142  ]
[e $U 143  ]
"502
[e :U 142 ]
[; ;main.c: 502: {
{
[; ;main.c: 503: buff[i] = serNum[i-8];
"503
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _serNum * -> - -> _i `i -> 8 `i `x -> -> # *U _serNum `i `x ]
"504
}
"501
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 12 `i 142  ]
[e :U 143 ]
"504
}
[; ;main.c: 504: }
[; ;main.c: 506: _status = MFRC522_ToCard( 0x0E, buff, 12, buff, &recvBits );
"506
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 14 `i `uc &U _buff -> -> 12 `i `uc &U _buff &U _recvBits ]
[; ;main.c: 508: if ( ( _status != 0 ) || !( MFRC522_Rd( 0x08 ) & 0x08 ) )
"508
[e $ ! || != -> __status `i -> 0 `i ! != & -> ( _MFRC522_Rd (1 -> -> 8 `i `uc `i -> 8 `i -> 0 `i 145  ]
[; ;main.c: 509: {
"509
{
[; ;main.c: 510: _status = 2;
"510
[e = __status -> -> 2 `i `uc ]
"511
}
[e :U 145 ]
[; ;main.c: 511: }
[; ;main.c: 513: return _status;
"513
[e ) __status ]
[e $UE 138  ]
[; ;main.c: 514: }
"514
[e :UE 138 ]
}
"515
[v _MFRC522_Write `(uc ~T0 @X0 1 ef2`uc`*uc ]
"516
{
[; ;main.c: 515: char MFRC522_Write( char blockAddr, char *writeData )
[; ;main.c: 516: {
[e :U _MFRC522_Write ]
"515
[v _blockAddr `uc ~T0 @X0 1 r1 ]
[v _writeData `*uc ~T0 @X0 1 r2 ]
"516
[f ]
"517
[v __status `uc ~T0 @X0 1 a ]
"518
[v _recvBits `ui ~T0 @X0 1 a ]
"519
[v _i `uc ~T0 @X0 1 a ]
"520
[v _buff `uc ~T0 @X0 -> 18 `i a ]
[; ;main.c: 517: char _status;
[; ;main.c: 518: unsigned recvBits;
[; ;main.c: 519: char i;
[; ;main.c: 520: char buff[18];
[; ;main.c: 521: buff[0] = 0xA0;
"521
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 160 `i `uc ]
[; ;main.c: 522: buff[1] = blockAddr;
"522
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _blockAddr ]
[; ;main.c: 524: MFRC522_CRC( buff, 2, &buff[2] );
"524
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
[; ;main.c: 525: _status = MFRC522_ToCard( 0x0C, buff, 4, buff, &recvBits );
"525
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _recvBits ]
[; ;main.c: 526: if ( (_status != 0) || (recvBits != 4) || ( (buff[0] & 0x0F) != 0x0A) )
"526
[e $ ! || || != -> __status `i -> 0 `i != _recvBits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 147  ]
[; ;main.c: 527: {
"527
{
[; ;main.c: 528: _status = 2;
"528
[e = __status -> -> 2 `i `uc ]
"529
}
[e :U 147 ]
[; ;main.c: 529: }
[; ;main.c: 530: if (_status == 0)
"530
[e $ ! == -> __status `i -> 0 `i 148  ]
[; ;main.c: 531: {
"531
{
[; ;main.c: 532: for ( i = 0; i < 16; i++ )
"532
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 149  ]
[e $U 150  ]
"533
[e :U 149 ]
[; ;main.c: 533: {
{
[; ;main.c: 534: buff[i] = writeData[i];
"534
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _writeData * -> _i `ux -> -> # *U _writeData `ui `ux ]
"535
}
"532
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 149  ]
[e :U 150 ]
"535
}
[; ;main.c: 535: }
[; ;main.c: 537: MFRC522_CRC( buff, 16, &buff[16] );
"537
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 16 `i `uc &U *U + &U _buff * -> -> -> 16 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
[; ;main.c: 538: _status = MFRC522_ToCard( 0x0C, buff, 18, buff, &recvBits );
"538
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 18 `i `uc &U _buff &U _recvBits ]
[; ;main.c: 539: if ( (_status != 0) || (recvBits != 4) || ( (buff[0] & 0x0F) != 0x0A ) )
"539
[e $ ! || || != -> __status `i -> 0 `i != _recvBits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 152  ]
[; ;main.c: 540: {
"540
{
[; ;main.c: 541: _status = 2;
"541
[e = __status -> -> 2 `i `uc ]
"542
}
[e :U 152 ]
"543
}
[e :U 148 ]
[; ;main.c: 542: }
[; ;main.c: 543: }
[; ;main.c: 544: return _status;
"544
[e ) __status ]
[e $UE 146  ]
[; ;main.c: 545: }
"545
[e :UE 146 ]
}
"546
[v _MFRC522_Read `(uc ~T0 @X0 1 ef2`uc`*uc ]
"547
{
[; ;main.c: 546: char MFRC522_Read( char blockAddr, char *recvData )
[; ;main.c: 547: {
[e :U _MFRC522_Read ]
"546
[v _blockAddr `uc ~T0 @X0 1 r1 ]
[v _recvData `*uc ~T0 @X0 1 r2 ]
"547
[f ]
"548
[v __status `uc ~T0 @X0 1 a ]
"549
[v _unLen `ui ~T0 @X0 1 a ]
[; ;main.c: 548: char _status;
[; ;main.c: 549: unsigned unLen;
[; ;main.c: 550: recvData[0] = 0x30;
"550
[e = *U + _recvData * -> -> 0 `i `x -> -> # *U _recvData `i `x -> -> 48 `i `uc ]
[; ;main.c: 551: recvData[1] = blockAddr;
"551
[e = *U + _recvData * -> -> 1 `i `x -> -> # *U _recvData `i `x _blockAddr ]
[; ;main.c: 553: MFRC522_CRC( recvData, 2, &recvData[2] );
"553
[e ( _MFRC522_CRC (3 , , _recvData -> -> 2 `i `uc &U *U + _recvData * -> -> 2 `i `x -> -> # *U _recvData `i `x ]
[; ;main.c: 555: _status = MFRC522_ToCard( 0x0C, recvData, 4, recvData, &unLen );
"555
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _recvData -> -> 4 `i `uc _recvData &U _unLen ]
[; ;main.c: 556: if ( (_status != 0) || (unLen != 0x90) )
"556
[e $ ! || != -> __status `i -> 0 `i != _unLen -> -> 144 `i `ui 154  ]
[; ;main.c: 557: {
"557
{
[; ;main.c: 558: _status = 2;
"558
[e = __status -> -> 2 `i `uc ]
"559
}
[e :U 154 ]
[; ;main.c: 559: }
[; ;main.c: 560: return _status;
"560
[e ) __status ]
[e $UE 153  ]
[; ;main.c: 561: }
"561
[e :UE 153 ]
}
"562
[v _MFRC522_AntiColl `(uc ~T0 @X0 1 ef1`*uc ]
"563
{
[; ;main.c: 562: char MFRC522_AntiColl( char *serNum )
[; ;main.c: 563: {
[e :U _MFRC522_AntiColl ]
"562
[v _serNum `*uc ~T0 @X0 1 r1 ]
"563
[f ]
"564
[v __status `uc ~T0 @X0 1 a ]
"565
[v _i `uc ~T0 @X0 1 a ]
"566
[v _serNumCheck `uc ~T0 @X0 1 a ]
[; ;main.c: 564: char _status;
[; ;main.c: 565: char i;
[; ;main.c: 566: char serNumCheck = 0;
[e = _serNumCheck -> -> 0 `i `uc ]
"567
[v _unLen `ui ~T0 @X0 1 a ]
[; ;main.c: 567: unsigned unLen;
[; ;main.c: 568: MFRC522_Wr( 0x0D, 0x00 );
"568
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 569: serNum[0] = 0x93;
"569
[e = *U + _serNum * -> -> 0 `i `x -> -> # *U _serNum `i `x -> -> 147 `i `uc ]
[; ;main.c: 570: serNum[1] = 0x20;
"570
[e = *U + _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x -> -> 32 `i `uc ]
[; ;main.c: 571: MFRC522_Clear_Bit( 0x08, 0x08 );
"571
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
[; ;main.c: 572: _status = MFRC522_ToCard( 0x0C, serNum, 2, serNum, &unLen );
"572
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _serNum -> -> 2 `i `uc _serNum &U _unLen ]
[; ;main.c: 573: if (_status == 0)
"573
[e $ ! == -> __status `i -> 0 `i 156  ]
[; ;main.c: 574: {
"574
{
[; ;main.c: 575: for ( i=0; i < 4; i++ )
"575
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 157  ]
[e $U 158  ]
"576
[e :U 157 ]
[; ;main.c: 576: {
{
[; ;main.c: 577: serNumCheck ^= serNum[i];
"577
[e =^ _serNumCheck *U + _serNum * -> _i `ux -> -> # *U _serNum `ui `ux ]
"578
}
"575
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 157  ]
[e :U 158 ]
"578
}
[; ;main.c: 578: }
[; ;main.c: 580: if ( serNumCheck != serNum[4] )
"580
[e $ ! != -> _serNumCheck `i -> *U + _serNum * -> -> 4 `i `x -> -> # *U _serNum `i `x `i 160  ]
[; ;main.c: 581: {
"581
{
[; ;main.c: 582: _status = 2;
"582
[e = __status -> -> 2 `i `uc ]
"583
}
[e :U 160 ]
"584
}
[e :U 156 ]
[; ;main.c: 583: }
[; ;main.c: 584: }
[; ;main.c: 585: return _status;
"585
[e ) __status ]
[e $UE 155  ]
[; ;main.c: 586: }
"586
[e :UE 155 ]
}
"592
[v _MFRC522_isCard `(uc ~T0 @X0 1 ef1`*uc ]
"593
{
[; ;main.c: 592: char MFRC522_isCard( char *TagType )
[; ;main.c: 593: {
[e :U _MFRC522_isCard ]
"592
[v _TagType `*uc ~T0 @X0 1 r1 ]
"593
[f ]
[; ;main.c: 594: if (MFRC522_Request( 0x26, TagType ) == 0)
"594
[e $ ! == -> ( _MFRC522_Request (2 , -> -> 38 `i `uc _TagType `i -> 0 `i 162  ]
[; ;main.c: 595: return 1;
"595
[e ) -> -> 1 `i `uc ]
[e $UE 161  ]
[e $U 163  ]
"596
[e :U 162 ]
[; ;main.c: 596: else
[; ;main.c: 597: return 0;
"597
[e ) -> -> 0 `i `uc ]
[e $UE 161  ]
[e :U 163 ]
[; ;main.c: 598: }
"598
[e :UE 161 ]
}
"599
[v _MFRC522_ReadCardSerial `(uc ~T0 @X0 1 ef1`*uc ]
"600
{
[; ;main.c: 599: char MFRC522_ReadCardSerial( char *str )
[; ;main.c: 600: {
[e :U _MFRC522_ReadCardSerial ]
"599
[v _str `*uc ~T0 @X0 1 r1 ]
"600
[f ]
"601
[v __status `uc ~T0 @X0 1 a ]
[; ;main.c: 601: char _status;
[; ;main.c: 602: _status = MFRC522_AntiColl( str );
"602
[e = __status ( _MFRC522_AntiColl (1 _str ]
[; ;main.c: 603: str[5] = 0;
"603
[e = *U + _str * -> -> 5 `i `x -> -> # *U _str `i `x -> -> 0 `i `uc ]
[; ;main.c: 604: if (_status == 0)
"604
[e $ ! == -> __status `i -> 0 `i 165  ]
[; ;main.c: 605: return 1;
"605
[e ) -> -> 1 `i `uc ]
[e $UE 164  ]
[e $U 166  ]
"606
[e :U 165 ]
[; ;main.c: 606: else
[; ;main.c: 607: return 0;
"607
[e ) -> -> 0 `i `uc ]
[e $UE 164  ]
[e :U 166 ]
[; ;main.c: 608: }
"608
[e :UE 164 ]
}
"634
[v _key `uc ~T0 @X0 -> 6 `i e ]
[i _key
:U ..
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
-> -> 255 `i `uc
..
]
[; ;main.c: 634: char key[6] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };
"635
[v _writeData `uc ~T0 @X0 -> 0 `x e ]
[i _writeData
:U ..
-> 77 `c
-> 105 `c
-> 99 `c
-> 114 `c
-> 111 `c
-> 99 `c
-> 111 `c
-> 110 `c
-> 116 `c
-> 114 `c
-> 111 `c
-> 108 `c
-> 97 `c
-> 110 `c
-> 100 `c
-> 111 `c
-> 115 `c
-> 0 `c
..
]
[; ;main.c: 635: char writeData[] = "Microcontrolandos";
"636
[v _main `(v ~T0 @X0 1 ef ]
"637
{
[; ;main.c: 636: void main()
[; ;main.c: 637: {
[e :U _main ]
[f ]
"638
[v _msg `uc ~T0 @X0 -> 12 `i a ]
"639
[v _UID `uc ~T0 @X0 -> 6 `i a ]
"640
[v _TagType `ui ~T0 @X0 1 a ]
"641
[v _size `uc ~T0 @X0 1 a ]
"642
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 638: char msg[12];
[; ;main.c: 639: char UID[6];
[; ;main.c: 640: unsigned int TagType;
[; ;main.c: 641: char size;
[; ;main.c: 642: char i;
[; ;main.c: 644: SPI_init();
"644
[e ( _SPI_init ..  ]
[; ;main.c: 646: UART_init();
"646
[e ( _UART_init ..  ]
[; ;main.c: 649: MFRC522_Init();
"649
[e ( _MFRC522_Init ..  ]
[; ;main.c: 651: while(1)
"651
[e :U 169 ]
[; ;main.c: 652: {
"652
{
[; ;main.c: 654: if( MFRC522_isCard( &TagType ) )
"654
[e $ ! != -> ( _MFRC522_isCard (1 -> &U _TagType `*uc `i -> -> -> 0 `i `uc `i 171  ]
[; ;main.c: 655: {
"655
{
[; ;main.c: 661: printf("Tipo de Tag: %d\n",TagType);
"661
[e ( _printf , (. :s 1C _TagType ]
[; ;main.c: 663: if( MFRC522_ReadCardSerial( &UID ) )
"663
[e $ ! != -> ( _MFRC522_ReadCardSerial (1 &U _UID `i -> -> -> 0 `i `uc `i 172  ]
[; ;main.c: 664: {
"664
{
[; ;main.c: 665: printf("Codigo: ");
"665
[e ( _printf :s 2C ]
[; ;main.c: 666: for( i=0; i < 5; i++)
"666
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 5 `i 173  ]
[e $U 174  ]
"667
[e :U 173 ]
[; ;main.c: 667: {
{
[; ;main.c: 668: printf("%c",UID[i]);
"668
[e ( _printf , (. :s 3C -> *U + &U _UID * -> _i `ux -> -> # *U &U _UID `ui `ux `i ]
"669
}
"666
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 5 `i 173  ]
[e :U 174 ]
"669
}
[; ;main.c: 669: }
[; ;main.c: 670: printf("\n");
"670
[e ( _printf :s 4C ]
[; ;main.c: 671: size = MFRC522_SelectTag( &UID );
"671
[e = _size ( _MFRC522_SelectTag (1 &U _UID ]
"672
}
[e :U 172 ]
[; ;main.c: 672: }
[; ;main.c: 697: MFRC522_Halt();
"697
[e ( _MFRC522_Halt ..  ]
"698
}
[e :U 171 ]
"699
}
[e :U 168 ]
"651
[e $U 169  ]
[e :U 170 ]
[; ;main.c: 698: }
[; ;main.c: 699: }
[; ;main.c: 700: }
"700
[e :UE 167 ]
}
[p f _printf 8913024 ]
[a 3C 37 99 0 ]
[a 2C 67 111 100 105 103 111 58 32 0 ]
[a 1C 84 105 112 111 32 100 101 32 84 97 103 58 32 37 100 10 0 ]
[a 4C 10 0 ]
