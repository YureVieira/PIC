Version 3.2 HI-TECH Software Intermediate Code
"940 D:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f628a.h
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"219
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
[v F599 `(v ~T0 @X0 1 tf1`ul ]
"154 D:\Program Files (x86)\Microchip\xc8\v1.33\include\pic.h
[v __delay `JF599 ~T0 @X0 0 e ]
[p i __delay ]
"1520 D:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f628a.h
[v _TXIF `Vb ~T0 @X0 0 e@100 ]
"729
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"946
[s S38 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S38 . TRISB0 TRISB1 TRISB2 TRISB3 TRISB4 TRISB5 TRISB6 TRISB7 ]
"945
[u S37 `S38 1 ]
[n S37 . . ]
"957
[v _TRISBbits `VS37 ~T0 @X0 0 e@134 ]
"1117
[s S46 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S46 . TX9D TRMT BRGH . SYNC TXEN TX9 CSRC ]
"1116
[u S45 `S46 1 ]
[n S45 . . ]
"1128
[v _TXSTAbits `VS45 ~T0 @X0 0 e@152 ]
"665
[s S27 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S27 . RX9D OERR FERR ADEN CREN SREN RX9 SPEN ]
"675
[s S28 :3 `uc 1 :1 `uc 1 ]
[n S28 . . ADDEN ]
"664
[u S26 `S27 1 `S28 1 ]
[n S26 . . . ]
"680
[v _RCSTAbits `VS26 ~T0 @X0 0 e@24 ]
"1167
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"1416
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"735
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"164
[s S7 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S7 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"163
[u S6 `S7 1 ]
[n S6 . . ]
"175
[v _PORTAbits `VS6 ~T0 @X0 0 e@5 ]
"885
[s S36 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S36 . TRISA0 TRISA1 TRISA2 TRISA3 TRISA4 TRISA5 TRISA6 TRISA7 ]
"884
[u S35 `S36 1 ]
[n S35 . . ]
"896
[v _TRISAbits `VS35 ~T0 @X0 0 e@133 ]
[p mainexit ]
"225
[s S9 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S9 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"224
[u S8 `S9 1 ]
[n S8 . . ]
"236
[v _PORTBbits `VS8 ~T0 @X0 0 e@6 ]
"206 D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h
[v _printf `(i ~T0 @X0 0 ev`*Cuc ]
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic16f628a.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 D:\Program Files (x86)\Microchip\xc8\v1.33\include\pic16f628a.h
[; ;pic16f628a.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f628a.h: 53: extern volatile unsigned char TMR0 @ 0x001;
"55
[; ;pic16f628a.h: 55: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f628a.h: 59: extern volatile unsigned char PCL @ 0x002;
"61
[; ;pic16f628a.h: 61: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f628a.h: 65: extern volatile unsigned char STATUS @ 0x003;
"67
[; ;pic16f628a.h: 67: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f628a.h: 70: typedef union {
[; ;pic16f628a.h: 71: struct {
[; ;pic16f628a.h: 72: unsigned C :1;
[; ;pic16f628a.h: 73: unsigned DC :1;
[; ;pic16f628a.h: 74: unsigned Z :1;
[; ;pic16f628a.h: 75: unsigned nPD :1;
[; ;pic16f628a.h: 76: unsigned nTO :1;
[; ;pic16f628a.h: 77: unsigned RP :2;
[; ;pic16f628a.h: 78: unsigned IRP :1;
[; ;pic16f628a.h: 79: };
[; ;pic16f628a.h: 80: struct {
[; ;pic16f628a.h: 81: unsigned :5;
[; ;pic16f628a.h: 82: unsigned RP0 :1;
[; ;pic16f628a.h: 83: unsigned RP1 :1;
[; ;pic16f628a.h: 84: };
[; ;pic16f628a.h: 85: struct {
[; ;pic16f628a.h: 86: unsigned CARRY :1;
[; ;pic16f628a.h: 87: };
[; ;pic16f628a.h: 88: struct {
[; ;pic16f628a.h: 89: unsigned :2;
[; ;pic16f628a.h: 90: unsigned ZERO :1;
[; ;pic16f628a.h: 91: };
[; ;pic16f628a.h: 92: } STATUSbits_t;
[; ;pic16f628a.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f628a.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f628a.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f628a.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f628a.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f628a.h: 163: typedef union {
[; ;pic16f628a.h: 164: struct {
[; ;pic16f628a.h: 165: unsigned RA0 :1;
[; ;pic16f628a.h: 166: unsigned RA1 :1;
[; ;pic16f628a.h: 167: unsigned RA2 :1;
[; ;pic16f628a.h: 168: unsigned RA3 :1;
[; ;pic16f628a.h: 169: unsigned RA4 :1;
[; ;pic16f628a.h: 170: unsigned RA5 :1;
[; ;pic16f628a.h: 171: unsigned RA6 :1;
[; ;pic16f628a.h: 172: unsigned RA7 :1;
[; ;pic16f628a.h: 173: };
[; ;pic16f628a.h: 174: } PORTAbits_t;
[; ;pic16f628a.h: 175: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f628a.h: 219: extern volatile unsigned char PORTB @ 0x006;
"221
[; ;pic16f628a.h: 221: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f628a.h: 224: typedef union {
[; ;pic16f628a.h: 225: struct {
[; ;pic16f628a.h: 226: unsigned RB0 :1;
[; ;pic16f628a.h: 227: unsigned RB1 :1;
[; ;pic16f628a.h: 228: unsigned RB2 :1;
[; ;pic16f628a.h: 229: unsigned RB3 :1;
[; ;pic16f628a.h: 230: unsigned RB4 :1;
[; ;pic16f628a.h: 231: unsigned RB5 :1;
[; ;pic16f628a.h: 232: unsigned RB6 :1;
[; ;pic16f628a.h: 233: unsigned RB7 :1;
[; ;pic16f628a.h: 234: };
[; ;pic16f628a.h: 235: } PORTBbits_t;
[; ;pic16f628a.h: 236: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f628a.h: 280: extern volatile unsigned char PCLATH @ 0x00A;
"282
[; ;pic16f628a.h: 282: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f628a.h: 285: typedef union {
[; ;pic16f628a.h: 286: struct {
[; ;pic16f628a.h: 287: unsigned PCLATH :5;
[; ;pic16f628a.h: 288: };
[; ;pic16f628a.h: 289: } PCLATHbits_t;
[; ;pic16f628a.h: 290: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f628a.h: 299: extern volatile unsigned char INTCON @ 0x00B;
"301
[; ;pic16f628a.h: 301: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f628a.h: 304: typedef union {
[; ;pic16f628a.h: 305: struct {
[; ;pic16f628a.h: 306: unsigned RBIF :1;
[; ;pic16f628a.h: 307: unsigned INTF :1;
[; ;pic16f628a.h: 308: unsigned T0IF :1;
[; ;pic16f628a.h: 309: unsigned RBIE :1;
[; ;pic16f628a.h: 310: unsigned INTE :1;
[; ;pic16f628a.h: 311: unsigned T0IE :1;
[; ;pic16f628a.h: 312: unsigned PEIE :1;
[; ;pic16f628a.h: 313: unsigned GIE :1;
[; ;pic16f628a.h: 314: };
[; ;pic16f628a.h: 315: struct {
[; ;pic16f628a.h: 316: unsigned :2;
[; ;pic16f628a.h: 317: unsigned TMR0IF :1;
[; ;pic16f628a.h: 318: unsigned :2;
[; ;pic16f628a.h: 319: unsigned TMR0IE :1;
[; ;pic16f628a.h: 320: };
[; ;pic16f628a.h: 321: } INTCONbits_t;
[; ;pic16f628a.h: 322: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f628a.h: 376: extern volatile unsigned char PIR1 @ 0x00C;
"378
[; ;pic16f628a.h: 378: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f628a.h: 381: typedef union {
[; ;pic16f628a.h: 382: struct {
[; ;pic16f628a.h: 383: unsigned TMR1IF :1;
[; ;pic16f628a.h: 384: unsigned TMR2IF :1;
[; ;pic16f628a.h: 385: unsigned CCP1IF :1;
[; ;pic16f628a.h: 386: unsigned :1;
[; ;pic16f628a.h: 387: unsigned TXIF :1;
[; ;pic16f628a.h: 388: unsigned RCIF :1;
[; ;pic16f628a.h: 389: unsigned CMIF :1;
[; ;pic16f628a.h: 390: unsigned EEIF :1;
[; ;pic16f628a.h: 391: };
[; ;pic16f628a.h: 392: } PIR1bits_t;
[; ;pic16f628a.h: 393: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f628a.h: 432: extern volatile unsigned short TMR1 @ 0x00E;
"434
[; ;pic16f628a.h: 434: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f628a.h: 438: extern volatile unsigned char TMR1L @ 0x00E;
"440
[; ;pic16f628a.h: 440: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f628a.h: 444: extern volatile unsigned char TMR1H @ 0x00F;
"446
[; ;pic16f628a.h: 446: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f628a.h: 450: extern volatile unsigned char T1CON @ 0x010;
"452
[; ;pic16f628a.h: 452: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f628a.h: 455: typedef union {
[; ;pic16f628a.h: 456: struct {
[; ;pic16f628a.h: 457: unsigned TMR1ON :1;
[; ;pic16f628a.h: 458: unsigned TMR1CS :1;
[; ;pic16f628a.h: 459: unsigned nT1SYNC :1;
[; ;pic16f628a.h: 460: unsigned T1OSCEN :1;
[; ;pic16f628a.h: 461: unsigned T1CKPS :2;
[; ;pic16f628a.h: 462: };
[; ;pic16f628a.h: 463: struct {
[; ;pic16f628a.h: 464: unsigned :4;
[; ;pic16f628a.h: 465: unsigned T1CKPS0 :1;
[; ;pic16f628a.h: 466: unsigned T1CKPS1 :1;
[; ;pic16f628a.h: 467: };
[; ;pic16f628a.h: 468: } T1CONbits_t;
[; ;pic16f628a.h: 469: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f628a.h: 508: extern volatile unsigned char TMR2 @ 0x011;
"510
[; ;pic16f628a.h: 510: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f628a.h: 514: extern volatile unsigned char T2CON @ 0x012;
"516
[; ;pic16f628a.h: 516: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f628a.h: 519: typedef union {
[; ;pic16f628a.h: 520: struct {
[; ;pic16f628a.h: 521: unsigned T2CKPS :2;
[; ;pic16f628a.h: 522: unsigned TMR2ON :1;
[; ;pic16f628a.h: 523: unsigned TOUTPS :4;
[; ;pic16f628a.h: 524: };
[; ;pic16f628a.h: 525: struct {
[; ;pic16f628a.h: 526: unsigned T2CKPS0 :1;
[; ;pic16f628a.h: 527: unsigned T2CKPS1 :1;
[; ;pic16f628a.h: 528: unsigned :1;
[; ;pic16f628a.h: 529: unsigned TOUTPS0 :1;
[; ;pic16f628a.h: 530: unsigned TOUTPS1 :1;
[; ;pic16f628a.h: 531: unsigned TOUTPS2 :1;
[; ;pic16f628a.h: 532: unsigned TOUTPS3 :1;
[; ;pic16f628a.h: 533: };
[; ;pic16f628a.h: 534: } T2CONbits_t;
[; ;pic16f628a.h: 535: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f628a.h: 584: extern volatile unsigned short CCPR1 @ 0x015;
"586
[; ;pic16f628a.h: 586: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f628a.h: 590: extern volatile unsigned char CCPR1L @ 0x015;
"592
[; ;pic16f628a.h: 592: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f628a.h: 596: extern volatile unsigned char CCPR1H @ 0x016;
"598
[; ;pic16f628a.h: 598: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f628a.h: 602: extern volatile unsigned char CCP1CON @ 0x017;
"604
[; ;pic16f628a.h: 604: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f628a.h: 607: typedef union {
[; ;pic16f628a.h: 608: struct {
[; ;pic16f628a.h: 609: unsigned CCP1M :4;
[; ;pic16f628a.h: 610: unsigned CCP1Y :1;
[; ;pic16f628a.h: 611: unsigned CCP1X :1;
[; ;pic16f628a.h: 612: };
[; ;pic16f628a.h: 613: struct {
[; ;pic16f628a.h: 614: unsigned CCP1M0 :1;
[; ;pic16f628a.h: 615: unsigned CCP1M1 :1;
[; ;pic16f628a.h: 616: unsigned CCP1M2 :1;
[; ;pic16f628a.h: 617: unsigned CCP1M3 :1;
[; ;pic16f628a.h: 618: };
[; ;pic16f628a.h: 619: } CCP1CONbits_t;
[; ;pic16f628a.h: 620: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f628a.h: 659: extern volatile unsigned char RCSTA @ 0x018;
"661
[; ;pic16f628a.h: 661: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f628a.h: 664: typedef union {
[; ;pic16f628a.h: 665: struct {
[; ;pic16f628a.h: 666: unsigned RX9D :1;
[; ;pic16f628a.h: 667: unsigned OERR :1;
[; ;pic16f628a.h: 668: unsigned FERR :1;
[; ;pic16f628a.h: 669: unsigned ADEN :1;
[; ;pic16f628a.h: 670: unsigned CREN :1;
[; ;pic16f628a.h: 671: unsigned SREN :1;
[; ;pic16f628a.h: 672: unsigned RX9 :1;
[; ;pic16f628a.h: 673: unsigned SPEN :1;
[; ;pic16f628a.h: 674: };
[; ;pic16f628a.h: 675: struct {
[; ;pic16f628a.h: 676: unsigned :3;
[; ;pic16f628a.h: 677: unsigned ADDEN :1;
[; ;pic16f628a.h: 678: };
[; ;pic16f628a.h: 679: } RCSTAbits_t;
[; ;pic16f628a.h: 680: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f628a.h: 729: extern volatile unsigned char TXREG @ 0x019;
"731
[; ;pic16f628a.h: 731: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f628a.h: 735: extern volatile unsigned char RCREG @ 0x01A;
"737
[; ;pic16f628a.h: 737: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f628a.h: 741: extern volatile unsigned char CMCON @ 0x01F;
"743
[; ;pic16f628a.h: 743: asm("CMCON equ 01Fh");
[; <" CMCON equ 01Fh ;# ">
[; ;pic16f628a.h: 746: typedef union {
[; ;pic16f628a.h: 747: struct {
[; ;pic16f628a.h: 748: unsigned CM :3;
[; ;pic16f628a.h: 749: unsigned CIS :1;
[; ;pic16f628a.h: 750: unsigned C1INV :1;
[; ;pic16f628a.h: 751: unsigned C2INV :1;
[; ;pic16f628a.h: 752: unsigned C1OUT :1;
[; ;pic16f628a.h: 753: unsigned C2OUT :1;
[; ;pic16f628a.h: 754: };
[; ;pic16f628a.h: 755: struct {
[; ;pic16f628a.h: 756: unsigned CM0 :1;
[; ;pic16f628a.h: 757: unsigned CM1 :1;
[; ;pic16f628a.h: 758: unsigned CM2 :1;
[; ;pic16f628a.h: 759: };
[; ;pic16f628a.h: 760: } CMCONbits_t;
[; ;pic16f628a.h: 761: extern volatile CMCONbits_t CMCONbits @ 0x01F;
[; ;pic16f628a.h: 810: extern volatile unsigned char OPTION_REG @ 0x081;
"812
[; ;pic16f628a.h: 812: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f628a.h: 815: typedef union {
[; ;pic16f628a.h: 816: struct {
[; ;pic16f628a.h: 817: unsigned PS :3;
[; ;pic16f628a.h: 818: unsigned PSA :1;
[; ;pic16f628a.h: 819: unsigned T0SE :1;
[; ;pic16f628a.h: 820: unsigned T0CS :1;
[; ;pic16f628a.h: 821: unsigned INTEDG :1;
[; ;pic16f628a.h: 822: unsigned nRBPU :1;
[; ;pic16f628a.h: 823: };
[; ;pic16f628a.h: 824: struct {
[; ;pic16f628a.h: 825: unsigned PS0 :1;
[; ;pic16f628a.h: 826: unsigned PS1 :1;
[; ;pic16f628a.h: 827: unsigned PS2 :1;
[; ;pic16f628a.h: 828: };
[; ;pic16f628a.h: 829: } OPTION_REGbits_t;
[; ;pic16f628a.h: 830: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f628a.h: 879: extern volatile unsigned char TRISA @ 0x085;
"881
[; ;pic16f628a.h: 881: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f628a.h: 884: typedef union {
[; ;pic16f628a.h: 885: struct {
[; ;pic16f628a.h: 886: unsigned TRISA0 :1;
[; ;pic16f628a.h: 887: unsigned TRISA1 :1;
[; ;pic16f628a.h: 888: unsigned TRISA2 :1;
[; ;pic16f628a.h: 889: unsigned TRISA3 :1;
[; ;pic16f628a.h: 890: unsigned TRISA4 :1;
[; ;pic16f628a.h: 891: unsigned TRISA5 :1;
[; ;pic16f628a.h: 892: unsigned TRISA6 :1;
[; ;pic16f628a.h: 893: unsigned TRISA7 :1;
[; ;pic16f628a.h: 894: };
[; ;pic16f628a.h: 895: } TRISAbits_t;
[; ;pic16f628a.h: 896: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f628a.h: 940: extern volatile unsigned char TRISB @ 0x086;
"942
[; ;pic16f628a.h: 942: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f628a.h: 945: typedef union {
[; ;pic16f628a.h: 946: struct {
[; ;pic16f628a.h: 947: unsigned TRISB0 :1;
[; ;pic16f628a.h: 948: unsigned TRISB1 :1;
[; ;pic16f628a.h: 949: unsigned TRISB2 :1;
[; ;pic16f628a.h: 950: unsigned TRISB3 :1;
[; ;pic16f628a.h: 951: unsigned TRISB4 :1;
[; ;pic16f628a.h: 952: unsigned TRISB5 :1;
[; ;pic16f628a.h: 953: unsigned TRISB6 :1;
[; ;pic16f628a.h: 954: unsigned TRISB7 :1;
[; ;pic16f628a.h: 955: };
[; ;pic16f628a.h: 956: } TRISBbits_t;
[; ;pic16f628a.h: 957: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f628a.h: 1001: extern volatile unsigned char PIE1 @ 0x08C;
"1003
[; ;pic16f628a.h: 1003: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f628a.h: 1006: typedef union {
[; ;pic16f628a.h: 1007: struct {
[; ;pic16f628a.h: 1008: unsigned TMR1IE :1;
[; ;pic16f628a.h: 1009: unsigned TMR2IE :1;
[; ;pic16f628a.h: 1010: unsigned CCP1IE :1;
[; ;pic16f628a.h: 1011: unsigned :1;
[; ;pic16f628a.h: 1012: unsigned TXIE :1;
[; ;pic16f628a.h: 1013: unsigned RCIE :1;
[; ;pic16f628a.h: 1014: unsigned CMIE :1;
[; ;pic16f628a.h: 1015: unsigned EEIE :1;
[; ;pic16f628a.h: 1016: };
[; ;pic16f628a.h: 1017: } PIE1bits_t;
[; ;pic16f628a.h: 1018: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f628a.h: 1057: extern volatile unsigned char PCON @ 0x08E;
"1059
[; ;pic16f628a.h: 1059: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f628a.h: 1062: typedef union {
[; ;pic16f628a.h: 1063: struct {
[; ;pic16f628a.h: 1064: unsigned nBOR :1;
[; ;pic16f628a.h: 1065: unsigned nPOR :1;
[; ;pic16f628a.h: 1066: unsigned :1;
[; ;pic16f628a.h: 1067: unsigned OSCF :1;
[; ;pic16f628a.h: 1068: };
[; ;pic16f628a.h: 1069: struct {
[; ;pic16f628a.h: 1070: unsigned nBO :1;
[; ;pic16f628a.h: 1071: };
[; ;pic16f628a.h: 1072: struct {
[; ;pic16f628a.h: 1073: unsigned nBOD :1;
[; ;pic16f628a.h: 1074: };
[; ;pic16f628a.h: 1075: } PCONbits_t;
[; ;pic16f628a.h: 1076: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f628a.h: 1105: extern volatile unsigned char PR2 @ 0x092;
"1107
[; ;pic16f628a.h: 1107: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f628a.h: 1111: extern volatile unsigned char TXSTA @ 0x098;
"1113
[; ;pic16f628a.h: 1113: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f628a.h: 1116: typedef union {
[; ;pic16f628a.h: 1117: struct {
[; ;pic16f628a.h: 1118: unsigned TX9D :1;
[; ;pic16f628a.h: 1119: unsigned TRMT :1;
[; ;pic16f628a.h: 1120: unsigned BRGH :1;
[; ;pic16f628a.h: 1121: unsigned :1;
[; ;pic16f628a.h: 1122: unsigned SYNC :1;
[; ;pic16f628a.h: 1123: unsigned TXEN :1;
[; ;pic16f628a.h: 1124: unsigned TX9 :1;
[; ;pic16f628a.h: 1125: unsigned CSRC :1;
[; ;pic16f628a.h: 1126: };
[; ;pic16f628a.h: 1127: } TXSTAbits_t;
[; ;pic16f628a.h: 1128: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f628a.h: 1167: extern volatile unsigned char SPBRG @ 0x099;
"1169
[; ;pic16f628a.h: 1169: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f628a.h: 1173: extern volatile unsigned char EEDATA @ 0x09A;
"1175
[; ;pic16f628a.h: 1175: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic16f628a.h: 1179: extern volatile unsigned char EEADR @ 0x09B;
"1181
[; ;pic16f628a.h: 1181: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic16f628a.h: 1185: extern volatile unsigned char EECON1 @ 0x09C;
"1187
[; ;pic16f628a.h: 1187: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic16f628a.h: 1190: typedef union {
[; ;pic16f628a.h: 1191: struct {
[; ;pic16f628a.h: 1192: unsigned RD :1;
[; ;pic16f628a.h: 1193: unsigned WR :1;
[; ;pic16f628a.h: 1194: unsigned WREN :1;
[; ;pic16f628a.h: 1195: unsigned WRERR :1;
[; ;pic16f628a.h: 1196: };
[; ;pic16f628a.h: 1197: } EECON1bits_t;
[; ;pic16f628a.h: 1198: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic16f628a.h: 1222: extern volatile unsigned char EECON2 @ 0x09D;
"1224
[; ;pic16f628a.h: 1224: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic16f628a.h: 1228: extern volatile unsigned char VRCON @ 0x09F;
"1230
[; ;pic16f628a.h: 1230: asm("VRCON equ 09Fh");
[; <" VRCON equ 09Fh ;# ">
[; ;pic16f628a.h: 1233: typedef union {
[; ;pic16f628a.h: 1234: struct {
[; ;pic16f628a.h: 1235: unsigned VR :4;
[; ;pic16f628a.h: 1236: unsigned :1;
[; ;pic16f628a.h: 1237: unsigned VRR :1;
[; ;pic16f628a.h: 1238: unsigned VROE :1;
[; ;pic16f628a.h: 1239: unsigned VREN :1;
[; ;pic16f628a.h: 1240: };
[; ;pic16f628a.h: 1241: struct {
[; ;pic16f628a.h: 1242: unsigned VR0 :1;
[; ;pic16f628a.h: 1243: unsigned VR1 :1;
[; ;pic16f628a.h: 1244: unsigned VR2 :1;
[; ;pic16f628a.h: 1245: unsigned VR3 :1;
[; ;pic16f628a.h: 1246: };
[; ;pic16f628a.h: 1247: } VRCONbits_t;
[; ;pic16f628a.h: 1248: extern volatile VRCONbits_t VRCONbits @ 0x09F;
[; ;pic16f628a.h: 1298: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1300: extern volatile __bit ADEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f628a.h: 1302: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f628a.h: 1304: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f628a.h: 1306: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f628a.h: 1308: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f628a.h: 1310: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f628a.h: 1312: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f628a.h: 1314: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f628a.h: 1316: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f628a.h: 1318: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f628a.h: 1320: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f628a.h: 1322: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f628a.h: 1324: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f628a.h: 1326: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f628a.h: 1328: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f628a.h: 1330: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f628a.h: 1332: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f628a.h: 1334: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f628a.h: 1336: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f628a.h: 1338: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f628a.h: 1340: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f628a.h: 1342: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f628a.h: 1344: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f628a.h: 1346: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f628a.h: 1348: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f628a.h: 1350: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f628a.h: 1352: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f628a.h: 1354: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f628a.h: 1356: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f628a.h: 1358: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f628a.h: 1360: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f628a.h: 1362: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f628a.h: 1364: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f628a.h: 1366: extern volatile __bit OSCF @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f628a.h: 1368: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f628a.h: 1370: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f628a.h: 1372: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f628a.h: 1374: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f628a.h: 1376: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f628a.h: 1378: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f628a.h: 1380: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f628a.h: 1382: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f628a.h: 1384: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f628a.h: 1386: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f628a.h: 1388: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f628a.h: 1390: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f628a.h: 1392: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f628a.h: 1394: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f628a.h: 1396: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f628a.h: 1398: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f628a.h: 1400: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f628a.h: 1402: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f628a.h: 1404: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f628a.h: 1406: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f628a.h: 1408: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f628a.h: 1410: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f628a.h: 1412: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f628a.h: 1414: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f628a.h: 1416: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f628a.h: 1418: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f628a.h: 1420: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f628a.h: 1422: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f628a.h: 1424: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f628a.h: 1426: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f628a.h: 1428: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f628a.h: 1430: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f628a.h: 1432: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f628a.h: 1434: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f628a.h: 1436: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1438: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1440: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f628a.h: 1442: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f628a.h: 1444: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f628a.h: 1446: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f628a.h: 1448: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f628a.h: 1450: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f628a.h: 1452: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f628a.h: 1454: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f628a.h: 1456: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f628a.h: 1458: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f628a.h: 1460: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f628a.h: 1462: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f628a.h: 1464: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f628a.h: 1466: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f628a.h: 1468: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f628a.h: 1470: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f628a.h: 1472: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f628a.h: 1474: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f628a.h: 1476: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f628a.h: 1478: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f628a.h: 1480: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f628a.h: 1482: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f628a.h: 1484: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f628a.h: 1486: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f628a.h: 1488: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f628a.h: 1490: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f628a.h: 1492: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f628a.h: 1494: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f628a.h: 1496: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f628a.h: 1498: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f628a.h: 1500: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f628a.h: 1502: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f628a.h: 1504: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f628a.h: 1506: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f628a.h: 1508: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f628a.h: 1510: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f628a.h: 1512: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f628a.h: 1514: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f628a.h: 1516: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f628a.h: 1518: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f628a.h: 1520: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f628a.h: 1522: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f628a.h: 1524: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f628a.h: 1526: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f628a.h: 1528: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f628a.h: 1530: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f628a.h: 1532: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f628a.h: 1534: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f628a.h: 1536: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f628a.h: 1538: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f628a.h: 1540: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f628a.h: 1542: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f628a.h: 1544: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1546: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1548: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f628a.h: 1550: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f628a.h: 1552: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f628a.h: 1554: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f628a.h: 1556: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f628a.h: 1558: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 144: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
"4 main.c
[p x FOSC=HS ]
"5
[p x WDTE=OFF ]
"6
[p x PWRTE=OFF ]
"7
[p x MCLRE=OFF ]
"8
[p x BOREN=ON ]
"9
[p x LVP=ON ]
"10
[p x CPD=OFF ]
"11
[p x CP=OFF ]
[; ;stdio.h: 8: typedef int ptrdiff_t;
[; ;stdio.h: 9: typedef unsigned size_t;
[; ;stdio.h: 10: typedef unsigned short wchar_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 198: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
"31 SPI.c
[v __mode `uc ~T0 @X0 1 e ]
[; ;SPI.c: 31: unsigned char _mode;
"32
[v _SPI_init `(v ~T0 @X0 1 ef1`uc ]
"33
{
[; ;SPI.c: 32: void SPI_init(unsigned char mode)
[; ;SPI.c: 33: {
[e :U _SPI_init ]
"32
[v _mode `uc ~T0 @X0 1 r1 ]
"33
[f ]
[; ;SPI.c: 34: _mode = mode;
"34
[e = __mode _mode ]
[; ;SPI.c: 35: TRISB &= ~(1<<7 | 1<<6);
"35
[e =& _TRISB -> ~ | << -> 1 `i -> 7 `i << -> 1 `i -> 6 `i `uc ]
[; ;SPI.c: 36: TRISB |= (1<<5);
"36
[e =| _TRISB -> << -> 1 `i -> 5 `i `uc ]
[; ;SPI.c: 37: if(mode == 2 || mode == 3)
"37
[e $ ! || == -> _mode `i -> 2 `i == -> _mode `i -> 3 `i 54  ]
[; ;SPI.c: 38: PORTB |= (1<<7);
"38
[e =| _PORTB -> << -> 1 `i -> 7 `i `uc ]
[e $U 55  ]
"39
[e :U 54 ]
[; ;SPI.c: 39: else
[; ;SPI.c: 40: PORTB &= ~(1<<7);
"40
[e =& _PORTB -> ~ << -> 1 `i -> 7 `i `uc ]
[e :U 55 ]
[; ;SPI.c: 41: }
"41
[e :UE 53 ]
}
"42
[v _SPI_transfer `(uc ~T0 @X0 1 ef1`uc ]
"43
{
[; ;SPI.c: 42: unsigned char SPI_transfer(unsigned char data)
[; ;SPI.c: 43: {
[e :U _SPI_transfer ]
"42
[v _data `uc ~T0 @X0 1 r1 ]
"43
[f ]
"44
[v _ret `uc ~T0 @X0 1 a ]
[; ;SPI.c: 44: unsigned char ret;
[; ;SPI.c: 45: if(_mode==1 || _mode==3)
"45
[e $ ! || == -> __mode `i -> 1 `i == -> __mode `i -> 3 `i 57  ]
[; ;SPI.c: 46: {
"46
{
[; ;SPI.c: 47: for(int i=0;i<8;i++)
"47
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 58  ]
[e $U 59  ]
"48
[e :U 58 ]
[; ;SPI.c: 48: {
{
[; ;SPI.c: 50: if(data & 0x80)PORTB |= (1<<6);
"50
[e $ ! != & -> _data `i -> 128 `i -> 0 `i 61  ]
[e =| _PORTB -> << -> 1 `i -> 6 `i `uc ]
[e $U 62  ]
"51
[e :U 61 ]
[; ;SPI.c: 51: else PORTB &= ~(1<<6);
[e =& _PORTB -> ~ << -> 1 `i -> 6 `i `uc ]
[e :U 62 ]
[; ;SPI.c: 53: PORTB ^= (1<<7);
"53
[e =^ _PORTB -> << -> 1 `i -> 7 `i `uc ]
[; ;SPI.c: 54: if(PORTB & (1<<5))ret|=1;
"54
[e $ ! != & -> _PORTB `i << -> 1 `i -> 5 `i -> 0 `i 63  ]
[e =| _ret -> -> 1 `i `uc ]
[e :U 63 ]
[; ;SPI.c: 55: _delay((unsigned long)((10)*(16000000/4000000.0)));
"55
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;SPI.c: 56: PORTB ^= (1<<7);
"56
[e =^ _PORTB -> << -> 1 `i -> 7 `i `uc ]
[; ;SPI.c: 58: ret<<=1;
"58
[e =<< _ret -> 1 `i ]
[; ;SPI.c: 59: data<<=1;
"59
[e =<< _data -> 1 `i ]
[; ;SPI.c: 60: _delay((unsigned long)((10)*(16000000/4000000.0)));
"60
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"61
}
"47
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 58  ]
[e :U 59 ]
"61
}
"62
}
[; ;SPI.c: 61: }
[; ;SPI.c: 62: }
[e $U 64  ]
"63
[e :U 57 ]
[; ;SPI.c: 63: else
[; ;SPI.c: 64: {
"64
{
[v _ret `uc ~T0 @X0 1 a ]
[; ;SPI.c: 65: unsigned char ret;
[; ;SPI.c: 66: for(int i=0;i<8;i++)
"66
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 65  ]
[e $U 66  ]
"67
[e :U 65 ]
[; ;SPI.c: 67: {
{
[; ;SPI.c: 69: if(PORTB & (1<<5))ret|=1;
"69
[e $ ! != & -> _PORTB `i << -> 1 `i -> 5 `i -> 0 `i 68  ]
[e =| _ret -> -> 1 `i `uc ]
[e :U 68 ]
[; ;SPI.c: 70: PORTB ^= (1<<7);
"70
[e =^ _PORTB -> << -> 1 `i -> 7 `i `uc ]
[; ;SPI.c: 73: if(data & 0x80)PORTB |= (1<<6);
"73
[e $ ! != & -> _data `i -> 128 `i -> 0 `i 69  ]
[e =| _PORTB -> << -> 1 `i -> 6 `i `uc ]
[e $U 70  ]
"74
[e :U 69 ]
[; ;SPI.c: 74: else PORTB &= ~(1<<6);
[e =& _PORTB -> ~ << -> 1 `i -> 6 `i `uc ]
[e :U 70 ]
[; ;SPI.c: 75: _delay((unsigned long)((10)*(16000000/4000000.0)));
"75
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;SPI.c: 76: PORTB ^= (1<<7);
"76
[e =^ _PORTB -> << -> 1 `i -> 7 `i `uc ]
[; ;SPI.c: 78: ret<<=1;
"78
[e =<< _ret -> 1 `i ]
[; ;SPI.c: 79: data<<=1;
"79
[e =<< _data -> 1 `i ]
[; ;SPI.c: 80: _delay((unsigned long)((10)*(16000000/4000000.0)));
"80
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"81
}
"66
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 65  ]
[e :U 66 ]
"81
}
"82
}
[e :U 64 ]
[; ;SPI.c: 81: }
[; ;SPI.c: 82: }
[; ;SPI.c: 83: return ret;
"83
[e ) _ret ]
[e $UE 56  ]
[; ;SPI.c: 84: }
"84
[e :UE 56 ]
}
[; ;SPI.h: 5: void SPI_init(unsigned char mode);
[; ;SPI.h: 6: unsigned char SPI_transfer(unsigned char data);
"6 UART.c
[v _buffer `uc ~T0 @X0 -> 16 `i e ]
[; ;UART.c: 6: char buffer[16];
"7
[v _count `i ~T0 @X0 1 e ]
[i _count
-> 0 `i
]
[; ;UART.c: 7: int count=0;
"8
[v _putch `(v ~T0 @X0 1 ef1`uc ]
"9
{
[; ;UART.c: 8: void putch(char data)
[; ;UART.c: 9: {
[e :U _putch ]
"8
[v _data `uc ~T0 @X0 1 r1 ]
"9
[f ]
[; ;UART.c: 10: if(data == 10)
"10
[e $ ! == -> _data `i -> 10 `i 72  ]
[; ;UART.c: 11: {
"11
{
[; ;UART.c: 12: while(!TXIF)
"12
[e $U 73  ]
[e :U 74 ]
[; ;UART.c: 13: continue;
"13
[e $U 73  ]
[e :U 73 ]
"12
[e $ ! _TXIF 74  ]
[e :U 75 ]
[; ;UART.c: 14: TXREG = 10;
"14
[e = _TXREG -> -> 10 `i `uc ]
[; ;UART.c: 15: while(!TXIF)
"15
[e $U 76  ]
[e :U 77 ]
[; ;UART.c: 16: continue;
"16
[e $U 76  ]
[e :U 76 ]
"15
[e $ ! _TXIF 77  ]
[e :U 78 ]
[; ;UART.c: 17: TXREG = 13;
"17
[e = _TXREG -> -> 13 `i `uc ]
[; ;UART.c: 18: return;
"18
[e $UE 71  ]
"19
}
[e :U 72 ]
[; ;UART.c: 19: }
[; ;UART.c: 20: while(!TXIF)
"20
[e $U 79  ]
[e :U 80 ]
[; ;UART.c: 21: continue;
"21
[e $U 79  ]
[e :U 79 ]
"20
[e $ ! _TXIF 80  ]
[e :U 81 ]
[; ;UART.c: 22: TXREG = data;
"22
[e = _TXREG _data ]
[; ;UART.c: 23: }
"23
[e :UE 71 ]
}
[v F683 `(v ~T0 @X0 1 tf ]
"24
[v _UART_init `TF683 ~T0 @X0 1 e ]
"25
{
[; ;UART.c: 24: inline void UART_init()
[; ;UART.c: 25: {
[e :U _UART_init ]
[f ]
[; ;UART.c: 27: TRISBbits.TRISB1 = 1;
"27
[e = . . _TRISBbits 0 1 -> -> 1 `i `uc ]
[; ;UART.c: 28: TRISBbits.TRISB2 = 1;
"28
[e = . . _TRISBbits 0 2 -> -> 1 `i `uc ]
[; ;UART.c: 32: TXSTAbits.CSRC = 1;
"32
[e = . . _TXSTAbits 0 7 -> -> 1 `i `uc ]
[; ;UART.c: 33: TXSTAbits.TXEN = 1;
"33
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
[; ;UART.c: 34: TXSTAbits.SYNC = 0;
"34
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
[; ;UART.c: 37: RCSTAbits.SPEN = 1;
"37
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
[; ;UART.c: 38: RCSTAbits.CREN = 1;
"38
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
[; ;UART.c: 41: TXSTAbits.BRGH = 0;
"41
[e = . . _TXSTAbits 0 2 -> -> 0 `i `uc ]
[; ;UART.c: 42: SPBRG = 25;
"42
[e = _SPBRG -> -> 25 `i `uc ]
[; ;UART.c: 43: }
"43
[e :UE 82 ]
}
"44
[v _UART_available `(i ~T0 @X0 1 ef ]
"45
{
[; ;UART.c: 44: int UART_available()
[; ;UART.c: 45: {
[e :U _UART_available ]
[f ]
[; ;UART.c: 46: return count;
"46
[e ) _count ]
[e $UE 83  ]
[; ;UART.c: 47: }
"47
[e :UE 83 ]
}
"48
[v _UART_read_byte `(uc ~T0 @X0 1 ef ]
"49
{
[; ;UART.c: 48: char UART_read_byte()
[; ;UART.c: 49: {
[e :U _UART_read_byte ]
[f ]
"50
[v _data `uc ~T0 @X0 1 a ]
[; ;UART.c: 50: char data = buffer[0];
[e = _data *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[; ;UART.c: 51: count--;
"51
[e -- _count -> 1 `i ]
[; ;UART.c: 54: for(int i=0;i<count;i++)
"54
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 88  ]
"55
[e :U 85 ]
[; ;UART.c: 55: {
{
[; ;UART.c: 56: buffer[i]=buffer[i+1];
"56
[e = *U + &U _buffer * -> -> _i `ui `ux -> -> # *U &U _buffer `ui `ux *U + &U _buffer * -> -> + _i -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"57
}
"54
[e ++ _i -> 1 `i ]
[e :U 88 ]
[e $ < _i _count 85  ]
[e :U 86 ]
"57
}
[; ;UART.c: 57: }
[; ;UART.c: 58: return data;
"58
[e ) _data ]
[e $UE 84  ]
[; ;UART.c: 59: }
"59
[e :UE 84 ]
}
[v F689 `(v ~T0 @X0 1 tf ]
"61
[v __ISR_UART `TF689 ~T0 @X0 1 e ]
"62
{
[; ;UART.c: 61: inline void _ISR_UART()
[; ;UART.c: 62: {
[e :U __ISR_UART ]
[f ]
[; ;UART.c: 63: if(RCIF)
"63
[e $ ! _RCIF 90  ]
[; ;UART.c: 64: {
"64
{
[; ;UART.c: 65: buffer[count] = RCREG;
"65
[e = *U + &U _buffer * -> -> _count `ui `ux -> -> # *U &U _buffer `ui `ux _RCREG ]
[; ;UART.c: 66: count++;
"66
[e ++ _count -> 1 `i ]
"67
}
[e :U 90 ]
[; ;UART.c: 67: }
[; ;UART.c: 68: }
"68
[e :UE 89 ]
}
[; ;UART.h: 4: void putch(char data);
[; ;UART.h: 5: inline void UART_init();
[; ;UART.h: 6: int UART_available();
[; ;UART.h: 7: char UART_read_byte();
[; ;UART.h: 8: inline void _ISR_UART();
"123 main.c
[v _MFRC522_Wr `(v ~T0 @X0 1 sf2`uc`uc ]
"124
{
[; ;main.c: 123: static void MFRC522_Wr( char addr, char value )
[; ;main.c: 124: {
[e :U _MFRC522_Wr ]
"123
[v _addr `uc ~T0 @X0 1 r1 ]
[v _value `uc ~T0 @X0 1 r2 ]
"124
[f ]
[; ;main.c: 125: PORTAbits.RA1 = 0;
"125
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 126: SPI_transfer( ( addr << 1 ) & 0x7E );
"126
[e ( _SPI_transfer (1 -> & << -> _addr `i -> 1 `i -> 126 `i `uc ]
[; ;main.c: 127: SPI_transfer( value );
"127
[e ( _SPI_transfer (1 _value ]
[; ;main.c: 128: PORTAbits.RA1 = 1;
"128
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 129: }
"129
[e :UE 91 ]
}
"130
[v _MFRC522_Rd `(uc ~T0 @X0 1 sf1`uc ]
"131
{
[; ;main.c: 130: static char MFRC522_Rd( char addr )
[; ;main.c: 131: {
[e :U _MFRC522_Rd ]
"130
[v _addr `uc ~T0 @X0 1 r1 ]
"131
[f ]
"132
[v _value `uc ~T0 @X0 1 a ]
[; ;main.c: 132: char value;
[; ;main.c: 133: PORTAbits.RA1 = 0;
"133
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 134: SPI_transfer( (( addr << 1 ) & 0x7E) | 0x80 );
"134
[e ( _SPI_transfer (1 -> | & << -> _addr `i -> 1 `i -> 126 `i -> 128 `i `uc ]
[; ;main.c: 135: value = SPI_transfer( 0x00 );
"135
[e = _value ( _SPI_transfer (1 -> -> 0 `i `uc ]
[; ;main.c: 136: PORTAbits.RA1 = 1;
"136
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 137: return value;
"137
[e ) _value ]
[e $UE 92  ]
[; ;main.c: 138: }
"138
[e :UE 92 ]
}
"139
[v _MFRC522_Clear_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"140
{
[; ;main.c: 139: static void MFRC522_Clear_Bit( char addr, char mask )
[; ;main.c: 140: {
[e :U _MFRC522_Clear_Bit ]
"139
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"140
[f ]
[; ;main.c: 141: MFRC522_Wr( addr, MFRC522_Rd( addr ) & (~mask) );
"141
[e ( _MFRC522_Wr (2 , _addr -> & -> ( _MFRC522_Rd (1 _addr `i ~ -> _mask `i `uc ]
[; ;main.c: 142: }
"142
[e :UE 93 ]
}
"143
[v _MFRC522_Set_Bit `(v ~T0 @X0 1 sf2`uc`uc ]
"144
{
[; ;main.c: 143: static void MFRC522_Set_Bit( char addr, char mask )
[; ;main.c: 144: {
[e :U _MFRC522_Set_Bit ]
"143
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"144
[f ]
[; ;main.c: 145: MFRC522_Wr( addr, MFRC522_Rd( addr ) | mask );
"145
[e ( _MFRC522_Wr (2 , _addr -> | -> ( _MFRC522_Rd (1 _addr `i -> _mask `i `uc ]
[; ;main.c: 146: }
"146
[e :UE 94 ]
}
"147
[v _MFRC522_Reset `(v ~T0 @X0 1 ef ]
"148
{
[; ;main.c: 147: void MFRC522_Reset()
[; ;main.c: 148: {
[e :U _MFRC522_Reset ]
[f ]
[; ;main.c: 149: MFRC522_Wr( 0x01, 0x0F );
"149
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
[; ;main.c: 150: }
"150
[e :UE 95 ]
}
"151
[v _MFRC522_AntennaOn `(v ~T0 @X0 1 ef ]
"152
{
[; ;main.c: 151: void MFRC522_AntennaOn()
[; ;main.c: 152: {
[e :U _MFRC522_AntennaOn ]
[f ]
[; ;main.c: 153: MFRC522_Set_Bit( 0x14, 0x03 );
"153
[e ( _MFRC522_Set_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 154: }
"154
[e :UE 96 ]
}
"155
[v _MFRC522_AntennaOff `(v ~T0 @X0 1 ef ]
"156
{
[; ;main.c: 155: void MFRC522_AntennaOff()
[; ;main.c: 156: {
[e :U _MFRC522_AntennaOff ]
[f ]
[; ;main.c: 157: MFRC522_Clear_Bit( 0x14, 0x03 );
"157
[e ( _MFRC522_Clear_Bit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 158: }
"158
[e :UE 97 ]
}
"159
[v _MFRC522_Init `(v ~T0 @X0 1 ef ]
"160
{
[; ;main.c: 159: void MFRC522_Init()
[; ;main.c: 160: {
[e :U _MFRC522_Init ]
[f ]
[; ;main.c: 161: TRISAbits.TRISA1 = 0;
"161
[e = . . _TRISAbits 0 1 -> -> 0 `i `uc ]
[; ;main.c: 162: TRISAbits.TRISA0 = 0;
"162
[e = . . _TRISAbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 163: PORTAbits.RA1 = 1;
"163
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 164: PORTAbits.RA0 = 1;
"164
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;main.c: 166: MFRC522_Reset();
"166
[e ( _MFRC522_Reset ..  ]
[; ;main.c: 168: MFRC522_Wr( 0x2A, 0x8D );
"168
[e ( _MFRC522_Wr (2 , -> -> 42 `i `uc -> -> 141 `i `uc ]
[; ;main.c: 169: MFRC522_Wr( 0x2B, 0x3E );
"169
[e ( _MFRC522_Wr (2 , -> -> 43 `i `uc -> -> 62 `i `uc ]
[; ;main.c: 170: MFRC522_Wr( 0x2D, 30 );
"170
[e ( _MFRC522_Wr (2 , -> -> 45 `i `uc -> -> 30 `i `uc ]
[; ;main.c: 171: MFRC522_Wr( 0x2C, 0 );
"171
[e ( _MFRC522_Wr (2 , -> -> 44 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 173: MFRC522_Wr( 0x15, 0x40 );
"173
[e ( _MFRC522_Wr (2 , -> -> 21 `i `uc -> -> 64 `i `uc ]
[; ;main.c: 174: MFRC522_Wr( 0x11, 0x3D );
"174
[e ( _MFRC522_Wr (2 , -> -> 17 `i `uc -> -> 61 `i `uc ]
[; ;main.c: 179: MFRC522_AntennaOn();
"179
[e ( _MFRC522_AntennaOn ..  ]
[; ;main.c: 180: }
"180
[e :UE 98 ]
}
"181
[v _MFRC522_ToCard `(uc ~T0 @X0 1 ef5`uc`*uc`uc`*uc`*ui ]
"182
{
[; ;main.c: 181: char MFRC522_ToCard( char command, char *sendData, char sendLen, char *backData, unsigned *backLen )
[; ;main.c: 182: {
[e :U _MFRC522_ToCard ]
"181
[v _command `uc ~T0 @X0 1 r1 ]
[v _sendData `*uc ~T0 @X0 1 r2 ]
[v _sendLen `uc ~T0 @X0 1 r3 ]
[v _backData `*uc ~T0 @X0 1 r4 ]
[v _backLen `*ui ~T0 @X0 1 r5 ]
"182
[f ]
"183
[v __status `uc ~T0 @X0 1 a ]
[; ;main.c: 183: char _status = 2;
[e = __status -> -> 2 `i `uc ]
"184
[v _irqEn `uc ~T0 @X0 1 a ]
[; ;main.c: 184: char irqEn = 0x00;
[e = _irqEn -> -> 0 `i `uc ]
"185
[v _waitIRq `uc ~T0 @X0 1 a ]
[; ;main.c: 185: char waitIRq = 0x00;
[e = _waitIRq -> -> 0 `i `uc ]
"186
[v _lastBits `uc ~T0 @X0 1 a ]
"187
[v _n `uc ~T0 @X0 1 a ]
"188
[v _i `ui ~T0 @X0 1 a ]
[; ;main.c: 186: char lastBits;
[; ;main.c: 187: char n;
[; ;main.c: 188: unsigned i;
[; ;main.c: 190: switch (command)
"190
[e $U 101  ]
[; ;main.c: 191: {
"191
{
[; ;main.c: 192: case 0x0E:
"192
[e :U 102 ]
[; ;main.c: 193: {
"193
{
[; ;main.c: 194: irqEn = 0x12;
"194
[e = _irqEn -> -> 18 `i `uc ]
[; ;main.c: 195: waitIRq = 0x10;
"195
[e = _waitIRq -> -> 16 `i `uc ]
[; ;main.c: 196: break;
"196
[e $U 100  ]
"197
}
[; ;main.c: 197: }
[; ;main.c: 198: case 0x0C:
"198
[e :U 103 ]
[; ;main.c: 199: {
"199
{
[; ;main.c: 200: irqEn = 0x77;
"200
[e = _irqEn -> -> 119 `i `uc ]
[; ;main.c: 201: waitIRq = 0x30;
"201
[e = _waitIRq -> -> 48 `i `uc ]
[; ;main.c: 202: break;
"202
[e $U 100  ]
"203
}
[; ;main.c: 203: }
[; ;main.c: 204: default:
"204
[e :U 104 ]
[; ;main.c: 205: break;
"205
[e $U 100  ]
"206
}
[; ;main.c: 206: }
[e $U 100  ]
"190
[e :U 101 ]
[e [\ _command , $ -> -> 14 `i `uc 102
 , $ -> -> 12 `i `uc 103
 104 ]
"206
[e :U 100 ]
[; ;main.c: 207: MFRC522_Wr( 0x02, irqEn | 0x80 );
"207
[e ( _MFRC522_Wr (2 , -> -> 2 `i `uc -> | -> _irqEn `i -> 128 `i `uc ]
[; ;main.c: 208: MFRC522_Clear_Bit( 0x04, 0x80 );
"208
[e ( _MFRC522_Clear_Bit (2 , -> -> 4 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 209: MFRC522_Set_Bit( 0x0A, 0x80 );
"209
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 210: MFRC522_Wr( 0x01, 0x00 );
"210
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 215: for ( i=0; i < sendLen; i++ )
"215
{
[e = _i -> -> 0 `i `ui ]
[e $U 108  ]
"216
[e :U 105 ]
[; ;main.c: 216: {
{
[; ;main.c: 217: MFRC522_Wr( 0x09, sendData[i] );
"217
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc *U + _sendData * -> _i `ux -> -> # *U _sendData `ui `ux ]
"218
}
"215
[e ++ _i -> -> 1 `i `ui ]
[e :U 108 ]
[e $ < _i -> _sendLen `ui 105  ]
[e :U 106 ]
"218
}
[; ;main.c: 218: }
[; ;main.c: 220: MFRC522_Wr( 0x01, command );
"220
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc _command ]
[; ;main.c: 221: if (command == 0x0C )
"221
[e $ ! == -> _command `i -> 12 `i 109  ]
[; ;main.c: 222: {
"222
{
[; ;main.c: 223: MFRC522_Set_Bit( 0x0D, 0x80 );
"223
[e ( _MFRC522_Set_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
"224
}
[e :U 109 ]
[; ;main.c: 224: }
[; ;main.c: 227: i = 0xFFFF;
"227
[e = _i -> 65535 `ui ]
[; ;main.c: 228: do
"228
[e :U 112 ]
[; ;main.c: 229: {
"229
{
[; ;main.c: 232: n = MFRC522_Rd( 0x04 );
"232
[e = _n ( _MFRC522_Rd (1 -> -> 4 `i `uc ]
[; ;main.c: 233: i--;
"233
[e -- _i -> -> 1 `i `ui ]
"234
}
[; ;main.c: 234: }
[; ;main.c: 235: while ( i && !(n & 0x01) && !( n & waitIRq ) );
"235
[e $ && && != _i -> -> 0 `i `ui ! != & -> _n `i -> 1 `i -> 0 `i ! != & -> _n `i -> _waitIRq `i -> 0 `i 112  ]
[e :U 111 ]
[; ;main.c: 236: MFRC522_Clear_Bit( 0x0D, 0x80 );
"236
[e ( _MFRC522_Clear_Bit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 237: if (i != 0)
"237
[e $ ! != _i -> -> 0 `i `ui 113  ]
[; ;main.c: 238: {
"238
{
[; ;main.c: 239: if( !( MFRC522_Rd( 0x06 ) & 0x1B ) )
"239
[e $ ! ! != & -> ( _MFRC522_Rd (1 -> -> 6 `i `uc `i -> 27 `i -> 0 `i 114  ]
[; ;main.c: 240: {
"240
{
[; ;main.c: 241: _status = 0;
"241
[e = __status -> -> 0 `i `uc ]
[; ;main.c: 242: if ( n & irqEn & 0x01 )
"242
[e $ ! != & & -> _n `i -> _irqEn `i -> 1 `i -> 0 `i 115  ]
[; ;main.c: 243: {
"243
{
[; ;main.c: 244: _status = 1;
"244
[e = __status -> -> 1 `i `uc ]
"245
}
[e :U 115 ]
[; ;main.c: 245: }
[; ;main.c: 246: if ( command == 0x0C )
"246
[e $ ! == -> _command `i -> 12 `i 116  ]
[; ;main.c: 247: {
"247
{
[; ;main.c: 248: n = MFRC522_Rd( 0x0A );
"248
[e = _n ( _MFRC522_Rd (1 -> -> 10 `i `uc ]
[; ;main.c: 249: lastBits = MFRC522_Rd( 0x0C ) & 0x07;
"249
[e = _lastBits -> & -> ( _MFRC522_Rd (1 -> -> 12 `i `uc `i -> 7 `i `uc ]
[; ;main.c: 250: if (lastBits)
"250
[e $ ! != -> _lastBits `i -> -> -> 0 `i `uc `i 117  ]
[; ;main.c: 251: {
"251
{
[; ;main.c: 252: *backLen = (n-1) * 8 + lastBits;
"252
[e = *U _backLen -> + * - -> _n `i -> 1 `i -> 8 `i -> _lastBits `i `ui ]
"253
}
[; ;main.c: 253: }
[e $U 118  ]
"254
[e :U 117 ]
[; ;main.c: 254: else
[; ;main.c: 255: {
"255
{
[; ;main.c: 256: *backLen = n * 8;
"256
[e = *U _backLen -> * -> _n `i -> 8 `i `ui ]
"257
}
[e :U 118 ]
[; ;main.c: 257: }
[; ;main.c: 258: if (n == 0)
"258
[e $ ! == -> _n `i -> 0 `i 119  ]
[; ;main.c: 259: {
"259
{
[; ;main.c: 260: n = 1;
"260
[e = _n -> -> 1 `i `uc ]
"261
}
[e :U 119 ]
[; ;main.c: 261: }
[; ;main.c: 262: if (n > 16)
"262
[e $ ! > -> _n `i -> 16 `i 120  ]
[; ;main.c: 263: {
"263
{
[; ;main.c: 264: n = 16;
"264
[e = _n -> -> 16 `i `uc ]
"265
}
[e :U 120 ]
[; ;main.c: 265: }
[; ;main.c: 267: for (i=0; i < n; i++)
"267
{
[e = _i -> -> 0 `i `ui ]
[e $U 124  ]
"268
[e :U 121 ]
[; ;main.c: 268: {
{
[; ;main.c: 269: backData[i] = MFRC522_Rd( 0x09 );
"269
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux ( _MFRC522_Rd (1 -> -> 9 `i `uc ]
"270
}
"267
[e ++ _i -> -> 1 `i `ui ]
[e :U 124 ]
[e $ < _i -> _n `ui 121  ]
[e :U 122 ]
"270
}
[; ;main.c: 270: }
[; ;main.c: 272: backData[i] = 0;
"272
[e = *U + _backData * -> _i `ux -> -> # *U _backData `ui `ux -> -> 0 `i `uc ]
"273
}
[e :U 116 ]
"274
}
[; ;main.c: 273: }
[; ;main.c: 274: }
[e $U 125  ]
"275
[e :U 114 ]
[; ;main.c: 275: else
[; ;main.c: 276: {
"276
{
[; ;main.c: 277: _status = 2;
"277
[e = __status -> -> 2 `i `uc ]
"278
}
[e :U 125 ]
"279
}
[e :U 113 ]
[; ;main.c: 278: }
[; ;main.c: 279: }
[; ;main.c: 282: return _status;
"282
[e ) __status ]
[e $UE 99  ]
[; ;main.c: 283: }
"283
[e :UE 99 ]
}
"284
[v _MFRC522_Request `(uc ~T0 @X0 1 ef2`uc`*uc ]
"285
{
[; ;main.c: 284: char MFRC522_Request( char reqMode, char *TagType )
[; ;main.c: 285: {
[e :U _MFRC522_Request ]
"284
[v _reqMode `uc ~T0 @X0 1 r1 ]
[v _TagType `*uc ~T0 @X0 1 r2 ]
"285
[f ]
"286
[v __status `uc ~T0 @X0 1 a ]
"287
[v _backBits `ui ~T0 @X0 1 a ]
[; ;main.c: 286: char _status;
[; ;main.c: 287: unsigned backBits;
[; ;main.c: 288: MFRC522_Wr( 0x0D, 0x07 );
"288
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 7 `i `uc ]
[; ;main.c: 289: TagType[0] = reqMode;
"289
[e = *U + _TagType * -> -> 0 `i `x -> -> # *U _TagType `i `x _reqMode ]
[; ;main.c: 290: _status = MFRC522_ToCard( 0x0C, TagType, 1, TagType, &backBits );
"290
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _TagType -> -> 1 `i `uc _TagType &U _backBits ]
[; ;main.c: 291: if ( (_status != 0) || (backBits != 0x10) )
"291
[e $ ! || != -> __status `i -> 0 `i != _backBits -> -> 16 `i `ui 127  ]
[; ;main.c: 292: {
"292
{
[; ;main.c: 293: _status = 2;
"293
[e = __status -> -> 2 `i `uc ]
"294
}
[e :U 127 ]
[; ;main.c: 294: }
[; ;main.c: 295: return _status;
"295
[e ) __status ]
[e $UE 126  ]
[; ;main.c: 296: }
"296
[e :UE 126 ]
}
"297
[v _MFRC522_CRC `(v ~T0 @X0 1 ef3`*uc`uc`*uc ]
"298
{
[; ;main.c: 297: void MFRC522_CRC( char *dataIn, char length, char *dataOut )
[; ;main.c: 298: {
[e :U _MFRC522_CRC ]
"297
[v _dataIn `*uc ~T0 @X0 1 r1 ]
[v _length `uc ~T0 @X0 1 r2 ]
[v _dataOut `*uc ~T0 @X0 1 r3 ]
"298
[f ]
"299
[v _i `uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
[; ;main.c: 299: char i, n;
[; ;main.c: 300: MFRC522_Clear_Bit( 0x05, 0x04 );
"300
[e ( _MFRC522_Clear_Bit (2 , -> -> 5 `i `uc -> -> 4 `i `uc ]
[; ;main.c: 301: MFRC522_Set_Bit( 0x0A, 0x80 );
"301
[e ( _MFRC522_Set_Bit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 304: for ( i = 0; i < length; i++ )
"304
{
[e = _i -> -> 0 `i `uc ]
[e $U 132  ]
"305
[e :U 129 ]
[; ;main.c: 305: {
{
[; ;main.c: 306: MFRC522_Wr( 0x09, *dataIn++ );
"306
[e ( _MFRC522_Wr (2 , -> -> 9 `i `uc *U ++ _dataIn * -> -> 1 `i `x -> -> # *U _dataIn `i `x ]
"307
}
"304
[e ++ _i -> -> 1 `i `uc ]
[e :U 132 ]
[e $ < -> _i `i -> _length `i 129  ]
[e :U 130 ]
"307
}
[; ;main.c: 307: }
[; ;main.c: 309: MFRC522_Wr( 0x01, 0x03 );
"309
[e ( _MFRC522_Wr (2 , -> -> 1 `i `uc -> -> 3 `i `uc ]
[; ;main.c: 311: i = 0xFF;
"311
[e = _i -> -> 255 `i `uc ]
[; ;main.c: 313: do
"313
[e :U 135 ]
[; ;main.c: 314: {
"314
{
[; ;main.c: 315: n = MFRC522_Rd( 0x05 );
"315
[e = _n ( _MFRC522_Rd (1 -> -> 5 `i `uc ]
[; ;main.c: 316: i--;
"316
[e -- _i -> -> 1 `i `uc ]
"317
}
[; ;main.c: 317: }
[; ;main.c: 318: while( i && !(n & 0x04) );
"318
[e $ && != -> _i `i -> -> -> 0 `i `uc `i ! != & -> _n `i -> 4 `i -> 0 `i 135  ]
[e :U 134 ]
[; ;main.c: 320: dataOut[0] = MFRC522_Rd( 0x22 );
"320
[e = *U + _dataOut * -> -> 0 `i `x -> -> # *U _dataOut `i `x ( _MFRC522_Rd (1 -> -> 34 `i `uc ]
[; ;main.c: 321: dataOut[1] = MFRC522_Rd( 0x21 );
"321
[e = *U + _dataOut * -> -> 1 `i `x -> -> # *U _dataOut `i `x ( _MFRC522_Rd (1 -> -> 33 `i `uc ]
[; ;main.c: 322: }
"322
[e :UE 128 ]
}
"323
[v _MFRC522_SelectTag `(uc ~T0 @X0 1 ef1`*uc ]
"324
{
[; ;main.c: 323: char MFRC522_SelectTag( char *serNum )
[; ;main.c: 324: {
[e :U _MFRC522_SelectTag ]
"323
[v _serNum `*uc ~T0 @X0 1 r1 ]
"324
[f ]
"325
[v _i `uc ~T0 @X0 1 a ]
"326
[v __status `uc ~T0 @X0 1 a ]
"327
[v _size `uc ~T0 @X0 1 a ]
"328
[v _recvBits `ui ~T0 @X0 1 a ]
[v _buffer `uc ~T0 @X0 -> 9 `i a ]
[; ;main.c: 325: char i;
[; ;main.c: 326: char _status;
[; ;main.c: 327: char size;
[; ;main.c: 328: unsigned recvBits;
[; ;main.c: 329: char buffer[9];
[; ;main.c: 333: buffer[0] = 0x93;
"333
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 147 `i `uc ]
[; ;main.c: 334: buffer[1] = 0x70;
"334
[e = *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 112 `i `uc ]
[; ;main.c: 336: for ( i=2; i < 7; i++ )
"336
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 7 `i 137  ]
[e $U 138  ]
"337
[e :U 137 ]
[; ;main.c: 337: {
{
[; ;main.c: 338: buffer[i] = *serNum++;
"338
[e = *U + &U _buffer * -> _i `ux -> -> # *U &U _buffer `ui `ux *U ++ _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x ]
"339
}
"336
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 137  ]
[e :U 138 ]
"339
}
[; ;main.c: 339: }
[; ;main.c: 341: MFRC522_CRC( buffer, 7, &buffer[7] );
"341
[e ( _MFRC522_CRC (3 , , &U _buffer -> -> 7 `i `uc &U *U + &U _buffer * -> -> -> 7 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[; ;main.c: 343: _status = MFRC522_ToCard( 0x0C, buffer, 9, buffer, &recvBits );
"343
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buffer -> -> 9 `i `uc &U _buffer &U _recvBits ]
[; ;main.c: 344: if ( (_status == 0) && (recvBits == 0x18) )
"344
[e $ ! && == -> __status `i -> 0 `i == _recvBits -> -> 24 `i `ui 140  ]
[; ;main.c: 345: {
"345
{
[; ;main.c: 346: size = buffer[0];
"346
[e = _size *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"347
}
[; ;main.c: 347: }
[e $U 141  ]
"348
[e :U 140 ]
[; ;main.c: 348: else
[; ;main.c: 349: {
"349
{
[; ;main.c: 350: size = 0;
"350
[e = _size -> -> 0 `i `uc ]
"351
}
[e :U 141 ]
[; ;main.c: 351: }
[; ;main.c: 352: return size;
"352
[e ) _size ]
[e $UE 136  ]
[; ;main.c: 353: }
"353
[e :UE 136 ]
}
"355
[v _MFRC522_Halt `(v ~T0 @X0 1 ef ]
"356
{
[; ;main.c: 355: void MFRC522_Halt()
[; ;main.c: 356: {
[e :U _MFRC522_Halt ]
[f ]
"357
[v _unLen `ui ~T0 @X0 1 a ]
"358
[v _buff `uc ~T0 @X0 -> 4 `i a ]
[; ;main.c: 357: unsigned unLen;
[; ;main.c: 358: char buff[4];
[; ;main.c: 360: buff[0] = 0x50;
"360
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 80 `i `uc ]
[; ;main.c: 361: buff[1] = 0;
"361
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
[; ;main.c: 362: MFRC522_CRC( buff, 2, &buff[2] );
"362
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
[; ;main.c: 363: MFRC522_Clear_Bit( 0x08, 0x80 );
"363
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 128 `i `uc ]
[; ;main.c: 364: MFRC522_ToCard( 0x0C, buff, 4, buff, &unLen );
"364
[e ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _unLen ]
[; ;main.c: 365: MFRC522_Clear_Bit( 0x08, 0x08 );
"365
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
[; ;main.c: 366: }
"366
[e :UE 142 ]
}
"367
[v _MFRC522_Auth `(uc ~T0 @X0 1 ef4`uc`uc`*uc`*uc ]
"368
{
[; ;main.c: 367: char MFRC522_Auth( char authMode, char BlockAddr, char *Sectorkey, char *serNum )
[; ;main.c: 368: {
[e :U _MFRC522_Auth ]
"367
[v _authMode `uc ~T0 @X0 1 r1 ]
[v _BlockAddr `uc ~T0 @X0 1 r2 ]
[v _Sectorkey `*uc ~T0 @X0 1 r3 ]
[v _serNum `*uc ~T0 @X0 1 r4 ]
"368
[f ]
"369
[v __status `uc ~T0 @X0 1 a ]
"370
[v _recvBits `ui ~T0 @X0 1 a ]
"371
[v _i `uc ~T0 @X0 1 a ]
"372
[v _buff `uc ~T0 @X0 -> 12 `i a ]
[; ;main.c: 369: char _status;
[; ;main.c: 370: unsigned recvBits;
[; ;main.c: 371: char i;
[; ;main.c: 372: char buff[12];
[; ;main.c: 375: buff[0] = authMode;
"375
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux _authMode ]
[; ;main.c: 376: buff[1] = BlockAddr;
"376
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _BlockAddr ]
[; ;main.c: 378: for ( i = 2; i < 8; i++ )
"378
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 8 `i 144  ]
[e $U 145  ]
"379
[e :U 144 ]
[; ;main.c: 379: {
{
[; ;main.c: 380: buff[i] = Sectorkey[i-2];
"380
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _Sectorkey * -> - -> _i `i -> 2 `i `x -> -> # *U _Sectorkey `i `x ]
"381
}
"378
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 144  ]
[e :U 145 ]
"381
}
[; ;main.c: 381: }
[; ;main.c: 383: for ( i = 8; i < 12; i++ )
"383
{
[e = _i -> -> 8 `i `uc ]
[e $ < -> _i `i -> 12 `i 147  ]
[e $U 148  ]
"384
[e :U 147 ]
[; ;main.c: 384: {
{
[; ;main.c: 385: buff[i] = serNum[i-8];
"385
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _serNum * -> - -> _i `i -> 8 `i `x -> -> # *U _serNum `i `x ]
"386
}
"383
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 12 `i 147  ]
[e :U 148 ]
"386
}
[; ;main.c: 386: }
[; ;main.c: 388: _status = MFRC522_ToCard( 0x0E, buff, 12, buff, &recvBits );
"388
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 14 `i `uc &U _buff -> -> 12 `i `uc &U _buff &U _recvBits ]
[; ;main.c: 390: if ( ( _status != 0 ) || !( MFRC522_Rd( 0x08 ) & 0x08 ) )
"390
[e $ ! || != -> __status `i -> 0 `i ! != & -> ( _MFRC522_Rd (1 -> -> 8 `i `uc `i -> 8 `i -> 0 `i 150  ]
[; ;main.c: 391: {
"391
{
[; ;main.c: 392: _status = 2;
"392
[e = __status -> -> 2 `i `uc ]
"393
}
[e :U 150 ]
[; ;main.c: 393: }
[; ;main.c: 395: return _status;
"395
[e ) __status ]
[e $UE 143  ]
[; ;main.c: 396: }
"396
[e :UE 143 ]
}
"397
[v _MFRC522_Write `(uc ~T0 @X0 1 ef2`uc`*uc ]
"398
{
[; ;main.c: 397: char MFRC522_Write( char blockAddr, char *writeData )
[; ;main.c: 398: {
[e :U _MFRC522_Write ]
"397
[v _blockAddr `uc ~T0 @X0 1 r1 ]
[v _writeData `*uc ~T0 @X0 1 r2 ]
"398
[f ]
"399
[v __status `uc ~T0 @X0 1 a ]
"400
[v _recvBits `ui ~T0 @X0 1 a ]
"401
[v _i `uc ~T0 @X0 1 a ]
"402
[v _buff `uc ~T0 @X0 -> 18 `i a ]
[; ;main.c: 399: char _status;
[; ;main.c: 400: unsigned recvBits;
[; ;main.c: 401: char i;
[; ;main.c: 402: char buff[18];
[; ;main.c: 403: buff[0] = 0xA0;
"403
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 160 `i `uc ]
[; ;main.c: 404: buff[1] = blockAddr;
"404
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _blockAddr ]
[; ;main.c: 406: MFRC522_CRC( buff, 2, &buff[2] );
"406
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
[; ;main.c: 407: _status = MFRC522_ToCard( 0x0C, buff, 4, buff, &recvBits );
"407
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _recvBits ]
[; ;main.c: 408: if ( (_status != 0) || (recvBits != 4) || ( (buff[0] & 0x0F) != 0x0A) )
"408
[e $ ! || || != -> __status `i -> 0 `i != _recvBits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 152  ]
[; ;main.c: 409: {
"409
{
[; ;main.c: 410: _status = 2;
"410
[e = __status -> -> 2 `i `uc ]
"411
}
[e :U 152 ]
[; ;main.c: 411: }
[; ;main.c: 412: if (_status == 0)
"412
[e $ ! == -> __status `i -> 0 `i 153  ]
[; ;main.c: 413: {
"413
{
[; ;main.c: 414: for ( i = 0; i < 16; i++ )
"414
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 154  ]
[e $U 155  ]
"415
[e :U 154 ]
[; ;main.c: 415: {
{
[; ;main.c: 416: buff[i] = writeData[i];
"416
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _writeData * -> _i `ux -> -> # *U _writeData `ui `ux ]
"417
}
"414
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 154  ]
[e :U 155 ]
"417
}
[; ;main.c: 417: }
[; ;main.c: 419: MFRC522_CRC( buff, 16, &buff[16] );
"419
[e ( _MFRC522_CRC (3 , , &U _buff -> -> 16 `i `uc &U *U + &U _buff * -> -> -> 16 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
[; ;main.c: 420: _status = MFRC522_ToCard( 0x0C, buff, 18, buff, &recvBits );
"420
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 18 `i `uc &U _buff &U _recvBits ]
[; ;main.c: 421: if ( (_status != 0) || (recvBits != 4) || ( (buff[0] & 0x0F) != 0x0A ) )
"421
[e $ ! || || != -> __status `i -> 0 `i != _recvBits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 157  ]
[; ;main.c: 422: {
"422
{
[; ;main.c: 423: _status = 2;
"423
[e = __status -> -> 2 `i `uc ]
"424
}
[e :U 157 ]
"425
}
[e :U 153 ]
[; ;main.c: 424: }
[; ;main.c: 425: }
[; ;main.c: 426: return _status;
"426
[e ) __status ]
[e $UE 151  ]
[; ;main.c: 427: }
"427
[e :UE 151 ]
}
"428
[v _MFRC522_Read `(uc ~T0 @X0 1 ef2`uc`*uc ]
"429
{
[; ;main.c: 428: char MFRC522_Read( char blockAddr, char *recvData )
[; ;main.c: 429: {
[e :U _MFRC522_Read ]
"428
[v _blockAddr `uc ~T0 @X0 1 r1 ]
[v _recvData `*uc ~T0 @X0 1 r2 ]
"429
[f ]
"430
[v __status `uc ~T0 @X0 1 a ]
"431
[v _unLen `ui ~T0 @X0 1 a ]
[; ;main.c: 430: char _status;
[; ;main.c: 431: unsigned unLen;
[; ;main.c: 432: recvData[0] = 0x30;
"432
[e = *U + _recvData * -> -> 0 `i `x -> -> # *U _recvData `i `x -> -> 48 `i `uc ]
[; ;main.c: 433: recvData[1] = blockAddr;
"433
[e = *U + _recvData * -> -> 1 `i `x -> -> # *U _recvData `i `x _blockAddr ]
[; ;main.c: 435: MFRC522_CRC( recvData, 2, &recvData[2] );
"435
[e ( _MFRC522_CRC (3 , , _recvData -> -> 2 `i `uc &U *U + _recvData * -> -> 2 `i `x -> -> # *U _recvData `i `x ]
[; ;main.c: 437: _status = MFRC522_ToCard( 0x0C, recvData, 4, recvData, &unLen );
"437
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _recvData -> -> 4 `i `uc _recvData &U _unLen ]
[; ;main.c: 438: if ( (_status != 0) || (unLen != 0x90) )
"438
[e $ ! || != -> __status `i -> 0 `i != _unLen -> -> 144 `i `ui 159  ]
[; ;main.c: 439: {
"439
{
[; ;main.c: 440: _status = 2;
"440
[e = __status -> -> 2 `i `uc ]
"441
}
[e :U 159 ]
[; ;main.c: 441: }
[; ;main.c: 442: return _status;
"442
[e ) __status ]
[e $UE 158  ]
[; ;main.c: 443: }
"443
[e :UE 158 ]
}
"444
[v _MFRC522_AntiColl `(uc ~T0 @X0 1 ef1`*uc ]
"445
{
[; ;main.c: 444: char MFRC522_AntiColl( char *serNum )
[; ;main.c: 445: {
[e :U _MFRC522_AntiColl ]
"444
[v _serNum `*uc ~T0 @X0 1 r1 ]
"445
[f ]
"446
[v __status `uc ~T0 @X0 1 a ]
"447
[v _i `uc ~T0 @X0 1 a ]
"448
[v _serNumCheck `uc ~T0 @X0 1 a ]
[; ;main.c: 446: char _status;
[; ;main.c: 447: char i;
[; ;main.c: 448: char serNumCheck = 0;
[e = _serNumCheck -> -> 0 `i `uc ]
"449
[v _unLen `ui ~T0 @X0 1 a ]
[; ;main.c: 449: unsigned unLen;
[; ;main.c: 450: MFRC522_Wr( 0x0D, 0x00 );
"450
[e ( _MFRC522_Wr (2 , -> -> 13 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 451: serNum[0] = 0x93;
"451
[e = *U + _serNum * -> -> 0 `i `x -> -> # *U _serNum `i `x -> -> 147 `i `uc ]
[; ;main.c: 452: serNum[1] = 0x20;
"452
[e = *U + _serNum * -> -> 1 `i `x -> -> # *U _serNum `i `x -> -> 32 `i `uc ]
[; ;main.c: 453: MFRC522_Clear_Bit( 0x08, 0x08 );
"453
[e ( _MFRC522_Clear_Bit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
[; ;main.c: 454: _status = MFRC522_ToCard( 0x0C, serNum, 2, serNum, &unLen );
"454
[e = __status ( _MFRC522_ToCard (4 , , , , -> -> 12 `i `uc _serNum -> -> 2 `i `uc _serNum &U _unLen ]
[; ;main.c: 455: if (_status == 0)
"455
[e $ ! == -> __status `i -> 0 `i 161  ]
[; ;main.c: 456: {
"456
{
[; ;main.c: 457: for ( i=0; i < 4; i++ )
"457
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 162  ]
[e $U 163  ]
"458
[e :U 162 ]
[; ;main.c: 458: {
{
[; ;main.c: 459: serNumCheck ^= serNum[i];
"459
[e =^ _serNumCheck *U + _serNum * -> _i `ux -> -> # *U _serNum `ui `ux ]
"460
}
"457
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 162  ]
[e :U 163 ]
"460
}
[; ;main.c: 460: }
[; ;main.c: 462: if ( serNumCheck != serNum[4] )
"462
[e $ ! != -> _serNumCheck `i -> *U + _serNum * -> -> 4 `i `x -> -> # *U _serNum `i `x `i 165  ]
[; ;main.c: 463: {
"463
{
[; ;main.c: 464: _status = 2;
"464
[e = __status -> -> 2 `i `uc ]
"465
}
[e :U 165 ]
"466
}
[e :U 161 ]
[; ;main.c: 465: }
[; ;main.c: 466: }
[; ;main.c: 467: return _status;
"467
[e ) __status ]
[e $UE 160  ]
[; ;main.c: 468: }
"468
[e :UE 160 ]
}
"474
[v _MFRC522_isCard `(uc ~T0 @X0 1 ef1`*uc ]
"475
{
[; ;main.c: 474: char MFRC522_isCard( char *TagType )
[; ;main.c: 475: {
[e :U _MFRC522_isCard ]
"474
[v _TagType `*uc ~T0 @X0 1 r1 ]
"475
[f ]
[; ;main.c: 476: if (MFRC522_Request( 0x26, TagType ) == 0)
"476
[e $ ! == -> ( _MFRC522_Request (2 , -> -> 38 `i `uc _TagType `i -> 0 `i 167  ]
[; ;main.c: 477: return 1;
"477
[e ) -> -> 1 `i `uc ]
[e $UE 166  ]
[e $U 168  ]
"478
[e :U 167 ]
[; ;main.c: 478: else
[; ;main.c: 479: return 0;
"479
[e ) -> -> 0 `i `uc ]
[e $UE 166  ]
[e :U 168 ]
[; ;main.c: 480: }
"480
[e :UE 166 ]
}
"481
[v _MFRC522_ReadCardSerial `(uc ~T0 @X0 1 ef1`*uc ]
"482
{
[; ;main.c: 481: char MFRC522_ReadCardSerial( char *str )
[; ;main.c: 482: {
[e :U _MFRC522_ReadCardSerial ]
"481
[v _str `*uc ~T0 @X0 1 r1 ]
"482
[f ]
"483
[v __status `uc ~T0 @X0 1 a ]
[; ;main.c: 483: char _status;
[; ;main.c: 484: _status = MFRC522_AntiColl( str );
"484
[e = __status ( _MFRC522_AntiColl (1 _str ]
[; ;main.c: 485: str[5] = 0;
"485
[e = *U + _str * -> -> 5 `i `x -> -> # *U _str `i `x -> -> 0 `i `uc ]
[; ;main.c: 486: if (_status == 0)
"486
[e $ ! == -> __status `i -> 0 `i 170  ]
[; ;main.c: 487: return 1;
"487
[e ) -> -> 1 `i `uc ]
[e $UE 169  ]
[e $U 171  ]
"488
[e :U 170 ]
[; ;main.c: 488: else
[; ;main.c: 489: return 0;
"489
[e ) -> -> 0 `i `uc ]
[e $UE 169  ]
[e :U 171 ]
[; ;main.c: 490: }
"490
[e :UE 169 ]
}
"495
[v _main `(v ~T0 @X0 1 ef ]
"496
{
[; ;main.c: 495: void main()
[; ;main.c: 496: {
[e :U _main ]
[f ]
"498
[v _msg `uc ~T0 @X0 -> 12 `i a ]
"499
[v _UID `uc ~T0 @X0 -> 6 `i a ]
"500
[v _TagType `ui ~T0 @X0 1 a ]
"501
[v _size `uc ~T0 @X0 1 a ]
"502
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 498: char msg[12];
[; ;main.c: 499: char UID[6];
[; ;main.c: 500: unsigned TagType;
[; ;main.c: 501: char size;
[; ;main.c: 502: char i;
[; ;main.c: 504: SPI_init(0);
"504
[e ( _SPI_init (1 -> -> 0 `i `uc ]
[; ;main.c: 507: MFRC522_Init();
"507
[e ( _MFRC522_Init ..  ]
[; ;main.c: 509: UART_init();
"509
[e ( _UART_init ..  ]
[; ;main.c: 511: TRISBbits.TRISB4 = 0;
"511
[e = . . _TRISBbits 0 4 -> -> 0 `i `uc ]
[; ;main.c: 512: TRISBbits.TRISB0 = 0;
"512
[e = . . _TRISBbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 513: while(1)
"513
[e :U 174 ]
[; ;main.c: 514: {
"514
{
[; ;main.c: 515: PORTBbits.RB0 = ~PORTBbits.RB0;
"515
[e = . . _PORTBbits 0 0 -> ~ -> . . _PORTBbits 0 0 `i `uc ]
[; ;main.c: 516: printf("Em espera...\n");
"516
[e ( _printf :s 1C ]
[; ;main.c: 517: if( MFRC522_isCard( &TagType ) )
"517
[e $ ! != -> ( _MFRC522_isCard (1 -> &U _TagType `*uc `i -> -> -> 0 `i `uc `i 176  ]
[; ;main.c: 518: {
"518
{
[; ;main.c: 519: PORTBbits.RB4 = ~PORTBbits.RB4;
"519
[e = . . _PORTBbits 0 4 -> ~ -> . . _PORTBbits 0 4 `i `uc ]
[; ;main.c: 521: printf("Tipo de Tag: %u",TagType);
"521
[e ( _printf , (. :s 2C _TagType ]
[; ;main.c: 523: if( MFRC522_ReadCardSerial( UID ) )
"523
[e $ ! != -> ( _MFRC522_ReadCardSerial (1 &U _UID `i -> -> -> 0 `i `uc `i 177  ]
[; ;main.c: 524: {
"524
{
[; ;main.c: 525: printf("Codigo: ");
"525
[e ( _printf :s 3C ]
[; ;main.c: 526: for(int i=0; i < 5; i++)
"526
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 5 `i 178  ]
[e $U 179  ]
"527
[e :U 178 ]
[; ;main.c: 527: {
{
[; ;main.c: 528: printf("%d",(int)UID[i]);
"528
[e ( _printf , (. :s 4C -> *U + &U _UID * -> -> _i `ui `ux -> -> # *U &U _UID `ui `ux `i ]
[; ;main.c: 529: printf(" ");
"529
[e ( _printf :s 5C ]
"530
}
"526
[e ++ _i -> 1 `i ]
[e $ < _i -> 5 `i 178  ]
[e :U 179 ]
"530
}
[; ;main.c: 530: }
[; ;main.c: 531: printf("\n");
"531
[e ( _printf :s 6C ]
[; ;main.c: 532: size = MFRC522_SelectTag( UID );
"532
[e = _size ( _MFRC522_SelectTag (1 &U _UID ]
"533
}
[e :U 177 ]
"536
}
[e :U 176 ]
[; ;main.c: 533: }
[; ;main.c: 536: }
[; ;main.c: 537: _delay((unsigned long)((100)*(16000000/4000.0)));
"537
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"538
}
[e :U 173 ]
"513
[e $U 174  ]
[e :U 175 ]
[; ;main.c: 538: }
[; ;main.c: 539: }
"539
[e :UE 172 ]
}
[p f _printf 8389760 ]
[a 2C 84 105 112 111 32 100 101 32 84 97 103 58 32 37 117 0 ]
[a 4C 37 100 0 ]
[a 3C 67 111 100 105 103 111 58 32 0 ]
[a 5C 32 0 ]
[a 1C 69 109 32 101 115 112 101 114 97 46 46 46 10 0 ]
[a 6C 10 0 ]
