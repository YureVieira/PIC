

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Apr 11 09:33:48 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0015                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001F                     	;# 
    50  0081                     	;# 
    51  0085                     	;# 
    52  0086                     	;# 
    53  008C                     	;# 
    54  008E                     	;# 
    55  0092                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009F                     	;# 
    63                           
    64                           	psect	nvBANK0
    65  0058                     __pnvBANK0:	
    66  0058                     __mode:	
    67  0058                     	ds	1
    68  0005                     _PORTAbits	set	5
    69  0006                     _PORTB	set	6
    70  0006                     _PORTBbits	set	6
    71  0085                     _TRISAbits	set	133
    72  0086                     _TRISB	set	134
    73  0086                     _TRISBbits	set	134
    74                           
    75                           ; #config settings
    76  0000                     
    77                           	psect	cinit
    78  07FE                     start_initialization:	
    79  07FE                     __initialization:	
    80  07FE                     end_of_initialization:	
    81                           ;End of C runtime variable initialization code
    82                           
    83  07FE                     __end_of__initialization:	
    84  07FE  0183               	clrf	3
    85  07FF  2DDD               	ljmp	_main	;jump to C main() function
    86                           
    87                           	psect	cstackCOMMON
    88  0070                     __pcstackCOMMON:	
    89  0070                     ?_SPI_init:	
    90  0070                     ??_SPI_init:	
    91                           ; 0 bytes @ 0x0
    92                           
    93  0070                     ??_SPI_transfer:	
    94                           ; 0 bytes @ 0x0
    95                           
    96  0070                     ?_MFRC522_Reset:	
    97                           ; 0 bytes @ 0x0
    98                           
    99  0070                     ?_MFRC522_AntennaOn:	
   100                           ; 0 bytes @ 0x0
   101                           
   102  0070                     ?_MFRC522_Init:	
   103                           ; 0 bytes @ 0x0
   104                           
   105  0070                     ?_main:	
   106                           ; 0 bytes @ 0x0
   107                           
   108  0070                     ?_SPI_transfer:	
   109                           ; 0 bytes @ 0x0
   110                           
   111  0070                     ?_MFRC522_Rd:	
   112                           ; 1 bytes @ 0x0
   113                           
   114  0070                     ?_MFRC522_SelectTag:	
   115                           ; 1 bytes @ 0x0
   116                           
   117  0070                     ?_MFRC522_AntiColl:	
   118                           ; 1 bytes @ 0x0
   119                           
   120  0070                     ?_MFRC522_isCard:	
   121                           ; 1 bytes @ 0x0
   122                           
   123  0070                     ?_MFRC522_ReadCardSerial:	
   124                           ; 1 bytes @ 0x0
   125                           
   126                           
   127                           ; 1 bytes @ 0x0
   128  0070                     	ds	1
   129  0071                     SPI_init@mode:	
   130  0071                     SPI_transfer@ret_118:	
   131                           ; 1 bytes @ 0x1
   132                           
   133                           
   134                           ; 1 bytes @ 0x1
   135  0071                     	ds	1
   136  0072                     SPI_transfer@ret:	
   137                           
   138                           ; 1 bytes @ 0x2
   139  0072                     	ds	1
   140  0073                     SPI_transfer@i:	
   141                           
   142                           ; 2 bytes @ 0x3
   143  0073                     	ds	2
   144  0075                     SPI_transfer@i_119:	
   145                           
   146                           ; 2 bytes @ 0x5
   147  0075                     	ds	2
   148  0077                     SPI_transfer@data:	
   149                           
   150                           ; 1 bytes @ 0x7
   151  0077                     	ds	1
   152  0078                     ??_MFRC522_Rd:	
   153                           
   154                           ; 0 bytes @ 0x8
   155  0078                     	ds	1
   156  0079                     MFRC522_Rd@addr:	
   157                           
   158                           ; 1 bytes @ 0x9
   159  0079                     	ds	1
   160  007A                     MFRC522_Rd@value:	
   161                           
   162                           ; 1 bytes @ 0xA
   163  007A                     	ds	1
   164  007B                     ?_MFRC522_Wr:	
   165  007B                     MFRC522_Wr@value:	
   166                           ; 0 bytes @ 0xB
   167                           
   168                           
   169                           ; 1 bytes @ 0xB
   170  007B                     	ds	1
   171  007C                     ??_MFRC522_Wr:	
   172                           
   173                           ; 0 bytes @ 0xC
   174  007C                     	ds	1
   175  007D                     MFRC522_Wr@addr:	
   176                           
   177                           ; 1 bytes @ 0xD
   178  007D                     	ds	1
   179                           
   180                           	psect	cstackBANK0
   181  0020                     __pcstackBANK0:	
   182  0020                     ?_MFRC522_Clear_Bit:	
   183  0020                     ?_MFRC522_Set_Bit:	
   184                           ; 0 bytes @ 0x0
   185                           
   186  0020                     ??_MFRC522_Reset:	
   187                           ; 0 bytes @ 0x0
   188                           
   189  0020                     MFRC522_Clear_Bit@mask:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0020                     MFRC522_Set_Bit@mask:	
   193                           ; 1 bytes @ 0x0
   194                           
   195                           
   196                           ; 1 bytes @ 0x0
   197  0020                     	ds	1
   198  0021                     ??_MFRC522_Clear_Bit:	
   199  0021                     ??_MFRC522_Set_Bit:	
   200                           ; 0 bytes @ 0x1
   201                           
   202                           
   203                           ; 0 bytes @ 0x1
   204  0021                     	ds	1
   205  0022                     MFRC522_Set_Bit@addr:	
   206                           
   207                           ; 1 bytes @ 0x2
   208  0022                     	ds	1
   209  0023                     ??_MFRC522_AntennaOn:	
   210  0023                     MFRC522_Clear_Bit@addr:	
   211                           ; 0 bytes @ 0x3
   212                           
   213                           
   214                           ; 1 bytes @ 0x3
   215  0023                     	ds	1
   216  0024                     ??_MFRC522_Init:	
   217  0024                     ?_MFRC522_CRC:	
   218                           ; 0 bytes @ 0x4
   219                           
   220  0024                     ?_MFRC522_ToCard:	
   221                           ; 0 bytes @ 0x4
   222                           
   223  0024                     MFRC522_ToCard@sendData:	
   224                           ; 1 bytes @ 0x4
   225                           
   226  0024                     MFRC522_CRC@length:	
   227                           ; 1 bytes @ 0x4
   228                           
   229                           
   230                           ; 1 bytes @ 0x4
   231  0024                     	ds	1
   232  0025                     MFRC522_ToCard@sendLen:	
   233  0025                     MFRC522_CRC@dataOut:	
   234                           ; 1 bytes @ 0x5
   235                           
   236                           
   237                           ; 1 bytes @ 0x5
   238  0025                     	ds	1
   239  0026                     ??_MFRC522_CRC:	
   240  0026                     MFRC522_ToCard@backData:	
   241                           ; 0 bytes @ 0x6
   242                           
   243                           
   244                           ; 1 bytes @ 0x6
   245  0026                     	ds	1
   246  0027                     MFRC522_ToCard@backLen:	
   247  0027                     MFRC522_CRC@n:	
   248                           ; 1 bytes @ 0x7
   249                           
   250                           
   251                           ; 1 bytes @ 0x7
   252  0027                     	ds	1
   253  0028                     ??_MFRC522_ToCard:	
   254  0028                     MFRC522_CRC@i:	
   255                           ; 0 bytes @ 0x8
   256                           
   257                           
   258                           ; 1 bytes @ 0x8
   259  0028                     	ds	1
   260  0029                     MFRC522_CRC@dataIn:	
   261                           
   262                           ; 1 bytes @ 0x9
   263  0029                     	ds	5
   264  002E                     MFRC522_ToCard@waitIRq:	
   265                           
   266                           ; 1 bytes @ 0xE
   267  002E                     	ds	1
   268  002F                     MFRC522_ToCard@_status:	
   269                           
   270                           ; 1 bytes @ 0xF
   271  002F                     	ds	1
   272  0030                     MFRC522_ToCard@lastBits:	
   273                           
   274                           ; 1 bytes @ 0x10
   275  0030                     	ds	1
   276  0031                     MFRC522_ToCard@irqEn:	
   277                           
   278                           ; 1 bytes @ 0x11
   279  0031                     	ds	1
   280  0032                     MFRC522_ToCard@command:	
   281                           
   282                           ; 1 bytes @ 0x12
   283  0032                     	ds	1
   284  0033                     MFRC522_ToCard@i:	
   285                           
   286                           ; 2 bytes @ 0x13
   287  0033                     	ds	2
   288  0035                     MFRC522_ToCard@n:	
   289                           
   290                           ; 1 bytes @ 0x15
   291  0035                     	ds	1
   292  0036                     ??_MFRC522_SelectTag:	
   293  0036                     ??_MFRC522_AntiColl:	
   294                           ; 0 bytes @ 0x16
   295                           
   296  0036                     ?_MFRC522_Request:	
   297                           ; 0 bytes @ 0x16
   298                           
   299  0036                     MFRC522_Request@TagType:	
   300                           ; 1 bytes @ 0x16
   301                           
   302                           
   303                           ; 1 bytes @ 0x16
   304  0036                     	ds	1
   305  0037                     ??_MFRC522_Request:	
   306                           
   307                           ; 0 bytes @ 0x17
   308  0037                     	ds	4
   309  003B                     MFRC522_Request@reqMode:	
   310  003B                     MFRC522_AntiColl@serNumCheck:	
   311                           ; 1 bytes @ 0x1B
   312                           
   313  003B                     MFRC522_SelectTag@buffer:	
   314                           ; 1 bytes @ 0x1B
   315                           
   316                           
   317                           ; 9 bytes @ 0x1B
   318  003B                     	ds	1
   319  003C                     MFRC522_Request@_status:	
   320  003C                     MFRC522_AntiColl@unLen:	
   321                           ; 1 bytes @ 0x1C
   322                           
   323                           
   324                           ; 2 bytes @ 0x1C
   325  003C                     	ds	1
   326  003D                     MFRC522_Request@backBits:	
   327                           
   328                           ; 2 bytes @ 0x1D
   329  003D                     	ds	1
   330  003E                     MFRC522_AntiColl@_status:	
   331                           
   332                           ; 1 bytes @ 0x1E
   333  003E                     	ds	1
   334  003F                     ??_MFRC522_isCard:	
   335  003F                     MFRC522_AntiColl@i:	
   336                           ; 0 bytes @ 0x1F
   337                           
   338                           
   339                           ; 1 bytes @ 0x1F
   340  003F                     	ds	1
   341  0040                     MFRC522_AntiColl@serNum:	
   342  0040                     MFRC522_isCard@TagType:	
   343                           ; 1 bytes @ 0x20
   344                           
   345                           
   346                           ; 1 bytes @ 0x20
   347  0040                     	ds	1
   348  0041                     ??_MFRC522_ReadCardSerial:	
   349                           
   350                           ; 0 bytes @ 0x21
   351  0041                     	ds	1
   352  0042                     MFRC522_ReadCardSerial@_status:	
   353                           
   354                           ; 1 bytes @ 0x22
   355  0042                     	ds	1
   356  0043                     MFRC522_ReadCardSerial@str:	
   357                           
   358                           ; 1 bytes @ 0x23
   359  0043                     	ds	1
   360  0044                     MFRC522_SelectTag@_status:	
   361                           
   362                           ; 1 bytes @ 0x24
   363  0044                     	ds	1
   364  0045                     MFRC522_SelectTag@size:	
   365                           
   366                           ; 1 bytes @ 0x25
   367  0045                     	ds	1
   368  0046                     MFRC522_SelectTag@serNum:	
   369                           
   370                           ; 1 bytes @ 0x26
   371  0046                     	ds	1
   372  0047                     MFRC522_SelectTag@recvBits:	
   373                           
   374                           ; 2 bytes @ 0x27
   375  0047                     	ds	2
   376  0049                     MFRC522_SelectTag@i:	
   377                           
   378                           ; 1 bytes @ 0x29
   379  0049                     	ds	1
   380  004A                     ??_main:	
   381                           
   382                           ; 0 bytes @ 0x2A
   383  004A                     	ds	3
   384  004D                     main@size:	
   385                           
   386                           ; 1 bytes @ 0x2D
   387  004D                     	ds	1
   388  004E                     main@UID:	
   389                           
   390                           ; 6 bytes @ 0x2E
   391  004E                     	ds	6
   392  0054                     main@i_243:	
   393                           
   394                           ; 2 bytes @ 0x34
   395  0054                     	ds	2
   396  0056                     main@TagType:	
   397                           
   398                           ; 2 bytes @ 0x36
   399  0056                     	ds	2
   400                           
   401                           	psect	maintext
   402  05DD                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 574 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  i               2   52[BANK0 ] int 
   413 ;;  UID             6   46[BANK0 ] unsigned char [6]
   414 ;;  TagType         2   54[BANK0 ] unsigned int 
   415 ;;  size            1   45[BANK0 ] unsigned char 
   416 ;;  i               1    0        unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;		None               void
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 17F/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   426 ;;      Params:         0       0       0       0
   427 ;;      Locals:         0      11       0       0
   428 ;;      Temps:          0       3       0       0
   429 ;;      Totals:         0      14       0       0
   430 ;;Total ram usage:       14 bytes
   431 ;; Hardware stack levels required when called:    6
   432 ;; This function calls:
   433 ;;		_MFRC522_Init
   434 ;;		_MFRC522_ReadCardSerial
   435 ;;		_MFRC522_SelectTag
   436 ;;		_MFRC522_isCard
   437 ;;		_SPI_init
   438 ;; This function is called by:
   439 ;;		Startup code after reset
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _main
   445  05DD                     _main:	
   446                           
   447                           ;main.c: 576: char UID[6];
   448                           ;main.c: 577: unsigned TagType;
   449                           ;main.c: 578: char size;
   450                           ;main.c: 579: char i;
   451                           ;main.c: 581: SPI_init(0);
   452                           
   453                           ;incstack = 0
   454                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   455  05DD  3000               	movlw	0
   456  05DE  243E               	fcall	_SPI_init
   457                           
   458                           ;main.c: 584: MFRC522_Init();
   459  05DF  2493               	fcall	_MFRC522_Init
   460                           
   461                           ;main.c: 587: TRISBbits.TRISB3 = 0;
   462  05E0  1683               	bsf	3,5	;RP0=1, select bank1
   463  05E1  1303               	bcf	3,6	;RP1=0, select bank1
   464  05E2  1186               	bcf	6,3	;volatile
   465                           
   466                           ;main.c: 588: for(int i=0;i<10;i++)
   467  05E3  1283               	bcf	3,5	;RP0=0, select bank0
   468  05E4  1303               	bcf	3,6	;RP1=0, select bank0
   469  05E5  01D4               	clrf	main@i_243
   470  05E6  01D5               	clrf	main@i_243+1
   471  05E7  0855               	movf	main@i_243+1,w
   472  05E8  3A80               	xorlw	128
   473  05E9  00FF               	movwf	127
   474  05EA  3080               	movlw	128
   475  05EB  027F               	subwf	127,w
   476  05EC  1D03               	skipz
   477  05ED  2DF0               	goto	u1195
   478  05EE  300A               	movlw	10
   479  05EF  0254               	subwf	main@i_243,w
   480  05F0                     u1195:	
   481  05F0  1803               	btfsc	3,0
   482  05F1  2E25               	goto	l1478
   483  05F2                     l166:	
   484                           
   485                           ;main.c: 589: {
   486                           ;main.c: 590: PORTBbits.RB3 = 1;
   487  05F2  1283               	bcf	3,5	;RP0=0, select bank0
   488  05F3  1303               	bcf	3,6	;RP1=0, select bank0
   489  05F4  1586               	bsf	6,3	;volatile
   490                           
   491                           ;main.c: 591: _delay((unsigned long)((500)*(4000000/4000.0)));
   492  05F5  3003               	movlw	3
   493  05F6  00CC               	movwf	??_main+2
   494  05F7  308A               	movlw	138
   495  05F8  00CB               	movwf	??_main+1
   496  05F9  3056               	movlw	86
   497  05FA  00CA               	movwf	??_main
   498  05FB                     u1237:	
   499  05FB  0BCA               	decfsz	??_main,f
   500  05FC  2DFB               	goto	u1237
   501  05FD  0BCB               	decfsz	??_main+1,f
   502  05FE  2DFB               	goto	u1237
   503  05FF  0BCC               	decfsz	??_main+2,f
   504  0600  2DFB               	goto	u1237
   505  0601  2E02               	nop2
   506                           
   507                           ;main.c: 592: PORTBbits.RB3 = 0;
   508  0602  1283               	bcf	3,5	;RP0=0, select bank0
   509  0603  1303               	bcf	3,6	;RP1=0, select bank0
   510  0604  1186               	bcf	6,3	;volatile
   511                           
   512                           ;main.c: 593: _delay((unsigned long)((500)*(4000000/4000.0)));
   513  0605  3003               	movlw	3
   514  0606  00CC               	movwf	??_main+2
   515  0607  308A               	movlw	138
   516  0608  00CB               	movwf	??_main+1
   517  0609  3056               	movlw	86
   518  060A  00CA               	movwf	??_main
   519  060B                     u1247:	
   520  060B  0BCA               	decfsz	??_main,f
   521  060C  2E0B               	goto	u1247
   522  060D  0BCB               	decfsz	??_main+1,f
   523  060E  2E0B               	goto	u1247
   524  060F  0BCC               	decfsz	??_main+2,f
   525  0610  2E0B               	goto	u1247
   526  0611  2E12               	nop2
   527  0612  3001               	movlw	1
   528  0613  1283               	bcf	3,5	;RP0=0, select bank0
   529  0614  1303               	bcf	3,6	;RP1=0, select bank0
   530  0615  07D4               	addwf	main@i_243,f
   531  0616  1803               	skipnc
   532  0617  0AD5               	incf	main@i_243+1,f
   533  0618  3000               	movlw	0
   534  0619  07D5               	addwf	main@i_243+1,f
   535  061A  0855               	movf	main@i_243+1,w
   536  061B  3A80               	xorlw	128
   537  061C  00FF               	movwf	127
   538  061D  3080               	movlw	128
   539  061E  027F               	subwf	127,w
   540  061F  1D03               	skipz
   541  0620  2E23               	goto	u1205
   542  0621  300A               	movlw	10
   543  0622  0254               	subwf	main@i_243,w
   544  0623                     u1205:	
   545  0623  1C03               	skipc
   546  0624  2DF2               	goto	l166
   547  0625                     l1478:	
   548                           ;main.c: 594: }
   549                           ;main.c: 595: while(1)
   550                           
   551                           
   552                           ;main.c: 596: {
   553                           ;main.c: 597: if( MFRC522_isCard( &TagType ) )
   554  0625  3056               	movlw	main@TagType& (0+255)
   555  0626  2404               	fcall	_MFRC522_isCard
   556  0627  3A00               	xorlw	0
   557  0628  1903               	skipnz
   558  0629  2E39               	goto	l1486
   559                           
   560                           ;main.c: 598: {
   561                           ;main.c: 602: if( MFRC522_ReadCardSerial( UID ) )
   562  062A  304E               	movlw	main@UID& (0+255)
   563  062B  2428               	fcall	_MFRC522_ReadCardSerial
   564  062C  3A00               	xorlw	0
   565  062D  1903               	skipnz
   566  062E  2E39               	goto	l1486
   567                           
   568                           ;main.c: 603: {
   569                           ;main.c: 604: PORTBbits.RB3 = 0;
   570  062F  1283               	bcf	3,5	;RP0=0, select bank0
   571  0630  1303               	bcf	3,6	;RP1=0, select bank0
   572  0631  1186               	bcf	6,3	;volatile
   573                           
   574                           ;main.c: 612: size = MFRC522_SelectTag( UID );
   575  0632  304E               	movlw	main@UID& (0+255)
   576  0633  2524               	fcall	_MFRC522_SelectTag
   577  0634  1283               	bcf	3,5	;RP0=0, select bank0
   578  0635  1303               	bcf	3,6	;RP1=0, select bank0
   579  0636  00CA               	movwf	??_main
   580  0637  084A               	movf	??_main,w
   581  0638  00CD               	movwf	main@size
   582  0639                     l1486:	
   583                           
   584                           ;main.c: 613: }
   585                           ;main.c: 616: }
   586                           ;main.c: 617: PORTBbits.RB3 = 1;
   587  0639  1283               	bcf	3,5	;RP0=0, select bank0
   588  063A  1303               	bcf	3,6	;RP1=0, select bank0
   589  063B  1586               	bsf	6,3	;volatile
   590                           
   591                           ;main.c: 618: _delay((unsigned long)((100)*(4000000/4000.0)));
   592  063C  3082               	movlw	130
   593  063D  00CB               	movwf	??_main+1
   594  063E  30DD               	movlw	221
   595  063F  00CA               	movwf	??_main
   596  0640                     u1257:	
   597  0640  0BCA               	decfsz	??_main,f
   598  0641  2E40               	goto	u1257
   599  0642  0BCB               	decfsz	??_main+1,f
   600  0643  2E40               	goto	u1257
   601  0644  2E45               	nop2
   602  0645  2E25               	goto	l1478
   603  0646                     __end_of_main:	
   604                           
   605                           	psect	text1
   606  043E                     __ptext1:	
   607 ;; *************** function _SPI_init *****************
   608 ;; Defined at:
   609 ;;		line 42 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  mode            1    wreg     unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  mode            1    1[COMMON] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;		None               void
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   623 ;;      Params:         0       0       0       0
   624 ;;      Locals:         1       0       0       0
   625 ;;      Temps:          1       0       0       0
   626 ;;      Totals:         2       0       0       0
   627 ;;Total ram usage:        2 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; This function calls:
   630 ;;		Nothing
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           
   637                           ;psect for function _SPI_init
   638  043E                     _SPI_init:	
   639                           
   640                           ;incstack = 0
   641                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
   642                           ;SPI_init@mode stored from wreg
   643  043E  00F1               	movwf	SPI_init@mode
   644                           
   645                           ;main.c: 44: _mode = mode;
   646  043F  0871               	movf	SPI_init@mode,w
   647  0440  00F0               	movwf	??_SPI_init
   648  0441  0870               	movf	??_SPI_init,w
   649  0442  1283               	bcf	3,5	;RP0=0, select bank0
   650  0443  1303               	bcf	3,6	;RP1=0, select bank0
   651  0444  00D8               	movwf	__mode
   652                           
   653                           ;main.c: 45: TRISB &= ~(1<<7 | 1<<6);
   654  0445  303F               	movlw	63
   655  0446  00F0               	movwf	??_SPI_init
   656  0447  0870               	movf	??_SPI_init,w
   657  0448  1683               	bsf	3,5	;RP0=1, select bank1
   658  0449  1303               	bcf	3,6	;RP1=0, select bank1
   659  044A  0586               	andwf	6,f	;volatile
   660                           
   661                           ;main.c: 46: TRISB |= (1<<5);
   662  044B  1686               	bsf	6,5	;volatile
   663                           
   664                           ;main.c: 47: if(mode == 2 || mode == 3)
   665  044C  0871               	movf	SPI_init@mode,w
   666  044D  3A02               	xorlw	2
   667  044E  1903               	skipnz
   668  044F  2C54               	goto	l21
   669  0450  0871               	movf	SPI_init@mode,w
   670  0451  3A03               	xorlw	3
   671  0452  1D03               	skipz
   672  0453  2C58               	goto	l1306
   673  0454                     l21:	
   674                           
   675                           ;main.c: 48: PORTB |= (1<<7);
   676  0454  1283               	bcf	3,5	;RP0=0, select bank0
   677  0455  1303               	bcf	3,6	;RP1=0, select bank0
   678  0456  1786               	bsf	6,7	;volatile
   679  0457  0008               	return
   680  0458                     l1306:	
   681                           
   682                           ;main.c: 49: else
   683                           ;main.c: 50: PORTB &= ~(1<<7);
   684  0458  307F               	movlw	127
   685  0459  00F0               	movwf	??_SPI_init
   686  045A  0870               	movf	??_SPI_init,w
   687  045B  1283               	bcf	3,5	;RP0=0, select bank0
   688  045C  0586               	andwf	6,f	;volatile
   689  045D  0008               	return
   690  045E                     __end_of_SPI_init:	
   691                           
   692                           	psect	text2
   693  0404                     __ptext2:	
   694 ;; *************** function _MFRC522_isCard *****************
   695 ;; Defined at:
   696 ;;		line 553 in file "main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  TagType         1    wreg     PTR unsigned char 
   699 ;;		 -> main@TagType(2), 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  TagType         1   32[BANK0 ] PTR unsigned char 
   702 ;;		 -> main@TagType(2), 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      unsigned char 
   705 ;; Registers used:
   706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   712 ;;      Params:         0       0       0       0
   713 ;;      Locals:         0       1       0       0
   714 ;;      Temps:          0       1       0       0
   715 ;;      Totals:         0       2       0       0
   716 ;;Total ram usage:        2 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    5
   719 ;; This function calls:
   720 ;;		_MFRC522_Request
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           
   727                           ;psect for function _MFRC522_isCard
   728  0404                     _MFRC522_isCard:	
   729                           
   730                           ;incstack = 0
   731                           ; Regs used in _MFRC522_isCard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   732                           ;MFRC522_isCard@TagType stored from wreg
   733  0404  1283               	bcf	3,5	;RP0=0, select bank0
   734  0405  1303               	bcf	3,6	;RP1=0, select bank0
   735  0406  00C0               	movwf	MFRC522_isCard@TagType
   736                           
   737                           ;main.c: 555: if (MFRC522_Request( 0x26, TagType ) == 0)
   738  0407  0840               	movf	MFRC522_isCard@TagType,w
   739  0408  00BF               	movwf	??_MFRC522_isCard
   740  0409  083F               	movf	??_MFRC522_isCard,w
   741  040A  00B6               	movwf	MFRC522_Request@TagType
   742  040B  3026               	movlw	38
   743  040C  245E               	fcall	_MFRC522_Request
   744  040D  3800               	iorlw	0
   745  040E  1D03               	skipz
   746  040F  2C12               	goto	l1346
   747                           
   748                           ;main.c: 556: return 1;
   749  0410  3001               	movlw	1
   750  0411  0008               	return
   751  0412                     l1346:	
   752                           
   753                           ;main.c: 557: else
   754                           ;main.c: 558: return 0;
   755  0412  3000               	movlw	0
   756  0413  0008               	return
   757  0414                     __end_of_MFRC522_isCard:	
   758                           
   759                           	psect	text3
   760  045E                     __ptext3:	
   761 ;; *************** function _MFRC522_Request *****************
   762 ;; Defined at:
   763 ;;		line 363 in file "main.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  reqMode         1    wreg     unsigned char 
   766 ;;  TagType         1   22[BANK0 ] PTR unsigned char 
   767 ;;		 -> main@TagType(2), 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  reqMode         1   27[BANK0 ] unsigned char 
   770 ;;  backBits        2   29[BANK0 ] unsigned int 
   771 ;;  _status         1   28[BANK0 ] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      unsigned char 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   781 ;;      Params:         0       1       0       0
   782 ;;      Locals:         0       4       0       0
   783 ;;      Temps:          0       4       0       0
   784 ;;      Totals:         0       9       0       0
   785 ;;Total ram usage:        9 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    4
   788 ;; This function calls:
   789 ;;		_MFRC522_ToCard
   790 ;;		_MFRC522_Wr
   791 ;; This function is called by:
   792 ;;		_MFRC522_isCard
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _MFRC522_Request
   798  045E                     _MFRC522_Request:	
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in _MFRC522_Request: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   802                           ;MFRC522_Request@reqMode stored from wreg
   803  045E  1283               	bcf	3,5	;RP0=0, select bank0
   804  045F  1303               	bcf	3,6	;RP1=0, select bank0
   805  0460  00BB               	movwf	MFRC522_Request@reqMode
   806                           
   807                           ;main.c: 365: char _status;
   808                           ;main.c: 366: unsigned backBits;
   809                           ;main.c: 367: MFRC522_Wr( 0x0D, 0x07 );
   810  0461  3007               	movlw	7
   811  0462  00B7               	movwf	??_MFRC522_Request
   812  0463  0837               	movf	??_MFRC522_Request,w
   813  0464  00FB               	movwf	MFRC522_Wr@value
   814  0465  300D               	movlw	13
   815  0466  23E5               	fcall	_MFRC522_Wr
   816                           
   817                           ;main.c: 368: TagType[0] = reqMode;
   818  0467  1283               	bcf	3,5	;RP0=0, select bank0
   819  0468  1303               	bcf	3,6	;RP1=0, select bank0
   820  0469  083B               	movf	MFRC522_Request@reqMode,w
   821  046A  00B7               	movwf	??_MFRC522_Request
   822  046B  0836               	movf	MFRC522_Request@TagType,w
   823  046C  0084               	movwf	4
   824  046D  0837               	movf	??_MFRC522_Request,w
   825  046E  1383               	bcf	3,7	;select IRP bank0
   826  046F  0080               	movwf	0
   827                           
   828                           ;main.c: 369: _status = MFRC522_ToCard( 0x0C, TagType, 1, TagType, &backBits );
   829  0470  0836               	movf	MFRC522_Request@TagType,w
   830  0471  00B7               	movwf	??_MFRC522_Request
   831  0472  0837               	movf	??_MFRC522_Request,w
   832  0473  00A4               	movwf	MFRC522_ToCard@sendData
   833  0474  01A5               	clrf	MFRC522_ToCard@sendLen
   834  0475  0AA5               	incf	MFRC522_ToCard@sendLen,f
   835  0476  0836               	movf	MFRC522_Request@TagType,w
   836  0477  00B8               	movwf	??_MFRC522_Request+1
   837  0478  0838               	movf	??_MFRC522_Request+1,w
   838  0479  00A6               	movwf	MFRC522_ToCard@backData
   839  047A  303D               	movlw	MFRC522_Request@backBits& (0+255)
   840  047B  00B9               	movwf	??_MFRC522_Request+2
   841  047C  0839               	movf	??_MFRC522_Request+2,w
   842  047D  00A7               	movwf	MFRC522_ToCard@backLen
   843  047E  300C               	movlw	12
   844  047F  26CB               	fcall	_MFRC522_ToCard
   845  0480  1283               	bcf	3,5	;RP0=0, select bank0
   846  0481  1303               	bcf	3,6	;RP1=0, select bank0
   847  0482  00BA               	movwf	??_MFRC522_Request+3
   848  0483  083A               	movf	??_MFRC522_Request+3,w
   849  0484  00BC               	movwf	MFRC522_Request@_status
   850                           
   851                           ;main.c: 370: if ( (_status != 0) || (backBits != 0x10) )
   852  0485  08BC               	movf	MFRC522_Request@_status,f
   853  0486  1D03               	skipz
   854  0487  2C8D               	goto	l1234
   855  0488  3010               	movlw	16
   856  0489  063D               	xorwf	MFRC522_Request@backBits,w
   857  048A  043E               	iorwf	MFRC522_Request@backBits+1,w
   858  048B  1903               	skipnz
   859  048C  2C91               	goto	l95
   860  048D                     l1234:	
   861                           
   862                           ;main.c: 371: {
   863                           ;main.c: 372: _status = 2;
   864  048D  3002               	movlw	2
   865  048E  00B7               	movwf	??_MFRC522_Request
   866  048F  0837               	movf	??_MFRC522_Request,w
   867  0490  00BC               	movwf	MFRC522_Request@_status
   868  0491                     l95:	
   869                           
   870                           ;main.c: 373: }
   871                           ;main.c: 374: return _status;
   872  0491  083C               	movf	MFRC522_Request@_status,w
   873  0492  0008               	return
   874  0493                     __end_of_MFRC522_Request:	
   875                           
   876                           	psect	text4
   877  0524                     __ptext4:	
   878 ;; *************** function _MFRC522_SelectTag *****************
   879 ;; Defined at:
   880 ;;		line 402 in file "main.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  serNum          1    wreg     PTR unsigned char 
   883 ;;		 -> main@UID(6), 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  serNum          1   38[BANK0 ] PTR unsigned char 
   886 ;;		 -> main@UID(6), 
   887 ;;  buffer          9   27[BANK0 ] unsigned char [9]
   888 ;;  recvBits        2   39[BANK0 ] unsigned int 
   889 ;;  i               1   41[BANK0 ] unsigned char 
   890 ;;  size            1   37[BANK0 ] unsigned char 
   891 ;;  _status         1   36[BANK0 ] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      unsigned char 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   901 ;;      Params:         0       0       0       0
   902 ;;      Locals:         0      15       0       0
   903 ;;      Temps:          0       5       0       0
   904 ;;      Totals:         0      20       0       0
   905 ;;Total ram usage:       20 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    4
   908 ;; This function calls:
   909 ;;		_MFRC522_CRC
   910 ;;		_MFRC522_ToCard
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _MFRC522_SelectTag
   918  0524                     _MFRC522_SelectTag:	
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _MFRC522_SelectTag: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   922                           ;MFRC522_SelectTag@serNum stored from wreg
   923  0524  1283               	bcf	3,5	;RP0=0, select bank0
   924  0525  1303               	bcf	3,6	;RP1=0, select bank0
   925  0526  00C6               	movwf	MFRC522_SelectTag@serNum
   926                           
   927                           ;main.c: 404: char i;
   928                           ;main.c: 405: char _status;
   929                           ;main.c: 406: char size;
   930                           ;main.c: 407: unsigned recvBits;
   931                           ;main.c: 408: char buffer[9];
   932                           ;main.c: 412: buffer[0] = 0x93;
   933  0527  3093               	movlw	147
   934  0528  00B6               	movwf	??_MFRC522_SelectTag
   935  0529  0836               	movf	??_MFRC522_SelectTag,w
   936  052A  00BB               	movwf	MFRC522_SelectTag@buffer
   937                           
   938                           ;main.c: 413: buffer[1] = 0x70;
   939  052B  3070               	movlw	112
   940  052C  00B6               	movwf	??_MFRC522_SelectTag
   941  052D  0836               	movf	??_MFRC522_SelectTag,w
   942  052E  00BC               	movwf	MFRC522_SelectTag@buffer+1
   943                           
   944                           ;main.c: 415: for ( i=2; i < 7; i++ )
   945  052F  3002               	movlw	2
   946  0530  00B6               	movwf	??_MFRC522_SelectTag
   947  0531  0836               	movf	??_MFRC522_SelectTag,w
   948  0532  00C9               	movwf	MFRC522_SelectTag@i
   949  0533  3007               	movlw	7
   950  0534  0249               	subwf	MFRC522_SelectTag@i,w
   951  0535  1803               	btfsc	3,0
   952  0536  2D4D               	goto	l1324
   953  0537                     l1316:	
   954                           
   955                           ;main.c: 416: {
   956                           ;main.c: 417: buffer[i] = *serNum++;
   957  0537  0846               	movf	MFRC522_SelectTag@serNum,w
   958  0538  0084               	movwf	4
   959  0539  1383               	bcf	3,7	;select IRP bank0
   960  053A  0800               	movf	0,w
   961  053B  00B6               	movwf	??_MFRC522_SelectTag
   962  053C  0849               	movf	MFRC522_SelectTag@i,w
   963  053D  3E3B               	addlw	MFRC522_SelectTag@buffer& (0+255)
   964  053E  0084               	movwf	4
   965  053F  0836               	movf	??_MFRC522_SelectTag,w
   966  0540  0080               	movwf	0
   967  0541  3001               	movlw	1
   968  0542  00B6               	movwf	??_MFRC522_SelectTag
   969  0543  0836               	movf	??_MFRC522_SelectTag,w
   970  0544  07C6               	addwf	MFRC522_SelectTag@serNum,f
   971  0545  3001               	movlw	1
   972  0546  00B6               	movwf	??_MFRC522_SelectTag
   973  0547  0836               	movf	??_MFRC522_SelectTag,w
   974  0548  07C9               	addwf	MFRC522_SelectTag@i,f
   975  0549  3007               	movlw	7
   976  054A  0249               	subwf	MFRC522_SelectTag@i,w
   977  054B  1C03               	skipc
   978  054C  2D37               	goto	l1316
   979  054D                     l1324:	
   980                           
   981                           ;main.c: 418: }
   982                           ;main.c: 420: MFRC522_CRC( buffer, 7, &buffer[7] );
   983  054D  3007               	movlw	7
   984  054E  00B6               	movwf	??_MFRC522_SelectTag
   985  054F  0836               	movf	??_MFRC522_SelectTag,w
   986  0550  00A4               	movwf	MFRC522_CRC@length
   987  0551  3042               	movlw	(MFRC522_SelectTag@buffer+7)& (0+255)
   988  0552  00B7               	movwf	??_MFRC522_SelectTag+1
   989  0553  0837               	movf	??_MFRC522_SelectTag+1,w
   990  0554  00A5               	movwf	MFRC522_CRC@dataOut
   991  0555  303B               	movlw	MFRC522_SelectTag@buffer& (0+255)
   992  0556  24C9               	fcall	_MFRC522_CRC
   993                           
   994                           ;main.c: 422: _status = MFRC522_ToCard( 0x0C, buffer, 9, buffer, &recvBits );
   995  0557  303B               	movlw	MFRC522_SelectTag@buffer& (0+255)
   996  0558  1283               	bcf	3,5	;RP0=0, select bank0
   997  0559  1303               	bcf	3,6	;RP1=0, select bank0
   998  055A  00B6               	movwf	??_MFRC522_SelectTag
   999  055B  0836               	movf	??_MFRC522_SelectTag,w
  1000  055C  00A4               	movwf	MFRC522_ToCard@sendData
  1001  055D  3009               	movlw	9
  1002  055E  00B7               	movwf	??_MFRC522_SelectTag+1
  1003  055F  0837               	movf	??_MFRC522_SelectTag+1,w
  1004  0560  00A5               	movwf	MFRC522_ToCard@sendLen
  1005  0561  303B               	movlw	MFRC522_SelectTag@buffer& (0+255)
  1006  0562  00B8               	movwf	??_MFRC522_SelectTag+2
  1007  0563  0838               	movf	??_MFRC522_SelectTag+2,w
  1008  0564  00A6               	movwf	MFRC522_ToCard@backData
  1009  0565  3047               	movlw	MFRC522_SelectTag@recvBits& (0+255)
  1010  0566  00B9               	movwf	??_MFRC522_SelectTag+3
  1011  0567  0839               	movf	??_MFRC522_SelectTag+3,w
  1012  0568  00A7               	movwf	MFRC522_ToCard@backLen
  1013  0569  300C               	movlw	12
  1014  056A  26CB               	fcall	_MFRC522_ToCard
  1015  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1016  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1017  056D  00BA               	movwf	??_MFRC522_SelectTag+4
  1018  056E  083A               	movf	??_MFRC522_SelectTag+4,w
  1019  056F  00C4               	movwf	MFRC522_SelectTag@_status
  1020                           
  1021                           ;main.c: 423: if ( (_status == 0) && (recvBits == 0x18) )
  1022  0570  08C4               	movf	MFRC522_SelectTag@_status,f
  1023  0571  1D03               	skipz
  1024  0572  2D7D               	goto	l1332
  1025  0573  3018               	movlw	24
  1026  0574  0647               	xorwf	MFRC522_SelectTag@recvBits,w
  1027  0575  0448               	iorwf	MFRC522_SelectTag@recvBits+1,w
  1028  0576  1D03               	skipz
  1029  0577  2D7D               	goto	l1332
  1030                           
  1031                           ;main.c: 424: {
  1032                           ;main.c: 425: size = buffer[0];
  1033  0578  083B               	movf	MFRC522_SelectTag@buffer,w
  1034  0579  00B6               	movwf	??_MFRC522_SelectTag
  1035  057A  0836               	movf	??_MFRC522_SelectTag,w
  1036  057B  00C5               	movwf	MFRC522_SelectTag@size
  1037                           
  1038                           ;main.c: 426: }
  1039  057C  2D7E               	goto	l1334
  1040  057D                     l1332:	
  1041                           
  1042                           ;main.c: 427: else
  1043                           ;main.c: 428: {
  1044                           ;main.c: 429: size = 0;
  1045  057D  01C5               	clrf	MFRC522_SelectTag@size
  1046  057E                     l1334:	
  1047                           
  1048                           ;main.c: 430: }
  1049                           ;main.c: 431: return size;
  1050  057E  0845               	movf	MFRC522_SelectTag@size,w
  1051  057F  0008               	return
  1052  0580                     __end_of_MFRC522_SelectTag:	
  1053                           
  1054                           	psect	text5
  1055  04C9                     __ptext5:	
  1056 ;; *************** function _MFRC522_CRC *****************
  1057 ;; Defined at:
  1058 ;;		line 376 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  dataIn          1    wreg     PTR unsigned char 
  1061 ;;		 -> MFRC522_Write@buff(18), MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  1062 ;;  length          1    4[BANK0 ] unsigned char 
  1063 ;;  dataOut         1    5[BANK0 ] PTR unsigned char 
  1064 ;;		 -> MFRC522_Write@buff(18), MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  dataIn          1    9[BANK0 ] PTR unsigned char 
  1067 ;;		 -> MFRC522_Write@buff(18), MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  1068 ;;  i               1    8[BANK0 ] unsigned char 
  1069 ;;  n               1    7[BANK0 ] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1079 ;;      Params:         0       2       0       0
  1080 ;;      Locals:         0       3       0       0
  1081 ;;      Temps:          0       1       0       0
  1082 ;;      Totals:         0       6       0       0
  1083 ;;Total ram usage:        6 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    3
  1086 ;; This function calls:
  1087 ;;		_MFRC522_Clear_Bit
  1088 ;;		_MFRC522_Rd
  1089 ;;		_MFRC522_Set_Bit
  1090 ;;		_MFRC522_Wr
  1091 ;; This function is called by:
  1092 ;;		_MFRC522_SelectTag
  1093 ;;		_MFRC522_Halt
  1094 ;;		_MFRC522_Write
  1095 ;;		_MFRC522_Read
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _MFRC522_CRC
  1101  04C9                     _MFRC522_CRC:	
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in _MFRC522_CRC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1105                           ;MFRC522_CRC@dataIn stored from wreg
  1106  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1107  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1108  04CB  00A9               	movwf	MFRC522_CRC@dataIn
  1109                           
  1110                           ;main.c: 378: char i, n;
  1111                           ;main.c: 379: MFRC522_Clear_Bit( 0x05, 0x04 );
  1112  04CC  3004               	movlw	4
  1113  04CD  00A6               	movwf	??_MFRC522_CRC
  1114  04CE  0826               	movf	??_MFRC522_CRC,w
  1115  04CF  00A0               	movwf	MFRC522_Clear_Bit@mask
  1116  04D0  3005               	movlw	5
  1117  04D1  23F4               	fcall	_MFRC522_Clear_Bit
  1118                           
  1119                           ;main.c: 380: MFRC522_Set_Bit( 0x0A, 0x80 );
  1120  04D2  3080               	movlw	128
  1121  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1122  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1123  04D5  00A6               	movwf	??_MFRC522_CRC
  1124  04D6  0826               	movf	??_MFRC522_CRC,w
  1125  04D7  00A0               	movwf	MFRC522_Set_Bit@mask
  1126  04D8  300A               	movlw	10
  1127  04D9  23D7               	fcall	_MFRC522_Set_Bit
  1128                           
  1129                           ;main.c: 383: for ( i = 0; i < length; i++ )
  1130  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1131  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1132  04DC  01A8               	clrf	MFRC522_CRC@i
  1133  04DD                     l1248:	
  1134  04DD  0824               	movf	MFRC522_CRC@length,w
  1135  04DE  0228               	subwf	MFRC522_CRC@i,w
  1136  04DF  1803               	btfsc	3,0
  1137  04E0  2CF5               	goto	l1250
  1138                           
  1139                           ;main.c: 384: {
  1140                           ;main.c: 385: MFRC522_Wr( 0x09, *dataIn++ );
  1141  04E1  0829               	movf	MFRC522_CRC@dataIn,w
  1142  04E2  0084               	movwf	4
  1143  04E3  1383               	bcf	3,7	;select IRP bank0
  1144  04E4  0800               	movf	0,w
  1145  04E5  00A6               	movwf	??_MFRC522_CRC
  1146  04E6  0826               	movf	??_MFRC522_CRC,w
  1147  04E7  00FB               	movwf	MFRC522_Wr@value
  1148  04E8  3009               	movlw	9
  1149  04E9  23E5               	fcall	_MFRC522_Wr
  1150  04EA  3001               	movlw	1
  1151  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1152  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1153  04ED  00A6               	movwf	??_MFRC522_CRC
  1154  04EE  0826               	movf	??_MFRC522_CRC,w
  1155  04EF  07A9               	addwf	MFRC522_CRC@dataIn,f
  1156  04F0  3001               	movlw	1
  1157  04F1  00A6               	movwf	??_MFRC522_CRC
  1158  04F2  0826               	movf	??_MFRC522_CRC,w
  1159  04F3  07A8               	addwf	MFRC522_CRC@i,f
  1160  04F4  2CDD               	goto	l1248
  1161  04F5                     l1250:	
  1162                           
  1163                           ;main.c: 386: }
  1164                           ;main.c: 388: MFRC522_Wr( 0x01, 0x03 );
  1165  04F5  3003               	movlw	3
  1166  04F6  00A6               	movwf	??_MFRC522_CRC
  1167  04F7  0826               	movf	??_MFRC522_CRC,w
  1168  04F8  00FB               	movwf	MFRC522_Wr@value
  1169  04F9  3001               	movlw	1
  1170  04FA  23E5               	fcall	_MFRC522_Wr
  1171                           
  1172                           ;main.c: 390: i = 0xFF;
  1173  04FB  30FF               	movlw	255
  1174  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1175  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1176  04FE  00A6               	movwf	??_MFRC522_CRC
  1177  04FF  0826               	movf	??_MFRC522_CRC,w
  1178  0500  00A8               	movwf	MFRC522_CRC@i
  1179  0501                     l1254:	
  1180                           ;main.c: 392: do
  1181                           
  1182                           
  1183                           ;main.c: 393: {
  1184                           ;main.c: 394: n = MFRC522_Rd( 0x05 );
  1185  0501  3005               	movlw	5
  1186  0502  2414               	fcall	_MFRC522_Rd
  1187  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0505  00A6               	movwf	??_MFRC522_CRC
  1190  0506  0826               	movf	??_MFRC522_CRC,w
  1191  0507  00A7               	movwf	MFRC522_CRC@n
  1192                           
  1193                           ;main.c: 395: i--;
  1194  0508  3001               	movlw	1
  1195  0509  02A8               	subwf	MFRC522_CRC@i,f
  1196                           
  1197                           ;main.c: 396: }
  1198                           ;main.c: 397: while( i && !(n & 0x04) );
  1199  050A  0828               	movf	MFRC522_CRC@i,w
  1200  050B  1D03               	skipz
  1201  050C  1927               	btfsc	MFRC522_CRC@n,2
  1202  050D  2D0F               	goto	l1262
  1203  050E  2D01               	goto	l1254
  1204  050F                     l1262:	
  1205                           
  1206                           ;main.c: 399: dataOut[0] = MFRC522_Rd( 0x22 );
  1207  050F  3022               	movlw	34
  1208  0510  2414               	fcall	_MFRC522_Rd
  1209  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0513  00A6               	movwf	??_MFRC522_CRC
  1212  0514  0825               	movf	MFRC522_CRC@dataOut,w
  1213  0515  0084               	movwf	4
  1214  0516  0826               	movf	??_MFRC522_CRC,w
  1215  0517  1383               	bcf	3,7	;select IRP bank0
  1216  0518  0080               	movwf	0
  1217                           
  1218                           ;main.c: 400: dataOut[1] = MFRC522_Rd( 0x21 );
  1219  0519  3021               	movlw	33
  1220  051A  2414               	fcall	_MFRC522_Rd
  1221  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1222  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1223  051D  00A6               	movwf	??_MFRC522_CRC
  1224  051E  0A25               	incf	MFRC522_CRC@dataOut,w
  1225  051F  0084               	movwf	4
  1226  0520  0826               	movf	??_MFRC522_CRC,w
  1227  0521  1383               	bcf	3,7	;select IRP bank0
  1228  0522  0080               	movwf	0
  1229  0523  0008               	return
  1230  0524                     __end_of_MFRC522_CRC:	
  1231                           
  1232                           	psect	text6
  1233  0428                     __ptext6:	
  1234 ;; *************** function _MFRC522_ReadCardSerial *****************
  1235 ;; Defined at:
  1236 ;;		line 560 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  str             1    wreg     PTR unsigned char 
  1239 ;;		 -> main@UID(6), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  str             1   35[BANK0 ] PTR unsigned char 
  1242 ;;		 -> main@UID(6), 
  1243 ;;  _status         1   34[BANK0 ] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      unsigned char 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1253 ;;      Params:         0       0       0       0
  1254 ;;      Locals:         0       2       0       0
  1255 ;;      Temps:          0       1       0       0
  1256 ;;      Totals:         0       3       0       0
  1257 ;;Total ram usage:        3 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    5
  1260 ;; This function calls:
  1261 ;;		_MFRC522_AntiColl
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _MFRC522_ReadCardSerial
  1269  0428                     _MFRC522_ReadCardSerial:	
  1270                           
  1271                           ;incstack = 0
  1272                           ; Regs used in _MFRC522_ReadCardSerial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1273                           ;MFRC522_ReadCardSerial@str stored from wreg
  1274  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1276  042A  00C3               	movwf	MFRC522_ReadCardSerial@str
  1277                           
  1278                           ;main.c: 562: char _status;
  1279                           ;main.c: 563: _status = MFRC522_AntiColl( str );
  1280  042B  0843               	movf	MFRC522_ReadCardSerial@str,w
  1281  042C  2580               	fcall	_MFRC522_AntiColl
  1282  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1283  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1284  042F  00C1               	movwf	??_MFRC522_ReadCardSerial
  1285  0430  0841               	movf	??_MFRC522_ReadCardSerial,w
  1286  0431  00C2               	movwf	MFRC522_ReadCardSerial@_status
  1287                           
  1288                           ;main.c: 564: str[5] = 0;
  1289  0432  0843               	movf	MFRC522_ReadCardSerial@str,w
  1290  0433  3E05               	addlw	5
  1291  0434  0084               	movwf	4
  1292  0435  1383               	bcf	3,7	;select IRP bank0
  1293  0436  0180               	clrf	0
  1294                           
  1295                           ;main.c: 565: if (_status == 0)
  1296  0437  08C2               	movf	MFRC522_ReadCardSerial@_status,f
  1297  0438  1D03               	skipz
  1298  0439  2C3C               	goto	l1362
  1299                           
  1300                           ;main.c: 566: return 1;
  1301  043A  3001               	movlw	1
  1302  043B  0008               	return
  1303  043C                     l1362:	
  1304                           
  1305                           ;main.c: 567: else
  1306                           ;main.c: 568: return 0;
  1307  043C  3000               	movlw	0
  1308  043D  0008               	return
  1309  043E                     __end_of_MFRC522_ReadCardSerial:	
  1310                           
  1311                           	psect	text7
  1312  0580                     __ptext7:	
  1313 ;; *************** function _MFRC522_AntiColl *****************
  1314 ;; Defined at:
  1315 ;;		line 523 in file "main.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  serNum          1    wreg     PTR unsigned char 
  1318 ;;		 -> main@UID(6), 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  serNum          1   32[BANK0 ] PTR unsigned char 
  1321 ;;		 -> main@UID(6), 
  1322 ;;  unLen           2   28[BANK0 ] unsigned int 
  1323 ;;  i               1   31[BANK0 ] unsigned char 
  1324 ;;  _status         1   30[BANK0 ] unsigned char 
  1325 ;;  serNumCheck     1   27[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      unsigned char 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1335 ;;      Params:         0       0       0       0
  1336 ;;      Locals:         0       6       0       0
  1337 ;;      Temps:          0       5       0       0
  1338 ;;      Totals:         0      11       0       0
  1339 ;;Total ram usage:       11 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    4
  1342 ;; This function calls:
  1343 ;;		_MFRC522_Clear_Bit
  1344 ;;		_MFRC522_ToCard
  1345 ;;		_MFRC522_Wr
  1346 ;; This function is called by:
  1347 ;;		_MFRC522_ReadCardSerial
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _MFRC522_AntiColl
  1353  0580                     _MFRC522_AntiColl:	
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _MFRC522_AntiColl: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1357                           ;MFRC522_AntiColl@serNum stored from wreg
  1358  0580  1283               	bcf	3,5	;RP0=0, select bank0
  1359  0581  1303               	bcf	3,6	;RP1=0, select bank0
  1360  0582  00C0               	movwf	MFRC522_AntiColl@serNum
  1361                           
  1362                           ;main.c: 525: char _status;
  1363                           ;main.c: 526: char i;
  1364                           ;main.c: 527: char serNumCheck = 0;
  1365  0583  01BB               	clrf	MFRC522_AntiColl@serNumCheck
  1366                           
  1367                           ;main.c: 528: unsigned unLen;
  1368                           ;main.c: 529: MFRC522_Wr( 0x0D, 0x00 );
  1369  0584  01FB               	clrf	MFRC522_Wr@value
  1370  0585  300D               	movlw	13
  1371  0586  23E5               	fcall	_MFRC522_Wr
  1372                           
  1373                           ;main.c: 530: serNum[0] = 0x93;
  1374  0587  3093               	movlw	147
  1375  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1377  058A  00B6               	movwf	??_MFRC522_AntiColl
  1378  058B  0840               	movf	MFRC522_AntiColl@serNum,w
  1379  058C  0084               	movwf	4
  1380  058D  0836               	movf	??_MFRC522_AntiColl,w
  1381  058E  1383               	bcf	3,7	;select IRP bank0
  1382  058F  0080               	movwf	0
  1383                           
  1384                           ;main.c: 531: serNum[1] = 0x20;
  1385  0590  3020               	movlw	32
  1386  0591  00B6               	movwf	??_MFRC522_AntiColl
  1387  0592  0A40               	incf	MFRC522_AntiColl@serNum,w
  1388  0593  0084               	movwf	4
  1389  0594  0836               	movf	??_MFRC522_AntiColl,w
  1390  0595  0080               	movwf	0
  1391                           
  1392                           ;main.c: 532: MFRC522_Clear_Bit( 0x08, 0x08 );
  1393  0596  3008               	movlw	8
  1394  0597  00B6               	movwf	??_MFRC522_AntiColl
  1395  0598  0836               	movf	??_MFRC522_AntiColl,w
  1396  0599  00A0               	movwf	MFRC522_Clear_Bit@mask
  1397  059A  3008               	movlw	8
  1398  059B  23F4               	fcall	_MFRC522_Clear_Bit
  1399                           
  1400                           ;main.c: 533: _status = MFRC522_ToCard( 0x0C, serNum, 2, serNum, &unLen );
  1401  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1402  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1403  059E  0840               	movf	MFRC522_AntiColl@serNum,w
  1404  059F  00B6               	movwf	??_MFRC522_AntiColl
  1405  05A0  0836               	movf	??_MFRC522_AntiColl,w
  1406  05A1  00A4               	movwf	MFRC522_ToCard@sendData
  1407  05A2  3002               	movlw	2
  1408  05A3  00B7               	movwf	??_MFRC522_AntiColl+1
  1409  05A4  0837               	movf	??_MFRC522_AntiColl+1,w
  1410  05A5  00A5               	movwf	MFRC522_ToCard@sendLen
  1411  05A6  0840               	movf	MFRC522_AntiColl@serNum,w
  1412  05A7  00B8               	movwf	??_MFRC522_AntiColl+2
  1413  05A8  0838               	movf	??_MFRC522_AntiColl+2,w
  1414  05A9  00A6               	movwf	MFRC522_ToCard@backData
  1415  05AA  303C               	movlw	MFRC522_AntiColl@unLen& (0+255)
  1416  05AB  00B9               	movwf	??_MFRC522_AntiColl+3
  1417  05AC  0839               	movf	??_MFRC522_AntiColl+3,w
  1418  05AD  00A7               	movwf	MFRC522_ToCard@backLen
  1419  05AE  300C               	movlw	12
  1420  05AF  26CB               	fcall	_MFRC522_ToCard
  1421  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1422  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1423  05B2  00BA               	movwf	??_MFRC522_AntiColl+4
  1424  05B3  083A               	movf	??_MFRC522_AntiColl+4,w
  1425  05B4  00BE               	movwf	MFRC522_AntiColl@_status
  1426                           
  1427                           ;main.c: 534: if (_status == 0)
  1428  05B5  08BE               	movf	MFRC522_AntiColl@_status,f
  1429  05B6  1D03               	skipz
  1430  05B7  2DDB               	goto	l149
  1431                           
  1432                           ;main.c: 535: {
  1433                           ;main.c: 536: for ( i=0; i < 4; i++ )
  1434  05B8  01BF               	clrf	MFRC522_AntiColl@i
  1435  05B9  3004               	movlw	4
  1436  05BA  023F               	subwf	MFRC522_AntiColl@i,w
  1437  05BB  1803               	btfsc	3,0
  1438  05BC  2DCF               	goto	l1290
  1439  05BD                     l1284:	
  1440                           
  1441                           ;main.c: 537: {
  1442                           ;main.c: 538: serNumCheck ^= serNum[i];
  1443  05BD  083F               	movf	MFRC522_AntiColl@i,w
  1444  05BE  0740               	addwf	MFRC522_AntiColl@serNum,w
  1445  05BF  00B6               	movwf	??_MFRC522_AntiColl
  1446  05C0  0836               	movf	??_MFRC522_AntiColl,w
  1447  05C1  0084               	movwf	4
  1448  05C2  1383               	bcf	3,7	;select IRP bank0
  1449  05C3  0800               	movf	0,w
  1450  05C4  00B7               	movwf	??_MFRC522_AntiColl+1
  1451  05C5  0837               	movf	??_MFRC522_AntiColl+1,w
  1452  05C6  06BB               	xorwf	MFRC522_AntiColl@serNumCheck,f
  1453  05C7  3001               	movlw	1
  1454  05C8  00B6               	movwf	??_MFRC522_AntiColl
  1455  05C9  0836               	movf	??_MFRC522_AntiColl,w
  1456  05CA  07BF               	addwf	MFRC522_AntiColl@i,f
  1457  05CB  3004               	movlw	4
  1458  05CC  023F               	subwf	MFRC522_AntiColl@i,w
  1459  05CD  1C03               	skipc
  1460  05CE  2DBD               	goto	l1284
  1461  05CF                     l1290:	
  1462                           
  1463                           ;main.c: 539: }
  1464                           ;main.c: 541: if ( serNumCheck != serNum[4] )
  1465  05CF  0840               	movf	MFRC522_AntiColl@serNum,w
  1466  05D0  3E04               	addlw	4
  1467  05D1  0084               	movwf	4
  1468  05D2  1383               	bcf	3,7	;select IRP bank0
  1469  05D3  0800               	movf	0,w
  1470  05D4  063B               	xorwf	MFRC522_AntiColl@serNumCheck,w
  1471  05D5  1903               	skipnz
  1472  05D6  2DDB               	goto	l149
  1473                           
  1474                           ;main.c: 542: {
  1475                           ;main.c: 543: _status = 2;
  1476  05D7  3002               	movlw	2
  1477  05D8  00B6               	movwf	??_MFRC522_AntiColl
  1478  05D9  0836               	movf	??_MFRC522_AntiColl,w
  1479  05DA  00BE               	movwf	MFRC522_AntiColl@_status
  1480  05DB                     l149:	
  1481                           
  1482                           ;main.c: 544: }
  1483                           ;main.c: 545: }
  1484                           ;main.c: 546: return _status;
  1485  05DB  083E               	movf	MFRC522_AntiColl@_status,w
  1486  05DC  0008               	return
  1487  05DD                     __end_of_MFRC522_AntiColl:	
  1488                           
  1489                           	psect	text8
  1490  06CB                     __ptext8:	
  1491 ;; *************** function _MFRC522_ToCard *****************
  1492 ;; Defined at:
  1493 ;;		line 260 in file "main.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  command         1    wreg     unsigned char 
  1496 ;;  sendData        1    4[BANK0 ] PTR unsigned char 
  1497 ;;		 -> main@UID(6), main@TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  1498 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  1499 ;;  sendLen         1    5[BANK0 ] unsigned char 
  1500 ;;  backData        1    6[BANK0 ] PTR unsigned char 
  1501 ;;		 -> main@UID(6), main@TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  1502 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  1503 ;;  backLen         1    7[BANK0 ] PTR unsigned int 
  1504 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Read@unLen(2), MFRC522_Write@recvBits(2), MFRC522_Auth@recvBits(2), 
  1505 ;;		 -> MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  command         1   18[BANK0 ] unsigned char 
  1508 ;;  i               2   19[BANK0 ] unsigned int 
  1509 ;;  n               1   21[BANK0 ] unsigned char 
  1510 ;;  irqEn           1   17[BANK0 ] unsigned char 
  1511 ;;  lastBits        1   16[BANK0 ] unsigned char 
  1512 ;;  _status         1   15[BANK0 ] unsigned char 
  1513 ;;  waitIRq         1   14[BANK0 ] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      unsigned char 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1523 ;;      Params:         0       4       0       0
  1524 ;;      Locals:         0       8       0       0
  1525 ;;      Temps:          0       6       0       0
  1526 ;;      Totals:         0      18       0       0
  1527 ;;Total ram usage:       18 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    3
  1530 ;; This function calls:
  1531 ;;		_MFRC522_Clear_Bit
  1532 ;;		_MFRC522_Rd
  1533 ;;		_MFRC522_Set_Bit
  1534 ;;		_MFRC522_Wr
  1535 ;; This function is called by:
  1536 ;;		_MFRC522_Request
  1537 ;;		_MFRC522_SelectTag
  1538 ;;		_MFRC522_AntiColl
  1539 ;;		_MFRC522_Halt
  1540 ;;		_MFRC522_Auth
  1541 ;;		_MFRC522_Write
  1542 ;;		_MFRC522_Read
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _MFRC522_ToCard
  1548  06CB                     _MFRC522_ToCard:	
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _MFRC522_ToCard: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1552                           ;MFRC522_ToCard@command stored from wreg
  1553  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1554  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1555  06CD  00B2               	movwf	MFRC522_ToCard@command
  1556                           
  1557                           ;main.c: 262: char _status = 2;
  1558  06CE  3002               	movlw	2
  1559  06CF  00A8               	movwf	??_MFRC522_ToCard
  1560  06D0  0828               	movf	??_MFRC522_ToCard,w
  1561  06D1  00AF               	movwf	MFRC522_ToCard@_status
  1562                           
  1563                           ;main.c: 263: char irqEn = 0x00;
  1564  06D2  01B1               	clrf	MFRC522_ToCard@irqEn
  1565                           
  1566                           ;main.c: 264: char waitIRq = 0x00;
  1567  06D3  01AE               	clrf	MFRC522_ToCard@waitIRq
  1568                           
  1569                           ;main.c: 265: char lastBits;
  1570                           ;main.c: 266: char n;
  1571                           ;main.c: 267: unsigned i;
  1572                           ;main.c: 269: switch (command)
  1573  06D4  2EE4               	goto	l1150
  1574  06D5                     l1144:	
  1575                           ;main.c: 270: {
  1576                           ;main.c: 271: case 0x0E:
  1577                           
  1578                           
  1579                           ;main.c: 272: {
  1580                           ;main.c: 273: irqEn = 0x12;
  1581  06D5  3012               	movlw	18
  1582  06D6  00A8               	movwf	??_MFRC522_ToCard
  1583  06D7  0828               	movf	??_MFRC522_ToCard,w
  1584  06D8  00B1               	movwf	MFRC522_ToCard@irqEn
  1585                           
  1586                           ;main.c: 274: waitIRq = 0x10;
  1587  06D9  3010               	movlw	16
  1588  06DA  2EE0               	goto	L1
  1589  06DB                     l1146:	
  1590                           ;main.c: 276: }
  1591                           ;main.c: 277: case 0x0C:
  1592                           
  1593                           ;main.c: 275: break;
  1594                           
  1595                           
  1596                           ;main.c: 278: {
  1597                           ;main.c: 279: irqEn = 0x77;
  1598  06DB  3077               	movlw	119
  1599  06DC  00A8               	movwf	??_MFRC522_ToCard
  1600  06DD  0828               	movf	??_MFRC522_ToCard,w
  1601  06DE  00B1               	movwf	MFRC522_ToCard@irqEn
  1602                           
  1603                           ;main.c: 280: waitIRq = 0x30;
  1604  06DF  3030               	movlw	48
  1605  06E0                     L1:	
  1606  06E0  00A8               	movwf	??_MFRC522_ToCard
  1607  06E1  0828               	movf	??_MFRC522_ToCard,w
  1608  06E2  00AE               	movwf	MFRC522_ToCard@waitIRq
  1609                           
  1610                           ;main.c: 285: }
  1611                           
  1612                           ;main.c: 284: break;
  1613                           
  1614                           ;main.c: 282: }
  1615                           ;main.c: 283: default:
  1616                           
  1617                           ;main.c: 281: break;
  1618  06E3  2EEC               	goto	l1152
  1619  06E4                     l1150:	
  1620  06E4  0832               	movf	MFRC522_ToCard@command,w
  1621                           
  1622                           ; Switch size 1, requested type "space"
  1623                           ; Number of cases is 2, Range of values is 12 to 14
  1624                           ; switch strategies available:
  1625                           ; Name         Instructions Cycles
  1626                           ; simple_byte            7     4 (average)
  1627                           ; direct_byte           12     9 (fixed)
  1628                           ; jumptable            263     9 (fixed)
  1629                           ;	Chosen strategy is simple_byte
  1630  06E5  3A0C               	xorlw	12	; case 12
  1631  06E6  1903               	skipnz
  1632  06E7  2EDB               	goto	l1146
  1633  06E8  3A02               	xorlw	2	; case 14
  1634  06E9  1903               	skipnz
  1635  06EA  2ED5               	goto	l1144
  1636  06EB  2EEC               	goto	l1152
  1637  06EC                     l1152:	
  1638                           
  1639                           ;main.c: 286: MFRC522_Wr( 0x02, irqEn | 0x80 );
  1640  06EC  0831               	movf	MFRC522_ToCard@irqEn,w
  1641  06ED  3880               	iorlw	128
  1642  06EE  00A8               	movwf	??_MFRC522_ToCard
  1643  06EF  0828               	movf	??_MFRC522_ToCard,w
  1644  06F0  00FB               	movwf	MFRC522_Wr@value
  1645  06F1  3002               	movlw	2
  1646  06F2  23E5               	fcall	_MFRC522_Wr
  1647                           
  1648                           ;main.c: 287: MFRC522_Clear_Bit( 0x04, 0x80 );
  1649  06F3  3080               	movlw	128
  1650  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1651  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1652  06F6  00A8               	movwf	??_MFRC522_ToCard
  1653  06F7  0828               	movf	??_MFRC522_ToCard,w
  1654  06F8  00A0               	movwf	MFRC522_Clear_Bit@mask
  1655  06F9  3004               	movlw	4
  1656  06FA  23F4               	fcall	_MFRC522_Clear_Bit
  1657                           
  1658                           ;main.c: 288: MFRC522_Set_Bit( 0x0A, 0x80 );
  1659  06FB  3080               	movlw	128
  1660  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1661  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1662  06FE  00A8               	movwf	??_MFRC522_ToCard
  1663  06FF  0828               	movf	??_MFRC522_ToCard,w
  1664  0700  00A0               	movwf	MFRC522_Set_Bit@mask
  1665  0701  300A               	movlw	10
  1666  0702  23D7               	fcall	_MFRC522_Set_Bit
  1667                           
  1668                           ;main.c: 289: MFRC522_Wr( 0x01, 0x00 );
  1669  0703  01FB               	clrf	MFRC522_Wr@value
  1670  0704  3001               	movlw	1
  1671  0705  23E5               	fcall	_MFRC522_Wr
  1672                           
  1673                           ;main.c: 294: for ( i=0; i < sendLen; i++ )
  1674  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0708  01B3               	clrf	MFRC522_ToCard@i
  1677  0709  01B4               	clrf	MFRC522_ToCard@i+1
  1678  070A                     l1160:	
  1679  070A  0825               	movf	MFRC522_ToCard@sendLen,w
  1680  070B  00A8               	movwf	??_MFRC522_ToCard
  1681  070C  01A9               	clrf	??_MFRC522_ToCard+1
  1682  070D  0829               	movf	??_MFRC522_ToCard+1,w
  1683  070E  0234               	subwf	MFRC522_ToCard@i+1,w
  1684  070F  1D03               	skipz
  1685  0710  2F13               	goto	u725
  1686  0711  0828               	movf	??_MFRC522_ToCard,w
  1687  0712  0233               	subwf	MFRC522_ToCard@i,w
  1688  0713                     u725:	
  1689  0713  1803               	btfsc	3,0
  1690  0714  2F2A               	goto	l1162
  1691                           
  1692                           ;main.c: 295: {
  1693                           ;main.c: 296: MFRC522_Wr( 0x09, sendData[i] );
  1694  0715  0833               	movf	MFRC522_ToCard@i,w
  1695  0716  0724               	addwf	MFRC522_ToCard@sendData,w
  1696  0717  00A8               	movwf	??_MFRC522_ToCard
  1697  0718  0828               	movf	??_MFRC522_ToCard,w
  1698  0719  0084               	movwf	4
  1699  071A  1383               	bcf	3,7	;select IRP bank0
  1700  071B  0800               	movf	0,w
  1701  071C  00A9               	movwf	??_MFRC522_ToCard+1
  1702  071D  0829               	movf	??_MFRC522_ToCard+1,w
  1703  071E  00FB               	movwf	MFRC522_Wr@value
  1704  071F  3009               	movlw	9
  1705  0720  23E5               	fcall	_MFRC522_Wr
  1706  0721  3001               	movlw	1
  1707  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0724  07B3               	addwf	MFRC522_ToCard@i,f
  1710  0725  1803               	skipnc
  1711  0726  0AB4               	incf	MFRC522_ToCard@i+1,f
  1712  0727  3000               	movlw	0
  1713  0728  07B4               	addwf	MFRC522_ToCard@i+1,f
  1714  0729  2F0A               	goto	l1160
  1715  072A                     l1162:	
  1716                           
  1717                           ;main.c: 297: }
  1718                           ;main.c: 299: MFRC522_Wr( 0x01, command );
  1719  072A  0832               	movf	MFRC522_ToCard@command,w
  1720  072B  00A8               	movwf	??_MFRC522_ToCard
  1721  072C  0828               	movf	??_MFRC522_ToCard,w
  1722  072D  00FB               	movwf	MFRC522_Wr@value
  1723  072E  3001               	movlw	1
  1724  072F  23E5               	fcall	_MFRC522_Wr
  1725                           
  1726                           ;main.c: 300: if (command == 0x0C )
  1727  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0732  0832               	movf	MFRC522_ToCard@command,w
  1730  0733  3A0C               	xorlw	12
  1731  0734  1D03               	skipz
  1732  0735  2F3C               	goto	l1168
  1733                           
  1734                           ;main.c: 301: {
  1735                           ;main.c: 302: MFRC522_Set_Bit( 0x0D, 0x80 );
  1736  0736  3080               	movlw	128
  1737  0737  00A8               	movwf	??_MFRC522_ToCard
  1738  0738  0828               	movf	??_MFRC522_ToCard,w
  1739  0739  00A0               	movwf	MFRC522_Set_Bit@mask
  1740  073A  300D               	movlw	13
  1741  073B  23D7               	fcall	_MFRC522_Set_Bit
  1742  073C                     l1168:	
  1743                           
  1744                           ;main.c: 303: }
  1745                           ;main.c: 306: i = 0xFFFF;
  1746  073C  30FF               	movlw	255
  1747  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1748  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1749  073F  00B3               	movwf	MFRC522_ToCard@i
  1750  0740  30FF               	movlw	255
  1751  0741  00B4               	movwf	MFRC522_ToCard@i+1
  1752  0742                     l1170:	
  1753                           ;main.c: 307: do
  1754                           
  1755                           
  1756                           ;main.c: 308: {
  1757                           ;main.c: 311: n = MFRC522_Rd( 0x04 );
  1758  0742  3004               	movlw	4
  1759  0743  2414               	fcall	_MFRC522_Rd
  1760  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0746  00A8               	movwf	??_MFRC522_ToCard
  1763  0747  0828               	movf	??_MFRC522_ToCard,w
  1764  0748  00B5               	movwf	MFRC522_ToCard@n
  1765                           
  1766                           ;main.c: 312: i--;
  1767  0749  3001               	movlw	1
  1768  074A  02B3               	subwf	MFRC522_ToCard@i,f
  1769  074B  3000               	movlw	0
  1770  074C  1C03               	skipc
  1771  074D  03B4               	decf	MFRC522_ToCard@i+1,f
  1772  074E  02B4               	subwf	MFRC522_ToCard@i+1,f
  1773                           
  1774                           ;main.c: 313: }
  1775                           ;main.c: 314: while ( i && !(n & 0x01) && !( n & waitIRq ) );
  1776  074F  0834               	movf	MFRC522_ToCard@i+1,w
  1777  0750  0433               	iorwf	MFRC522_ToCard@i,w
  1778  0751  1D03               	btfss	3,2
  1779  0752  1835               	btfsc	MFRC522_ToCard@n,0
  1780  0753  2F58               	goto	l1176
  1781  0754  0835               	movf	MFRC522_ToCard@n,w
  1782  0755  052E               	andwf	MFRC522_ToCard@waitIRq,w
  1783  0756  1903               	btfsc	3,2
  1784  0757  2F42               	goto	l1170
  1785  0758                     l1176:	
  1786                           
  1787                           ;main.c: 315: MFRC522_Clear_Bit( 0x0D, 0x80 );
  1788  0758  3080               	movlw	128
  1789  0759  00A8               	movwf	??_MFRC522_ToCard
  1790  075A  0828               	movf	??_MFRC522_ToCard,w
  1791  075B  00A0               	movwf	MFRC522_Clear_Bit@mask
  1792  075C  300D               	movlw	13
  1793  075D  23F4               	fcall	_MFRC522_Clear_Bit
  1794                           
  1795                           ;main.c: 316: if (i != 0)
  1796  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1797  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0760  0834               	movf	MFRC522_ToCard@i+1,w
  1799  0761  0433               	iorwf	MFRC522_ToCard@i,w
  1800  0762  1903               	skipnz
  1801  0763  2FFC               	goto	l80
  1802                           
  1803                           ;main.c: 317: {
  1804                           ;main.c: 318: if( !( MFRC522_Rd( 0x06 ) & 0x1B ) )
  1805  0764  3006               	movlw	6
  1806  0765  2414               	fcall	_MFRC522_Rd
  1807  0766  391B               	andlw	27
  1808  0767  1D03               	btfss	3,2
  1809  0768  2FF6               	goto	l1216
  1810                           
  1811                           ;main.c: 319: {
  1812                           ;main.c: 320: _status = 0;
  1813  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1814  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1815  076B  01AF               	clrf	MFRC522_ToCard@_status
  1816                           
  1817                           ;main.c: 321: if ( n & irqEn & 0x01 )
  1818  076C  0831               	movf	MFRC522_ToCard@irqEn,w
  1819  076D  0535               	andwf	MFRC522_ToCard@n,w
  1820  076E  00A8               	movwf	??_MFRC522_ToCard
  1821  076F  1C28               	btfss	??_MFRC522_ToCard,0
  1822  0770  2F73               	goto	l1188
  1823                           
  1824                           ;main.c: 322: {
  1825                           ;main.c: 323: _status = 1;
  1826  0771  01AF               	clrf	MFRC522_ToCard@_status
  1827  0772  0AAF               	incf	MFRC522_ToCard@_status,f
  1828  0773                     l1188:	
  1829                           
  1830                           ;main.c: 324: }
  1831                           ;main.c: 325: if ( command == 0x0C )
  1832  0773  0832               	movf	MFRC522_ToCard@command,w
  1833  0774  3A0C               	xorlw	12
  1834  0775  1D03               	skipz
  1835  0776  2FFC               	goto	l80
  1836                           
  1837                           ;main.c: 326: {
  1838                           ;main.c: 327: n = MFRC522_Rd( 0x0A );
  1839  0777  300A               	movlw	10
  1840  0778  2414               	fcall	_MFRC522_Rd
  1841  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1842  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1843  077B  00A8               	movwf	??_MFRC522_ToCard
  1844  077C  0828               	movf	??_MFRC522_ToCard,w
  1845  077D  00B5               	movwf	MFRC522_ToCard@n
  1846                           
  1847                           ;main.c: 328: lastBits = MFRC522_Rd( 0x0C ) & 0x07;
  1848  077E  300C               	movlw	12
  1849  077F  2414               	fcall	_MFRC522_Rd
  1850  0780  3907               	andlw	7
  1851  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0783  00A8               	movwf	??_MFRC522_ToCard
  1854  0784  0828               	movf	??_MFRC522_ToCard,w
  1855  0785  00B0               	movwf	MFRC522_ToCard@lastBits
  1856                           
  1857                           ;main.c: 329: if (lastBits)
  1858  0786  0830               	movf	MFRC522_ToCard@lastBits,w
  1859  0787  1903               	btfsc	3,2
  1860  0788  2FAD               	goto	l1196
  1861                           
  1862                           ;main.c: 330: {
  1863                           ;main.c: 331: *backLen = (n-1) * 8 + lastBits;
  1864  0789  0835               	movf	MFRC522_ToCard@n,w
  1865  078A  00A8               	movwf	??_MFRC522_ToCard
  1866  078B  01A9               	clrf	??_MFRC522_ToCard+1
  1867  078C  1003               	clrc
  1868  078D  0DA8               	rlf	??_MFRC522_ToCard,f
  1869  078E  0DA9               	rlf	??_MFRC522_ToCard+1,f
  1870  078F  1003               	clrc
  1871  0790  0DA8               	rlf	??_MFRC522_ToCard,f
  1872  0791  0DA9               	rlf	??_MFRC522_ToCard+1,f
  1873  0792  1003               	clrc
  1874  0793  0DA8               	rlf	??_MFRC522_ToCard,f
  1875  0794  0DA9               	rlf	??_MFRC522_ToCard+1,f
  1876  0795  0830               	movf	MFRC522_ToCard@lastBits,w
  1877  0796  0728               	addwf	??_MFRC522_ToCard,w
  1878  0797  00AA               	movwf	??_MFRC522_ToCard+2
  1879  0798  3000               	movlw	0
  1880  0799  1803               	skipnc
  1881  079A  3001               	movlw	1
  1882  079B  0729               	addwf	??_MFRC522_ToCard+1,w
  1883  079C  00AB               	movwf	??_MFRC522_ToCard+3
  1884  079D  082A               	movf	??_MFRC522_ToCard+2,w
  1885  079E  3EF8               	addlw	248
  1886  079F  00AC               	movwf	??_MFRC522_ToCard+4
  1887  07A0  082B               	movf	??_MFRC522_ToCard+3,w
  1888  07A1  1803               	skipnc
  1889  07A2  3E01               	addlw	1
  1890  07A3  3EFF               	addlw	255
  1891  07A4  00AD               	movwf	??_MFRC522_ToCard+5
  1892  07A5  0827               	movf	MFRC522_ToCard@backLen,w
  1893  07A6  0084               	movwf	4
  1894  07A7  082C               	movf	??_MFRC522_ToCard+4,w
  1895  07A8  1383               	bcf	3,7	;select IRP bank0
  1896  07A9  0080               	movwf	0
  1897  07AA  0A84               	incf	4,f
  1898  07AB  082D               	movf	??_MFRC522_ToCard+5,w
  1899  07AC  2FC0               	goto	L2
  1900  07AD                     l1196:	
  1901                           ;main.c: 332: }
  1902                           
  1903                           
  1904                           ;main.c: 333: else
  1905                           ;main.c: 334: {
  1906                           ;main.c: 335: *backLen = n * 8;
  1907  07AD  0835               	movf	MFRC522_ToCard@n,w
  1908  07AE  00A8               	movwf	??_MFRC522_ToCard
  1909  07AF  01A9               	clrf	??_MFRC522_ToCard+1
  1910  07B0  1003               	clrc
  1911  07B1  0DA8               	rlf	??_MFRC522_ToCard,f
  1912  07B2  0DA9               	rlf	??_MFRC522_ToCard+1,f
  1913  07B3  1003               	clrc
  1914  07B4  0DA8               	rlf	??_MFRC522_ToCard,f
  1915  07B5  0DA9               	rlf	??_MFRC522_ToCard+1,f
  1916  07B6  1003               	clrc
  1917  07B7  0DA8               	rlf	??_MFRC522_ToCard,f
  1918  07B8  0DA9               	rlf	??_MFRC522_ToCard+1,f
  1919  07B9  0827               	movf	MFRC522_ToCard@backLen,w
  1920  07BA  0084               	movwf	4
  1921  07BB  0828               	movf	??_MFRC522_ToCard,w
  1922  07BC  1383               	bcf	3,7	;select IRP bank0
  1923  07BD  0080               	movwf	0
  1924  07BE  0A84               	incf	4,f
  1925  07BF  0829               	movf	??_MFRC522_ToCard+1,w
  1926  07C0                     L2:	
  1927  07C0  0080               	movwf	0
  1928                           
  1929                           ;main.c: 336: }
  1930                           ;main.c: 337: if (n == 0)
  1931  07C1  08B5               	movf	MFRC522_ToCard@n,f
  1932  07C2  1D03               	skipz
  1933  07C3  2FC6               	goto	l1202
  1934                           
  1935                           ;main.c: 338: {
  1936                           ;main.c: 339: n = 1;
  1937  07C4  01B5               	clrf	MFRC522_ToCard@n
  1938  07C5  0AB5               	incf	MFRC522_ToCard@n,f
  1939  07C6                     l1202:	
  1940                           
  1941                           ;main.c: 340: }
  1942                           ;main.c: 341: if (n > 16)
  1943  07C6  3011               	movlw	17
  1944  07C7  0235               	subwf	MFRC522_ToCard@n,w
  1945  07C8  1C03               	skipc
  1946  07C9  2FCE               	goto	l1206
  1947                           
  1948                           ;main.c: 342: {
  1949                           ;main.c: 343: n = 16;
  1950  07CA  3010               	movlw	16
  1951  07CB  00A8               	movwf	??_MFRC522_ToCard
  1952  07CC  0828               	movf	??_MFRC522_ToCard,w
  1953  07CD  00B5               	movwf	MFRC522_ToCard@n
  1954  07CE                     l1206:	
  1955                           
  1956                           ;main.c: 344: }
  1957                           ;main.c: 346: for (i=0; i < n; i++)
  1958  07CE  01B3               	clrf	MFRC522_ToCard@i
  1959  07CF  01B4               	clrf	MFRC522_ToCard@i+1
  1960  07D0                     l1212:	
  1961  07D0  0835               	movf	MFRC522_ToCard@n,w
  1962  07D1  00A8               	movwf	??_MFRC522_ToCard
  1963  07D2  01A9               	clrf	??_MFRC522_ToCard+1
  1964  07D3  0829               	movf	??_MFRC522_ToCard+1,w
  1965  07D4  0234               	subwf	MFRC522_ToCard@i+1,w
  1966  07D5  1D03               	skipz
  1967  07D6  2FD9               	goto	u845
  1968  07D7  0828               	movf	??_MFRC522_ToCard,w
  1969  07D8  0233               	subwf	MFRC522_ToCard@i,w
  1970  07D9                     u845:	
  1971  07D9  1803               	btfsc	3,0
  1972  07DA  2FEF               	goto	l1214
  1973                           
  1974                           ;main.c: 347: {
  1975                           ;main.c: 348: backData[i] = MFRC522_Rd( 0x09 );
  1976  07DB  3009               	movlw	9
  1977  07DC  2414               	fcall	_MFRC522_Rd
  1978  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1979  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1980  07DF  00A8               	movwf	??_MFRC522_ToCard
  1981  07E0  0833               	movf	MFRC522_ToCard@i,w
  1982  07E1  0726               	addwf	MFRC522_ToCard@backData,w
  1983  07E2  00A9               	movwf	??_MFRC522_ToCard+1
  1984  07E3  0829               	movf	??_MFRC522_ToCard+1,w
  1985  07E4  0084               	movwf	4
  1986  07E5  0828               	movf	??_MFRC522_ToCard,w
  1987  07E6  1383               	bcf	3,7	;select IRP bank0
  1988  07E7  0080               	movwf	0
  1989  07E8  3001               	movlw	1
  1990  07E9  07B3               	addwf	MFRC522_ToCard@i,f
  1991  07EA  1803               	skipnc
  1992  07EB  0AB4               	incf	MFRC522_ToCard@i+1,f
  1993  07EC  3000               	movlw	0
  1994  07ED  07B4               	addwf	MFRC522_ToCard@i+1,f
  1995  07EE  2FD0               	goto	l1212
  1996  07EF                     l1214:	
  1997                           
  1998                           ;main.c: 349: }
  1999                           ;main.c: 351: backData[i] = 0;
  2000  07EF  0833               	movf	MFRC522_ToCard@i,w
  2001  07F0  0726               	addwf	MFRC522_ToCard@backData,w
  2002  07F1  00A8               	movwf	??_MFRC522_ToCard
  2003  07F2  0828               	movf	??_MFRC522_ToCard,w
  2004  07F3  0084               	movwf	4
  2005  07F4  0180               	clrf	0
  2006                           
  2007                           ;main.c: 352: }
  2008                           ;main.c: 353: }
  2009  07F5  2FFC               	goto	l80
  2010  07F6                     l1216:	
  2011                           
  2012                           ;main.c: 354: else
  2013                           ;main.c: 355: {
  2014                           ;main.c: 356: _status = 2;
  2015  07F6  3002               	movlw	2
  2016  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  2017  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  2018  07F9  00A8               	movwf	??_MFRC522_ToCard
  2019  07FA  0828               	movf	??_MFRC522_ToCard,w
  2020  07FB  00AF               	movwf	MFRC522_ToCard@_status
  2021  07FC                     l80:	
  2022                           
  2023                           ;main.c: 357: }
  2024                           ;main.c: 358: }
  2025                           ;main.c: 361: return _status;
  2026  07FC  082F               	movf	MFRC522_ToCard@_status,w
  2027  07FD  0008               	return
  2028  07FE                     __end_of_MFRC522_ToCard:	
  2029                           
  2030                           	psect	text9
  2031  03F4                     __ptext9:	
  2032 ;; *************** function _MFRC522_Clear_Bit *****************
  2033 ;; Defined at:
  2034 ;;		line 218 in file "main.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  addr            1    wreg     unsigned char 
  2037 ;;  mask            1    0[BANK0 ] unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  addr            1    3[BANK0 ] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2049 ;;      Params:         0       1       0       0
  2050 ;;      Locals:         0       1       0       0
  2051 ;;      Temps:          0       2       0       0
  2052 ;;      Totals:         0       4       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    2
  2056 ;; This function calls:
  2057 ;;		_MFRC522_Rd
  2058 ;;		_MFRC522_Wr
  2059 ;; This function is called by:
  2060 ;;		_MFRC522_ToCard
  2061 ;;		_MFRC522_CRC
  2062 ;;		_MFRC522_AntiColl
  2063 ;;		_MFRC522_AntennaOff
  2064 ;;		_MFRC522_Halt
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _MFRC522_Clear_Bit
  2070  03F4                     _MFRC522_Clear_Bit:	
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _MFRC522_Clear_Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2074                           ;MFRC522_Clear_Bit@addr stored from wreg
  2075  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2076  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2077  03F6  00A3               	movwf	MFRC522_Clear_Bit@addr
  2078                           
  2079                           ;main.c: 220: MFRC522_Wr( addr, MFRC522_Rd( addr ) & (~mask) );
  2080  03F7  0920               	comf	MFRC522_Clear_Bit@mask,w
  2081  03F8  00A1               	movwf	??_MFRC522_Clear_Bit
  2082  03F9  0823               	movf	MFRC522_Clear_Bit@addr,w
  2083  03FA  2414               	fcall	_MFRC522_Rd
  2084  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2085  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2086  03FD  0521               	andwf	??_MFRC522_Clear_Bit,w
  2087  03FE  00A2               	movwf	??_MFRC522_Clear_Bit+1
  2088  03FF  0822               	movf	??_MFRC522_Clear_Bit+1,w
  2089  0400  00FB               	movwf	MFRC522_Wr@value
  2090  0401  0823               	movf	MFRC522_Clear_Bit@addr,w
  2091  0402  23E5               	fcall	_MFRC522_Wr
  2092  0403  0008               	return
  2093  0404                     __end_of_MFRC522_Clear_Bit:	
  2094                           
  2095                           	psect	text10
  2096  0493                     __ptext10:	
  2097 ;; *************** function _MFRC522_Init *****************
  2098 ;; Defined at:
  2099 ;;		line 238 in file "main.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;		None               void
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2113 ;;      Params:         0       0       0       0
  2114 ;;      Locals:         0       0       0       0
  2115 ;;      Temps:          0       1       0       0
  2116 ;;      Totals:         0       1       0       0
  2117 ;;Total ram usage:        1 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		_MFRC522_AntennaOn
  2122 ;;		_MFRC522_Reset
  2123 ;;		_MFRC522_Wr
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _MFRC522_Init
  2131  0493                     _MFRC522_Init:	
  2132                           
  2133                           ;main.c: 240: TRISAbits.TRISA1 = 0;
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _MFRC522_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2137  0493  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0494  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0495  1085               	bcf	5,1	;volatile
  2140                           
  2141                           ;main.c: 241: TRISAbits.TRISA0 = 0;
  2142  0496  1005               	bcf	5,0	;volatile
  2143                           
  2144                           ;main.c: 242: PORTAbits.RA1 = 1;
  2145  0497  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0498  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0499  1485               	bsf	5,1	;volatile
  2148                           
  2149                           ;main.c: 243: PORTAbits.RA0 = 1;
  2150  049A  1405               	bsf	5,0	;volatile
  2151                           
  2152                           ;main.c: 245: MFRC522_Reset();
  2153  049B  23CE               	fcall	_MFRC522_Reset
  2154                           
  2155                           ;main.c: 247: MFRC522_Wr( 0x2A, 0x8D );
  2156  049C  308D               	movlw	141
  2157  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2158  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2159  049F  00A4               	movwf	??_MFRC522_Init
  2160  04A0  0824               	movf	??_MFRC522_Init,w
  2161  04A1  00FB               	movwf	MFRC522_Wr@value
  2162  04A2  302A               	movlw	42
  2163  04A3  23E5               	fcall	_MFRC522_Wr
  2164                           
  2165                           ;main.c: 248: MFRC522_Wr( 0x2B, 0x3E );
  2166  04A4  303E               	movlw	62
  2167  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2168  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2169  04A7  00A4               	movwf	??_MFRC522_Init
  2170  04A8  0824               	movf	??_MFRC522_Init,w
  2171  04A9  00FB               	movwf	MFRC522_Wr@value
  2172  04AA  302B               	movlw	43
  2173  04AB  23E5               	fcall	_MFRC522_Wr
  2174                           
  2175                           ;main.c: 249: MFRC522_Wr( 0x2D, 30 );
  2176  04AC  301E               	movlw	30
  2177  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2178  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2179  04AF  00A4               	movwf	??_MFRC522_Init
  2180  04B0  0824               	movf	??_MFRC522_Init,w
  2181  04B1  00FB               	movwf	MFRC522_Wr@value
  2182  04B2  302D               	movlw	45
  2183  04B3  23E5               	fcall	_MFRC522_Wr
  2184                           
  2185                           ;main.c: 250: MFRC522_Wr( 0x2C, 0 );
  2186  04B4  01FB               	clrf	MFRC522_Wr@value
  2187  04B5  302C               	movlw	44
  2188  04B6  23E5               	fcall	_MFRC522_Wr
  2189                           
  2190                           ;main.c: 252: MFRC522_Wr( 0x15, 0x40 );
  2191  04B7  3040               	movlw	64
  2192  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2193  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2194  04BA  00A4               	movwf	??_MFRC522_Init
  2195  04BB  0824               	movf	??_MFRC522_Init,w
  2196  04BC  00FB               	movwf	MFRC522_Wr@value
  2197  04BD  3015               	movlw	21
  2198  04BE  23E5               	fcall	_MFRC522_Wr
  2199                           
  2200                           ;main.c: 253: MFRC522_Wr( 0x11, 0x3D );
  2201  04BF  303D               	movlw	61
  2202  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2203  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2204  04C2  00A4               	movwf	??_MFRC522_Init
  2205  04C3  0824               	movf	??_MFRC522_Init,w
  2206  04C4  00FB               	movwf	MFRC522_Wr@value
  2207  04C5  3011               	movlw	17
  2208  04C6  23E5               	fcall	_MFRC522_Wr
  2209                           
  2210                           ;main.c: 258: MFRC522_AntennaOn();
  2211  04C7  23C5               	fcall	_MFRC522_AntennaOn
  2212  04C8  0008               	return
  2213  04C9                     __end_of_MFRC522_Init:	
  2214                           
  2215                           	psect	text11
  2216  03CE                     __ptext11:	
  2217 ;; *************** function _MFRC522_Reset *****************
  2218 ;; Defined at:
  2219 ;;		line 226 in file "main.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;		None               void
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2233 ;;      Params:         0       0       0       0
  2234 ;;      Locals:         0       0       0       0
  2235 ;;      Temps:          0       1       0       0
  2236 ;;      Totals:         0       1       0       0
  2237 ;;Total ram usage:        1 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    2
  2240 ;; This function calls:
  2241 ;;		_MFRC522_Wr
  2242 ;; This function is called by:
  2243 ;;		_MFRC522_Init
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _MFRC522_Reset
  2249  03CE                     _MFRC522_Reset:	
  2250                           
  2251                           ;main.c: 228: MFRC522_Wr( 0x01, 0x0F );
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in _MFRC522_Reset: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2255  03CE  300F               	movlw	15
  2256  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2257  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2258  03D1  00A0               	movwf	??_MFRC522_Reset
  2259  03D2  0820               	movf	??_MFRC522_Reset,w
  2260  03D3  00FB               	movwf	MFRC522_Wr@value
  2261  03D4  3001               	movlw	1
  2262  03D5  23E5               	fcall	_MFRC522_Wr
  2263  03D6  0008               	return
  2264  03D7                     __end_of_MFRC522_Reset:	
  2265                           
  2266                           	psect	text12
  2267  03C5                     __ptext12:	
  2268 ;; *************** function _MFRC522_AntennaOn *****************
  2269 ;; Defined at:
  2270 ;;		line 230 in file "main.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2284 ;;      Params:         0       0       0       0
  2285 ;;      Locals:         0       0       0       0
  2286 ;;      Temps:          0       1       0       0
  2287 ;;      Totals:         0       1       0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    3
  2291 ;; This function calls:
  2292 ;;		_MFRC522_Set_Bit
  2293 ;; This function is called by:
  2294 ;;		_MFRC522_Init
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _MFRC522_AntennaOn
  2300  03C5                     _MFRC522_AntennaOn:	
  2301                           
  2302                           ;main.c: 232: MFRC522_Set_Bit( 0x14, 0x03 );
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _MFRC522_AntennaOn: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2306  03C5  3003               	movlw	3
  2307  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2308  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2309  03C8  00A3               	movwf	??_MFRC522_AntennaOn
  2310  03C9  0823               	movf	??_MFRC522_AntennaOn,w
  2311  03CA  00A0               	movwf	MFRC522_Set_Bit@mask
  2312  03CB  3014               	movlw	20
  2313  03CC  23D7               	fcall	_MFRC522_Set_Bit
  2314  03CD  0008               	return
  2315  03CE                     __end_of_MFRC522_AntennaOn:	
  2316                           
  2317                           	psect	text13
  2318  03D7                     __ptext13:	
  2319 ;; *************** function _MFRC522_Set_Bit *****************
  2320 ;; Defined at:
  2321 ;;		line 222 in file "main.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  addr            1    wreg     unsigned char 
  2324 ;;  mask            1    0[BANK0 ] unsigned char 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  addr            1    2[BANK0 ] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;		None               void
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2336 ;;      Params:         0       1       0       0
  2337 ;;      Locals:         0       1       0       0
  2338 ;;      Temps:          0       1       0       0
  2339 ;;      Totals:         0       3       0       0
  2340 ;;Total ram usage:        3 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    2
  2343 ;; This function calls:
  2344 ;;		_MFRC522_Rd
  2345 ;;		_MFRC522_Wr
  2346 ;; This function is called by:
  2347 ;;		_MFRC522_AntennaOn
  2348 ;;		_MFRC522_ToCard
  2349 ;;		_MFRC522_CRC
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _MFRC522_Set_Bit
  2355  03D7                     _MFRC522_Set_Bit:	
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in _MFRC522_Set_Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2359                           ;MFRC522_Set_Bit@addr stored from wreg
  2360  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2361  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2362  03D9  00A2               	movwf	MFRC522_Set_Bit@addr
  2363                           
  2364                           ;main.c: 224: MFRC522_Wr( addr, MFRC522_Rd( addr ) | mask );
  2365  03DA  0822               	movf	MFRC522_Set_Bit@addr,w
  2366  03DB  2414               	fcall	_MFRC522_Rd
  2367  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2368  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2369  03DE  0420               	iorwf	MFRC522_Set_Bit@mask,w
  2370  03DF  00A1               	movwf	??_MFRC522_Set_Bit
  2371  03E0  0821               	movf	??_MFRC522_Set_Bit,w
  2372  03E1  00FB               	movwf	MFRC522_Wr@value
  2373  03E2  0822               	movf	MFRC522_Set_Bit@addr,w
  2374  03E3  23E5               	fcall	_MFRC522_Wr
  2375  03E4  0008               	return
  2376  03E5                     __end_of_MFRC522_Set_Bit:	
  2377                           
  2378                           	psect	text14
  2379  03E5                     __ptext14:	
  2380 ;; *************** function _MFRC522_Wr *****************
  2381 ;; Defined at:
  2382 ;;		line 202 in file "main.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  addr            1    wreg     unsigned char 
  2385 ;;  value           1   11[COMMON] unsigned char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  addr            1   13[COMMON] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;		None               void
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2397 ;;      Params:         1       0       0       0
  2398 ;;      Locals:         1       0       0       0
  2399 ;;      Temps:          1       0       0       0
  2400 ;;      Totals:         3       0       0       0
  2401 ;;Total ram usage:        3 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    1
  2404 ;; This function calls:
  2405 ;;		_SPI_transfer
  2406 ;; This function is called by:
  2407 ;;		_MFRC522_Clear_Bit
  2408 ;;		_MFRC522_Set_Bit
  2409 ;;		_MFRC522_Reset
  2410 ;;		_MFRC522_Init
  2411 ;;		_MFRC522_ToCard
  2412 ;;		_MFRC522_Request
  2413 ;;		_MFRC522_CRC
  2414 ;;		_MFRC522_AntiColl
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _MFRC522_Wr
  2420  03E5                     _MFRC522_Wr:	
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in _MFRC522_Wr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2424                           ;MFRC522_Wr@addr stored from wreg
  2425  03E5  00FD               	movwf	MFRC522_Wr@addr
  2426                           
  2427                           ;main.c: 204: PORTAbits.RA1 = 0;
  2428  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2429  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2430  03E8  1085               	bcf	5,1	;volatile
  2431                           
  2432                           ;main.c: 205: SPI_transfer( ( addr << 1 ) & 0x7E );
  2433  03E9  087D               	movf	MFRC522_Wr@addr,w
  2434  03EA  00FC               	movwf	??_MFRC522_Wr
  2435  03EB  077C               	addwf	??_MFRC522_Wr,w
  2436  03EC  397E               	andlw	126
  2437  03ED  2646               	fcall	_SPI_transfer
  2438                           
  2439                           ;main.c: 206: SPI_transfer( value );
  2440  03EE  087B               	movf	MFRC522_Wr@value,w
  2441  03EF  2646               	fcall	_SPI_transfer
  2442                           
  2443                           ;main.c: 207: PORTAbits.RA1 = 1;
  2444  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2445  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2446  03F2  1485               	bsf	5,1	;volatile
  2447  03F3  0008               	return
  2448  03F4                     __end_of_MFRC522_Wr:	
  2449                           
  2450                           	psect	text15
  2451  0414                     __ptext15:	
  2452 ;; *************** function _MFRC522_Rd *****************
  2453 ;; Defined at:
  2454 ;;		line 209 in file "main.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  addr            1    wreg     unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  addr            1    9[COMMON] unsigned char 
  2459 ;;  value           1   10[COMMON] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      unsigned char 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2469 ;;      Params:         0       0       0       0
  2470 ;;      Locals:         2       0       0       0
  2471 ;;      Temps:          1       0       0       0
  2472 ;;      Totals:         3       0       0       0
  2473 ;;Total ram usage:        3 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    1
  2476 ;; This function calls:
  2477 ;;		_SPI_transfer
  2478 ;; This function is called by:
  2479 ;;		_MFRC522_Clear_Bit
  2480 ;;		_MFRC522_Set_Bit
  2481 ;;		_MFRC522_ToCard
  2482 ;;		_MFRC522_CRC
  2483 ;;		_MFRC522_Auth
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _MFRC522_Rd
  2489  0414                     _MFRC522_Rd:	
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in _MFRC522_Rd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2493                           ;MFRC522_Rd@addr stored from wreg
  2494  0414  00F9               	movwf	MFRC522_Rd@addr
  2495                           
  2496                           ;main.c: 211: char value;
  2497                           ;main.c: 212: PORTAbits.RA1 = 0;
  2498  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0417  1085               	bcf	5,1	;volatile
  2501                           
  2502                           ;main.c: 213: SPI_transfer( (( addr << 1 ) & 0x7E) | 0x80 );
  2503  0418  0879               	movf	MFRC522_Rd@addr,w
  2504  0419  00F8               	movwf	??_MFRC522_Rd
  2505  041A  0778               	addwf	??_MFRC522_Rd,w
  2506  041B  397E               	andlw	126
  2507  041C  3880               	iorlw	128
  2508  041D  2646               	fcall	_SPI_transfer
  2509                           
  2510                           ;main.c: 214: value = SPI_transfer( 0x00 );
  2511  041E  3000               	movlw	0
  2512  041F  2646               	fcall	_SPI_transfer
  2513  0420  00F8               	movwf	??_MFRC522_Rd
  2514  0421  0878               	movf	??_MFRC522_Rd,w
  2515  0422  00FA               	movwf	MFRC522_Rd@value
  2516                           
  2517                           ;main.c: 215: PORTAbits.RA1 = 1;
  2518  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2519  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2520  0425  1485               	bsf	5,1	;volatile
  2521                           
  2522                           ;main.c: 216: return value;
  2523  0426  087A               	movf	MFRC522_Rd@value,w
  2524  0427  0008               	return
  2525  0428                     __end_of_MFRC522_Rd:	
  2526                           
  2527                           	psect	text16
  2528  0646                     __ptext16:	
  2529 ;; *************** function _SPI_transfer *****************
  2530 ;; Defined at:
  2531 ;;		line 52 in file "main.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  data            1    wreg     unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  data            1    7[COMMON] unsigned char 
  2536 ;;  i               2    5[COMMON] int 
  2537 ;;  i               2    3[COMMON] int 
  2538 ;;  ret             1    1[COMMON] unsigned char 
  2539 ;;  ret             1    2[COMMON] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, btemp+1
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2549 ;;      Params:         0       0       0       0
  2550 ;;      Locals:         7       0       0       0
  2551 ;;      Temps:          1       0       0       0
  2552 ;;      Totals:         8       0       0       0
  2553 ;;Total ram usage:        8 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_MFRC522_Wr
  2559 ;;		_MFRC522_Rd
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function _SPI_transfer
  2565  0646                     _SPI_transfer:	
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in _SPI_transfer: [wreg+status,2+status,0+btemp+1]
  2569                           ;SPI_transfer@data stored from wreg
  2570  0646  00F7               	movwf	SPI_transfer@data
  2571                           
  2572                           ;main.c: 54: unsigned char ret;
  2573                           ;main.c: 55: if(_mode==1 || _mode==3)
  2574  0647  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0648  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0649  0858               	movf	__mode,w
  2577  064A  3A01               	xorlw	1
  2578  064B  1903               	skipnz
  2579  064C  2E51               	goto	l1064
  2580  064D  0858               	movf	__mode,w
  2581  064E  3A03               	xorlw	3
  2582  064F  1D03               	skipz
  2583  0650  2E89               	goto	l1092
  2584  0651                     l1064:	
  2585                           
  2586                           ;main.c: 56: {
  2587                           ;main.c: 57: for(int i=0;i<8;i++)
  2588  0651  01F3               	clrf	SPI_transfer@i
  2589  0652  01F4               	clrf	SPI_transfer@i+1
  2590  0653                     L3:	
  2591  0653  0874               	movf	SPI_transfer@i+1,w
  2592  0654  3A80               	xorlw	128
  2593  0655  00FF               	movwf	127
  2594  0656  3080               	movlw	128
  2595  0657  027F               	subwf	127,w
  2596  0658  1D03               	skipz
  2597  0659  2E5C               	goto	u645
  2598  065A  3008               	movlw	8
  2599  065B  0273               	subwf	SPI_transfer@i,w
  2600  065C                     u645:	
  2601  065C  1803               	btfsc	3,0
  2602  065D  2EC9               	goto	l1114
  2603                           
  2604                           ;main.c: 58: {
  2605                           ;main.c: 60: if(data & 0x80)PORTB |= (1<<6);
  2606  065E  1FF7               	btfss	SPI_transfer@data,7
  2607  065F  2E64               	goto	l1072
  2608  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0662  1706               	bsf	6,6	;volatile
  2611  0663  2E6A               	goto	l32
  2612  0664                     l1072:	
  2613                           
  2614                           ;main.c: 61: else PORTB &= ~(1<<6);
  2615  0664  30BF               	movlw	191
  2616  0665  00F0               	movwf	??_SPI_transfer
  2617  0666  0870               	movf	??_SPI_transfer,w
  2618  0667  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0668  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0669  0586               	andwf	6,f	;volatile
  2621  066A                     l32:	
  2622                           
  2623                           ;main.c: 63: PORTB ^= (1<<7);
  2624  066A  3080               	movlw	128
  2625  066B  00F0               	movwf	??_SPI_transfer
  2626  066C  0870               	movf	??_SPI_transfer,w
  2627  066D  0686               	xorwf	6,f	;volatile
  2628                           
  2629                           ;main.c: 64: if(PORTB & (1<<5))ret|=1;
  2630  066E  1A86               	btfsc	6,5	;volatile
  2631  066F  1472               	bsf	SPI_transfer@ret,0
  2632                           
  2633                           ;main.c: 65: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2634  0670  3003               	movlw	3
  2635  0671  00F0               	movwf	??_SPI_transfer
  2636  0672                     u1267:	
  2637  0672  0BF0               	decfsz	??_SPI_transfer,f
  2638  0673  2E72               	goto	u1267
  2639                           
  2640                           ;main.c: 66: PORTB ^= (1<<7);
  2641  0674  3080               	movlw	128
  2642  0675  00F0               	movwf	??_SPI_transfer
  2643  0676  0870               	movf	??_SPI_transfer,w
  2644  0677  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0678  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0679  0686               	xorwf	6,f	;volatile
  2647                           
  2648                           ;main.c: 68: ret<<=1;
  2649  067A  1003               	clrc
  2650  067B  0DF2               	rlf	SPI_transfer@ret,f
  2651                           
  2652                           ;main.c: 69: data<<=1;
  2653  067C  1003               	clrc
  2654  067D  0DF7               	rlf	SPI_transfer@data,f
  2655                           
  2656                           ;main.c: 70: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2657  067E  3003               	movlw	3
  2658  067F  00F0               	movwf	??_SPI_transfer
  2659  0680                     u1277:	
  2660  0680  0BF0               	decfsz	??_SPI_transfer,f
  2661  0681  2E80               	goto	u1277
  2662  0682  3001               	movlw	1
  2663  0683  07F3               	addwf	SPI_transfer@i,f
  2664  0684  1803               	skipnc
  2665  0685  0AF4               	incf	SPI_transfer@i+1,f
  2666  0686  3000               	movlw	0
  2667  0687  07F4               	addwf	SPI_transfer@i+1,f
  2668  0688  2E53               	goto	L3
  2669  0689                     l1092:	
  2670                           ;main.c: 71: }
  2671                           ;main.c: 72: }
  2672                           
  2673                           
  2674                           ;main.c: 73: else
  2675                           ;main.c: 74: {
  2676                           ;main.c: 75: unsigned char ret;
  2677                           ;main.c: 76: for(int i=0;i<8;i++)
  2678  0689  01F5               	clrf	SPI_transfer@i_119
  2679  068A  01F6               	clrf	SPI_transfer@i_119+1
  2680  068B  0876               	movf	SPI_transfer@i_119+1,w
  2681  068C  3A80               	xorlw	128
  2682  068D  00FF               	movwf	127
  2683  068E  3080               	movlw	128
  2684  068F  027F               	subwf	127,w
  2685  0690  1D03               	skipz
  2686  0691  2E94               	goto	u685
  2687  0692  3008               	movlw	8
  2688  0693  0275               	subwf	SPI_transfer@i_119,w
  2689  0694                     u685:	
  2690  0694  1803               	btfsc	3,0
  2691  0695  2EC9               	goto	l1114
  2692  0696                     l35:	
  2693                           
  2694                           ;main.c: 77: {
  2695                           ;main.c: 79: if(PORTB & (1<<5))ret|=1;
  2696  0696  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0697  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0698  1A86               	btfsc	6,5	;volatile
  2699  0699  1471               	bsf	SPI_transfer@ret_118,0
  2700                           
  2701                           ;main.c: 80: PORTB ^= (1<<7);
  2702  069A  3080               	movlw	128
  2703  069B  00F0               	movwf	??_SPI_transfer
  2704  069C  0870               	movf	??_SPI_transfer,w
  2705  069D  0686               	xorwf	6,f	;volatile
  2706                           
  2707                           ;main.c: 83: if(data & 0x80)PORTB |= (1<<6);
  2708  069E  1FF7               	btfss	SPI_transfer@data,7
  2709  069F  2EA2               	goto	l1106
  2710  06A0  1706               	bsf	6,6	;volatile
  2711  06A1  2EA6               	goto	l1108
  2712  06A2                     l1106:	
  2713                           
  2714                           ;main.c: 84: else PORTB &= ~(1<<6);
  2715  06A2  30BF               	movlw	191
  2716  06A3  00F0               	movwf	??_SPI_transfer
  2717  06A4  0870               	movf	??_SPI_transfer,w
  2718  06A5  0586               	andwf	6,f	;volatile
  2719  06A6                     l1108:	
  2720                           
  2721                           ;main.c: 85: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2722  06A6  3003               	movlw	3
  2723  06A7  00F0               	movwf	??_SPI_transfer
  2724  06A8                     u1287:	
  2725  06A8  0BF0               	decfsz	??_SPI_transfer,f
  2726  06A9  2EA8               	goto	u1287
  2727                           
  2728                           ;main.c: 86: PORTB ^= (1<<7);
  2729  06AA  3080               	movlw	128
  2730  06AB  00F0               	movwf	??_SPI_transfer
  2731  06AC  0870               	movf	??_SPI_transfer,w
  2732  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2733  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2734  06AF  0686               	xorwf	6,f	;volatile
  2735                           
  2736                           ;main.c: 88: ret<<=1;
  2737  06B0  1003               	clrc
  2738  06B1  0DF1               	rlf	SPI_transfer@ret_118,f
  2739                           
  2740                           ;main.c: 89: data<<=1;
  2741  06B2  1003               	clrc
  2742  06B3  0DF7               	rlf	SPI_transfer@data,f
  2743                           
  2744                           ;main.c: 90: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2745  06B4  3003               	movlw	3
  2746  06B5  00F0               	movwf	??_SPI_transfer
  2747  06B6                     u1297:	
  2748  06B6  0BF0               	decfsz	??_SPI_transfer,f
  2749  06B7  2EB6               	goto	u1297
  2750  06B8  3001               	movlw	1
  2751  06B9  07F5               	addwf	SPI_transfer@i_119,f
  2752  06BA  1803               	skipnc
  2753  06BB  0AF6               	incf	SPI_transfer@i_119+1,f
  2754  06BC  3000               	movlw	0
  2755  06BD  07F6               	addwf	SPI_transfer@i_119+1,f
  2756  06BE  0876               	movf	SPI_transfer@i_119+1,w
  2757  06BF  3A80               	xorlw	128
  2758  06C0  00FF               	movwf	127
  2759  06C1  3080               	movlw	128
  2760  06C2  027F               	subwf	127,w
  2761  06C3  1D03               	skipz
  2762  06C4  2EC7               	goto	u715
  2763  06C5  3008               	movlw	8
  2764  06C6  0275               	subwf	SPI_transfer@i_119,w
  2765  06C7                     u715:	
  2766  06C7  1C03               	skipc
  2767  06C8  2E96               	goto	l35
  2768  06C9                     l1114:	
  2769                           
  2770                           ;main.c: 91: }
  2771                           ;main.c: 92: }
  2772                           ;main.c: 93: return ret;
  2773  06C9  0872               	movf	SPI_transfer@ret,w
  2774  06CA  0008               	return
  2775  06CB                     __end_of_SPI_transfer:	
  2776  007E                     btemp	set	126	;btemp
  2777  007E                     wtemp	set	126
  2778  007E                     wtemp0	set	126
  2779  0080                     wtemp1	set	128
  2780  0082                     wtemp2	set	130
  2781  0084                     wtemp3	set	132
  2782  0086                     wtemp4	set	134
  2783  0088                     wtemp5	set	136
  2784  007F                     wtemp6	set	127
  2785  007E                     ttemp	set	126
  2786  007E                     ttemp0	set	126
  2787  0081                     ttemp1	set	129
  2788  0084                     ttemp2	set	132
  2789  0087                     ttemp3	set	135
  2790  007F                     ttemp4	set	127
  2791  007E                     ltemp	set	126
  2792  007E                     ltemp0	set	126
  2793  0082                     ltemp1	set	130
  2794  0086                     ltemp2	set	134
  2795  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      57
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(1) Largest target is 6
		 -> main@UID(BANK0[6]), 

    MFRC522_isCard@TagType	PTR unsigned char  size(1) Largest target is 2
		 -> main@TagType(BANK0[2]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(1) Largest target is 6
		 -> main@UID(BANK0[6]), 

    MFRC522_SelectTag@serNum	PTR unsigned char  size(1) Largest target is 6
		 -> main@UID(BANK0[6]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(1) Largest target is 18
		 -> MFRC522_Write@buff(BANK0[18]), MFRC522_Halt@buff(COMMON[4]), MFRC522_SelectTag@buffer(BANK0[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(1) Largest target is 18
		 -> MFRC522_Write@buff(BANK0[18]), MFRC522_Halt@buff(COMMON[4]), MFRC522_SelectTag@buffer(BANK0[9]), 

    MFRC522_Request@TagType	PTR unsigned char  size(1) Largest target is 2
		 -> main@TagType(BANK0[2]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(1) Largest target is 18
		 -> main@UID(BANK0[6]), main@TagType(BANK0[2]), MFRC522_Write@buff(BANK0[18]), MFRC522_Auth@buff(COMMON[12]), 
		 -> MFRC522_Halt@buff(COMMON[4]), MFRC522_SelectTag@buffer(BANK0[9]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(1) Largest target is 2
		 -> MFRC522_AntiColl@unLen(BANK0[2]), MFRC522_Read@unLen(COMMON[2]), MFRC522_Write@recvBits(COMMON[2]), MFRC522_Auth@recvBits(COMMON[2]), 
		 -> MFRC522_Halt@unLen(COMMON[2]), MFRC522_SelectTag@recvBits(BANK0[2]), MFRC522_Request@backBits(BANK0[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(1) Largest target is 18
		 -> main@UID(BANK0[6]), main@TagType(BANK0[2]), MFRC522_Write@buff(BANK0[18]), MFRC522_Auth@buff(COMMON[12]), 
		 -> MFRC522_Halt@buff(COMMON[4]), MFRC522_SelectTag@buffer(BANK0[9]), 


Critical Paths under _main in COMMON

    _MFRC522_Request->_MFRC522_Wr
    _MFRC522_CRC->_MFRC522_Wr
    _MFRC522_AntiColl->_MFRC522_Wr
    _MFRC522_ToCard->_MFRC522_Wr
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Init->_MFRC522_Wr
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Rd->_SPI_transfer

Critical Paths under _main in BANK0

    _main->_MFRC522_SelectTag
    _MFRC522_isCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_SelectTag->_MFRC522_ToCard
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_Init->_MFRC522_AntennaOn
    _MFRC522_AntennaOn->_MFRC522_Set_Bit

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   35768
                                             42 BANK0     14    14      0
                       _MFRC522_Init
             _MFRC522_ReadCardSerial
                  _MFRC522_SelectTag
                     _MFRC522_isCard
                           _SPI_init
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             2     2      0      66
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MFRC522_isCard                                       2     2      0    8461
                                             31 BANK0      2     2      0
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      9     8      1    8412
                                             22 BANK0      9     8      1
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_SelectTag                                   20    20      0   12944
                                             22 BANK0     20    20      0
                        _MFRC522_CRC
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC                                          6     4      2    5494
                                              4 BANK0      6     4      2
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     3      0   10349
                                             33 BANK0      3     3      0
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                    11    11      0   10255
                                             22 BANK0     11    11      0
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      18    14      4    7068
                                              4 BANK0     18    14      4
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    4     3      1    1755
                                              0 BANK0      4     3      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         1     1      0    3814
                                              4 BANK0      1     1      0
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        1     1      0    1109
                                              0 BANK0      1     1      0
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    1596
                                              3 BANK0      1     1      0
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      3     2      1    1596
                                              0 BANK0      3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           3     2      1    1109
                                             11 COMMON     3     2      1
                         _MFRC522_Rd (ARG)
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           3     3      0     209
                                              8 COMMON     3     3      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         8     8      0     164
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MFRC522_Init
     _MFRC522_AntennaOn
       _MFRC522_Set_Bit
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
     _MFRC522_Reset
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _SPI_transfer
         _SPI_transfer (ARG)
     _MFRC522_Wr
       _MFRC522_Rd (ARG)
         _SPI_transfer
       _SPI_transfer (ARG)
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
       _MFRC522_Clear_Bit
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
           _MFRC522_Rd
             _SPI_transfer
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
               _SPI_transfer
             _SPI_transfer (ARG)
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Set_Bit
           _MFRC522_Rd
             _SPI_transfer
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
               _SPI_transfer
             _SPI_transfer (ARG)
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _SPI_transfer
         _SPI_transfer (ARG)
   _MFRC522_SelectTag
     _MFRC522_CRC
       _MFRC522_Clear_Bit
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
       _MFRC522_Rd
         _SPI_transfer
       _MFRC522_Set_Bit
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _SPI_transfer
         _SPI_transfer (ARG)
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
       _MFRC522_Rd
         _SPI_transfer
       _MFRC522_Set_Bit
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _SPI_transfer
         _SPI_transfer (ARG)
   _MFRC522_isCard
     _MFRC522_Request
       _MFRC522_ToCard
         _MFRC522_Clear_Bit
           _MFRC522_Rd
             _SPI_transfer
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
               _SPI_transfer
             _SPI_transfer (ARG)
         _MFRC522_Rd
           _SPI_transfer
         _MFRC522_Set_Bit
           _MFRC522_Rd
             _SPI_transfer
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
               _SPI_transfer
             _SPI_transfer (ARG)
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _SPI_transfer
           _SPI_transfer (ARG)
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _SPI_transfer
         _SPI_transfer (ARG)
   _SPI_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     38      39       3       71.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      47       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      47      10        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Apr 11 09:33:48 2015

                    __CFG_CP$OFF 0000                     MFRC522_CRC@i 0028                     MFRC522_CRC@n 0027  
                             l21 0454                               l32 066A                               l35 0696  
                             l80 07FC                               l95 0491                      main@TagType 0056  
                    __CFG_LVP$ON 0000                              l149 05DB                              l166 05F2  
                   __CFG_CPD$OFF 0000                              u715 06C7                              u645 065C  
                            u725 0713                              u685 0694                              u845 07D9  
                            fsr0 0004                              indf 0000                   ??_MFRC522_Init 0024  
                           l1106 06A2                             l1114 06C9                             l1202 07C6  
                           l1108 06A6                             l1212 07D0                             l1214 07EF  
                           l1206 07CE                             l1150 06E4            __size_of_SPI_transfer 0085  
                           l1072 0664                             l1064 0651                             l1216 07F6  
                           l1160 070A                             l1152 06EC                             l1144 06D5  
                           l1170 0742                             l1162 072A                             l1146 06DB  
                           l1250 04F5                             l1234 048D                             l1306 0458  
                           l1092 0689                             l1332 057D                             l1324 054D  
                           l1316 0537                             l1262 050F                             l1254 0501  
                           l1334 057E                             l1176 0758                             l1168 073C  
                           l1248 04DD                             l1290 05CF                             l1362 043C  
                           l1346 0412                             l1196 07AD                             l1188 0773  
                           l1284 05BD                             l1486 0639                             l1478 0625  
                           u1205 0623                             u1237 05FB                             u1247 060B  
                           u1257 0640                             u1267 0672                             u1195 05F0  
                           u1277 0680                             u1287 06A8                             u1297 06B6  
                           _main 05DD            MFRC522_AntiColl@unLen 003C                             btemp 007E  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0000  
                           ttemp 007E                             wtemp 007E                 _MFRC522_AntiColl 0580  
                 MFRC522_Rd@addr 0079                  ??_MFRC522_Reset 0020                   MFRC522_Wr@addr 007D  
                          ?_main 0070          ?_MFRC522_ReadCardSerial 0070                    __CFG_WDTE$OFF 0000  
               SPI_transfer@data 0077                     _SPI_transfer 0646                            _PORTB 0006  
                          _TRISB 0086              __size_of_MFRC522_Rd 0014              __size_of_MFRC522_Wr 000F  
                          __mode 0058        MFRC522_SelectTag@recvBits 0047           MFRC522_AntiColl@serNum 0040  
                          ltemp0 007E                 __end_of_SPI_init 045E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                _MFRC522_Clear_Bit 03F4  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F               ?_MFRC522_Clear_Bit 0020          MFRC522_SelectTag@buffer 003B  
        MFRC522_SelectTag@serNum 0046                _MFRC522_AntennaOn 03C5                   __CFG_MCLRE$OFF 0000  
                __initialization 07FE                     __end_of_main 0646               ?_MFRC522_AntennaOn 0070  
            ??_MFRC522_Clear_Bit 0021        MFRC522_ReadCardSerial@str 0043                  MFRC522_Rd@value 007A  
 __end_of_MFRC522_ReadCardSerial 043E                 ??_MFRC522_ToCard 0028         __size_of_MFRC522_Set_Bit 000E  
       __size_of_MFRC522_Request 0035                           ??_main 004A              ??_MFRC522_AntennaOn 0023  
                MFRC522_ToCard@i 0033                  MFRC522_ToCard@n 0035                 ??_MFRC522_isCard 003F  
          MFRC522_ToCard@backLen 0027                  MFRC522_Wr@value 007B        __end_of_MFRC522_Clear_Bit 0404  
          MFRC522_ToCard@_status 002F            MFRC522_ToCard@command 0032                SPI_transfer@i_119 0075  
              _MFRC522_SelectTag 0524            MFRC522_ToCard@sendLen 0025               ?_MFRC522_SelectTag 0070  
          MFRC522_ToCard@waitIRq 002E        __end_of_MFRC522_AntennaOn 03CE                   __CFG_PWRTE$OFF 0000  
           __size_of_MFRC522_CRC 005B              ??_MFRC522_SelectTag 0036             __end_of_MFRC522_Init 04C9  
        MFRC522_AntiColl@_status 003E        __end_of_MFRC522_SelectTag 0580         MFRC522_SelectTag@_status 0044  
        __end_of__initialization 07FE           MFRC522_Request@TagType 0036                     ??_MFRC522_Rd 0078  
                   ??_MFRC522_Wr 007C            MFRC522_isCard@TagType 0040                     SPI_init@mode 0071  
                 __pcstackCOMMON 0070           MFRC522_Request@_status 003C                        ?_SPI_init 0070  
         MFRC522_Request@reqMode 003B         __end_of_MFRC522_AntiColl 05DD                ??_MFRC522_Set_Bit 0021  
             __end_of_MFRC522_Rd 0428               __end_of_MFRC522_Wr 03F4                ??_MFRC522_Request 0037  
     __size_of_MFRC522_Clear_Bit 0010           MFRC522_ToCard@backData 0026       __size_of_MFRC522_AntennaOn 0009  
              MFRC522_CRC@dataIn 0029                       __pmaintext 05DD                MFRC522_CRC@length 0024  
             MFRC522_SelectTag@i 0049           MFRC522_ToCard@lastBits 0030                       ??_SPI_init 0070  
         MFRC522_ToCard@sendData 0024       __size_of_MFRC522_SelectTag 005C            __size_of_MFRC522_Init 0036  
          __end_of_MFRC522_Reset 03D7                          __ptext1 043E                          __ptext2 0404  
                        __ptext3 045E                          __ptext4 0524                          __ptext5 04C9  
                        __ptext6 0428                          __ptext7 0580                          __ptext8 06CB  
                        __ptext9 03F4                          main@UID 004E                     _MFRC522_Init 0493  
           end_of_initialization 07FE    MFRC522_ReadCardSerial@_status 0042                        _PORTAbits 0005  
                      _PORTBbits 0006                        _TRISAbits 0085                        _TRISBbits 0086  
                  ??_MFRC522_CRC 0026                  _MFRC522_Set_Bit 03D7          MFRC522_Request@backBits 003D  
            MFRC522_ToCard@irqEn 0031                  SPI_transfer@ret 0072                  _MFRC522_Request 045E  
            start_initialization 07FE                __size_of_SPI_init 0020                ?_MFRC522_AntiColl 0070  
              MFRC522_AntiColl@i 003F          __size_of_MFRC522_ToCard 0133               ??_MFRC522_AntiColl 0036  
        __size_of_MFRC522_isCard 0010         ??_MFRC522_ReadCardSerial 0041              __end_of_MFRC522_CRC 0524  
                  ?_SPI_transfer 0070                        ___latbits 0000                    __pcstackBANK0 0020  
                  SPI_transfer@i 0073                        __pnvBANK0 0058          __end_of_MFRC522_Set_Bit 03E5  
             MFRC522_CRC@dataOut 0025          __end_of_MFRC522_Request 0493              MFRC522_Set_Bit@addr 0022  
            MFRC522_Set_Bit@mask 0020                   ??_SPI_transfer 0070                      _MFRC522_CRC 04C9  
__size_of_MFRC522_ReadCardSerial 0016              SPI_transfer@ret_118 0071                        main@i_243 0054  
                       _SPI_init 043E                   _MFRC522_ToCard 06CB                   _MFRC522_isCard 0404  
          MFRC522_SelectTag@size 0045           __size_of_MFRC522_Reset 0009                 ?_MFRC522_Set_Bit 0020  
          MFRC522_Clear_Bit@addr 0023                 ?_MFRC522_Request 0036            MFRC522_Clear_Bit@mask 0020  
         __end_of_MFRC522_ToCard 07FE           _MFRC522_ReadCardSerial 0428                         __ptext10 0493  
                       __ptext11 03CE                         __ptext12 03C5                         __ptext13 03D7  
                       __ptext14 03E5                         __ptext15 0414                         __ptext16 0646  
         __end_of_MFRC522_isCard 0414      MFRC522_AntiColl@serNumCheck 003B                    __size_of_main 0069  
           __end_of_SPI_transfer 06CB                       _MFRC522_Rd 0414                       _MFRC522_Wr 03E5  
      __size_of_MFRC522_AntiColl 005D                         main@size 004D                    _MFRC522_Reset 03CE  
                ?_MFRC522_ToCard 0024                  ?_MFRC522_isCard 0070                   ?_MFRC522_Reset 0070  
                  ?_MFRC522_Init 0070               __CFG_FOSC$INTOSCIO 0000                     ?_MFRC522_CRC 0024  
                    ?_MFRC522_Rd 0070                      ?_MFRC522_Wr 007B  
